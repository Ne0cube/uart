Component: ARM Compiler 6.16 Tool: armlink [5dfeaa00]

==============================================================================

Section Cross References

    freertos_uart.o(.text.main) refers to pin_mux.o(.text.BOARD_InitBootPins) for BOARD_InitBootPins
    freertos_uart.o(.text.main) refers to clock_config.o(.text.BOARD_InitBootClocks) for BOARD_InitBootClocks
    freertos_uart.o(.text.main) refers to freertos_uart.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    freertos_uart.o(.text.main) refers to freertos_uart.o(.text.uart_task) for uart_task
    freertos_uart.o(.text.main) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    freertos_uart.o(.text.main) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    freertos_uart.o(.text.main) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    freertos_uart.o(.ARM.exidx.text.main) refers to freertos_uart.o(.text.main) for [Anonymous Symbol]
    freertos_uart.o(.ARM.exidx.text.__NVIC_SetPriority) refers to freertos_uart.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    freertos_uart.o(.text.uart_task) refers to fsl_clock.o(.text.CLOCK_GetFreq) for CLOCK_GetFreq
    freertos_uart.o(.text.uart_task) refers to freertos_uart.o(.data.uart_config) for uart_config
    freertos_uart.o(.text.uart_task) refers to freertos_uart.o(.bss.handle) for handle
    freertos_uart.o(.text.uart_task) refers to freertos_uart.o(.bss.t_handle) for t_handle
    freertos_uart.o(.text.uart_task) refers to fsl_uart_freertos.o(.text.UART_RTOS_Init) for UART_RTOS_Init
    freertos_uart.o(.text.uart_task) refers to tasks.o(.text.vTaskSuspend) for vTaskSuspend
    freertos_uart.o(.text.uart_task) refers to freertos_uart.o(.data.to_send) for to_send
    freertos_uart.o(.text.uart_task) refers to strlen.o(.text) for strlen
    freertos_uart.o(.text.uart_task) refers to fsl_uart_freertos.o(.text.UART_RTOS_Send) for UART_RTOS_Send
    freertos_uart.o(.text.uart_task) refers to freertos_uart.o(.bss.recv_buffer) for recv_buffer
    freertos_uart.o(.text.uart_task) refers to freertos_uart.o(.data.send_ring_overrun) for send_ring_overrun
    freertos_uart.o(.text.uart_task) refers to freertos_uart.o(.data.send_hardware_overrun) for send_hardware_overrun
    freertos_uart.o(.text.uart_task) refers to fsl_uart_freertos.o(.text.UART_RTOS_Receive) for UART_RTOS_Receive
    freertos_uart.o(.text.uart_task) refers to fsl_uart_freertos.o(.text.UART_RTOS_Deinit) for UART_RTOS_Deinit
    freertos_uart.o(.ARM.exidx.text.uart_task) refers to freertos_uart.o(.text.uart_task) for [Anonymous Symbol]
    freertos_uart.o(.data.to_send) refers to freertos_uart.o(.rodata.str1.1) for [Anonymous Symbol]
    freertos_uart.o(.data.send_ring_overrun) refers to freertos_uart.o(.rodata.str1.1) for [Anonymous Symbol]
    freertos_uart.o(.data.send_hardware_overrun) refers to freertos_uart.o(.rodata.str1.1) for [Anonymous Symbol]
    freertos_uart.o(.data.uart_config) refers to freertos_uart.o(.bss.background_buffer) for background_buffer
    pin_mux.o(.text.BOARD_InitBootPins) refers to pin_mux.o(.text.BOARD_InitPins) for BOARD_InitPins
    pin_mux.o(.ARM.exidx.text.BOARD_InitBootPins) refers to pin_mux.o(.text.BOARD_InitBootPins) for [Anonymous Symbol]
    pin_mux.o(.text.BOARD_InitPins) refers to pin_mux.o(.text.CLOCK_EnableClock) for CLOCK_EnableClock
    pin_mux.o(.text.BOARD_InitPins) refers to pin_mux.o(.text.PORT_SetPinMux) for PORT_SetPinMux
    pin_mux.o(.ARM.exidx.text.BOARD_InitPins) refers to pin_mux.o(.text.BOARD_InitPins) for [Anonymous Symbol]
    pin_mux.o(.ARM.exidx.text.CLOCK_EnableClock) refers to pin_mux.o(.text.CLOCK_EnableClock) for [Anonymous Symbol]
    pin_mux.o(.ARM.exidx.text.PORT_SetPinMux) refers to pin_mux.o(.text.PORT_SetPinMux) for [Anonymous Symbol]
    board.o(.text.BOARD_InitDebugConsole) refers to fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq) for CLOCK_GetCoreSysClkFreq
    board.o(.text.BOARD_InitDebugConsole) refers to fsl_debug_console.o(.text.DbgConsole_Init) for DbgConsole_Init
    board.o(.ARM.exidx.text.BOARD_InitDebugConsole) refers to board.o(.text.BOARD_InitDebugConsole) for [Anonymous Symbol]
    clock_config.o(.text.BOARD_InitBootClocks) refers to clock_config.o(.text.BOARD_BootClockRUN) for BOARD_BootClockRUN
    clock_config.o(.ARM.exidx.text.BOARD_InitBootClocks) refers to clock_config.o(.text.BOARD_InitBootClocks) for [Anonymous Symbol]
    clock_config.o(.text.BOARD_BootClockRUN) refers to clock_config.o(.text.CLOCK_SetSimSafeDivs) for CLOCK_SetSimSafeDivs
    clock_config.o(.text.BOARD_BootClockRUN) refers to clock_config.o(.rodata.oscConfig_BOARD_BootClockRUN) for oscConfig_BOARD_BootClockRUN
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_clock.o(.text.CLOCK_InitOsc0) for CLOCK_InitOsc0
    clock_config.o(.text.BOARD_BootClockRUN) refers to clock_config.o(.text.CLOCK_SetXtal0Freq) for CLOCK_SetXtal0Freq
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_clock.o(.text.CLOCK_SetInternalRefClkConfig) for CLOCK_SetInternalRefClkConfig
    clock_config.o(.text.BOARD_BootClockRUN) refers to clock_config.o(.text.CLOCK_CONFIG_SetFllExtRefDiv) for CLOCK_CONFIG_SetFllExtRefDiv
    clock_config.o(.text.BOARD_BootClockRUN) refers to clock_config.o(.rodata.mcgConfig_BOARD_BootClockRUN) for mcgConfig_BOARD_BootClockRUN
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_clock.o(.text.CLOCK_BootToPeeMode) for CLOCK_BootToPeeMode
    clock_config.o(.text.BOARD_BootClockRUN) refers to clock_config.o(.rodata.simConfig_BOARD_BootClockRUN) for simConfig_BOARD_BootClockRUN
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_clock.o(.text.CLOCK_SetSimConfig) for CLOCK_SetSimConfig
    clock_config.o(.text.BOARD_BootClockRUN) refers to system_mk64f12.o(.data.SystemCoreClock) for SystemCoreClock
    clock_config.o(.ARM.exidx.text.BOARD_BootClockRUN) refers to clock_config.o(.text.BOARD_BootClockRUN) for [Anonymous Symbol]
    clock_config.o(.ARM.exidx.text.CLOCK_SetSimSafeDivs) refers to clock_config.o(.text.CLOCK_SetSimSafeDivs) for [Anonymous Symbol]
    clock_config.o(.text.CLOCK_SetXtal0Freq) refers to fsl_clock.o(.bss.g_xtal0Freq) for g_xtal0Freq
    clock_config.o(.ARM.exidx.text.CLOCK_SetXtal0Freq) refers to clock_config.o(.text.CLOCK_SetXtal0Freq) for [Anonymous Symbol]
    clock_config.o(.ARM.exidx.text.CLOCK_CONFIG_SetFllExtRefDiv) refers to clock_config.o(.text.CLOCK_CONFIG_SetFllExtRefDiv) for [Anonymous Symbol]
    clock_config.o(.text.BOARD_BootClockVLPR) refers to clock_config.o(.text.CLOCK_SetSimSafeDivs) for CLOCK_SetSimSafeDivs
    clock_config.o(.text.BOARD_BootClockVLPR) refers to fsl_clock.o(.text.CLOCK_BootToBlpiMode) for CLOCK_BootToBlpiMode
    clock_config.o(.text.BOARD_BootClockVLPR) refers to clock_config.o(.rodata.simConfig_BOARD_BootClockVLPR) for simConfig_BOARD_BootClockVLPR
    clock_config.o(.text.BOARD_BootClockVLPR) refers to fsl_clock.o(.text.CLOCK_SetSimConfig) for CLOCK_SetSimConfig
    clock_config.o(.text.BOARD_BootClockVLPR) refers to clock_config.o(.text.SMC_SetPowerModeProtection) for SMC_SetPowerModeProtection
    clock_config.o(.text.BOARD_BootClockVLPR) refers to fsl_smc.o(.text.SMC_SetPowerModeVlpr) for SMC_SetPowerModeVlpr
    clock_config.o(.text.BOARD_BootClockVLPR) refers to clock_config.o(.text.SMC_GetPowerModeState) for SMC_GetPowerModeState
    clock_config.o(.text.BOARD_BootClockVLPR) refers to system_mk64f12.o(.data.SystemCoreClock) for SystemCoreClock
    clock_config.o(.ARM.exidx.text.BOARD_BootClockVLPR) refers to clock_config.o(.text.BOARD_BootClockVLPR) for [Anonymous Symbol]
    clock_config.o(.ARM.exidx.text.SMC_SetPowerModeProtection) refers to clock_config.o(.text.SMC_SetPowerModeProtection) for [Anonymous Symbol]
    clock_config.o(.ARM.exidx.text.SMC_GetPowerModeState) refers to clock_config.o(.text.SMC_GetPowerModeState) for [Anonymous Symbol]
    fsl_gpio.o(.text.GPIO_PinInit) refers to fsl_gpio.o(.text.GPIO_PinWrite) for GPIO_PinWrite
    fsl_gpio.o(.text.GPIO_PinInit) refers to fsl_gpio.o(.rodata.str1.1) for .L.str.1
    fsl_gpio.o(.text.GPIO_PinInit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_gpio.o(.ARM.exidx.text.GPIO_PinInit) refers to fsl_gpio.o(.text.GPIO_PinInit) for [Anonymous Symbol]
    fsl_gpio.o(.ARM.exidx.text.GPIO_PinWrite) refers to fsl_gpio.o(.text.GPIO_PinWrite) for [Anonymous Symbol]
    fsl_gpio.o(.text.GPIO_PortGetInterruptFlags) refers to fsl_gpio.o(.text.GPIO_GetInstance) for GPIO_GetInstance
    fsl_gpio.o(.text.GPIO_PortGetInterruptFlags) refers to fsl_gpio.o(.rodata.s_portBases) for s_portBases
    fsl_gpio.o(.ARM.exidx.text.GPIO_PortGetInterruptFlags) refers to fsl_gpio.o(.text.GPIO_PortGetInterruptFlags) for [Anonymous Symbol]
    fsl_gpio.o(.text.GPIO_GetInstance) refers to fsl_gpio.o(.rodata.str1.1) for .L.str.1
    fsl_gpio.o(.text.GPIO_GetInstance) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_gpio.o(.ARM.exidx.text.GPIO_GetInstance) refers to fsl_gpio.o(.text.GPIO_GetInstance) for [Anonymous Symbol]
    fsl_gpio.o(.text.GPIO_PortClearInterruptFlags) refers to fsl_gpio.o(.text.GPIO_GetInstance) for GPIO_GetInstance
    fsl_gpio.o(.text.GPIO_PortClearInterruptFlags) refers to fsl_gpio.o(.rodata.s_portBases) for s_portBases
    fsl_gpio.o(.ARM.exidx.text.GPIO_PortClearInterruptFlags) refers to fsl_gpio.o(.text.GPIO_PortClearInterruptFlags) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetOsc0ErClkFreq) refers to fsl_clock.o(.bss.g_xtal0Freq) for g_xtal0Freq
    fsl_clock.o(.text.CLOCK_GetOsc0ErClkFreq) refers to fsl_clock.o(.rodata.str1.1) for .L.str.1
    fsl_clock.o(.text.CLOCK_GetOsc0ErClkFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetOsc0ErClkFreq) refers to fsl_clock.o(.text.CLOCK_GetOsc0ErClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetEr32kClkFreq) refers to fsl_clock.o(.text.CLOCK_GetOsc0ErClkFreq) for CLOCK_GetOsc0ErClkFreq
    fsl_clock.o(.text.CLOCK_GetEr32kClkFreq) refers to fsl_clock.o(.bss.g_xtal32Freq) for g_xtal32Freq
    fsl_clock.o(.text.CLOCK_GetEr32kClkFreq) refers to fsl_clock.o(.rodata.str1.1) for .L.str.1
    fsl_clock.o(.text.CLOCK_GetEr32kClkFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetEr32kClkFreq) refers to fsl_clock.o(.text.CLOCK_GetEr32kClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetPllFllSelClkFreq) refers to fsl_clock.o(.text.CLOCK_GetFllFreq) for CLOCK_GetFllFreq
    fsl_clock.o(.text.CLOCK_GetPllFllSelClkFreq) refers to fsl_clock.o(.text.CLOCK_GetPll0Freq) for CLOCK_GetPll0Freq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetPllFllSelClkFreq) refers to fsl_clock.o(.text.CLOCK_GetPllFllSelClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetFllFreq) refers to fsl_clock.o(.text.CLOCK_GetFllRefClkFreq) for CLOCK_GetFllRefClkFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetFllFreq) refers to fsl_clock.o(.text.CLOCK_GetFllFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetPll0Freq) refers to fsl_clock.o(.text.CLOCK_GetPll0RefFreq) for CLOCK_GetPll0RefFreq
    fsl_clock.o(.text.CLOCK_GetPll0Freq) refers to fsl_clock.o(.rodata.str1.1) for .L.str.1
    fsl_clock.o(.text.CLOCK_GetPll0Freq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetPll0Freq) refers to fsl_clock.o(.text.CLOCK_GetPll0Freq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetPlatClkFreq) refers to fsl_clock.o(.text.CLOCK_GetOutClkFreq) for CLOCK_GetOutClkFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetPlatClkFreq) refers to fsl_clock.o(.text.CLOCK_GetPlatClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetOutClkFreq) refers to fsl_clock.o(.text.CLOCK_GetFllFreq) for CLOCK_GetFllFreq
    fsl_clock.o(.text.CLOCK_GetOutClkFreq) refers to fsl_clock.o(.text.CLOCK_GetMcgExtClkFreq) for CLOCK_GetMcgExtClkFreq
    fsl_clock.o(.text.CLOCK_GetOutClkFreq) refers to fsl_clock.o(.text.CLOCK_GetPll0Freq) for CLOCK_GetPll0Freq
    fsl_clock.o(.text.CLOCK_GetOutClkFreq) refers to fsl_clock.o(.text.CLOCK_GetInternalRefClkSelectFreq) for CLOCK_GetInternalRefClkSelectFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetOutClkFreq) refers to fsl_clock.o(.text.CLOCK_GetOutClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetFlashClkFreq) refers to fsl_clock.o(.text.CLOCK_GetOutClkFreq) for CLOCK_GetOutClkFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetFlashClkFreq) refers to fsl_clock.o(.text.CLOCK_GetFlashClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetFlexBusClkFreq) refers to fsl_clock.o(.text.CLOCK_GetOutClkFreq) for CLOCK_GetOutClkFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetFlexBusClkFreq) refers to fsl_clock.o(.text.CLOCK_GetFlexBusClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetBusClkFreq) refers to fsl_clock.o(.text.CLOCK_GetOutClkFreq) for CLOCK_GetOutClkFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetBusClkFreq) refers to fsl_clock.o(.text.CLOCK_GetBusClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq) refers to fsl_clock.o(.text.CLOCK_GetOutClkFreq) for CLOCK_GetOutClkFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetCoreSysClkFreq) refers to fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_clock.o(.text.CLOCK_GetOutClkFreq) for CLOCK_GetOutClkFreq
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_clock.o(.text.CLOCK_GetPllFllSelClkFreq) for CLOCK_GetPllFllSelClkFreq
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_clock.o(.text.CLOCK_GetEr32kClkFreq) for CLOCK_GetEr32kClkFreq
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_clock.o(.text.CLOCK_GetOsc0ErClkFreq) for CLOCK_GetOsc0ErClkFreq
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_clock.o(.text.CLOCK_GetFixedFreqClkFreq) for CLOCK_GetFixedFreqClkFreq
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_clock.o(.text.CLOCK_GetInternalRefClkFreq) for CLOCK_GetInternalRefClkFreq
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_clock.o(.text.CLOCK_GetFllFreq) for CLOCK_GetFllFreq
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_clock.o(.text.CLOCK_GetPll0Freq) for CLOCK_GetPll0Freq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetFreq) refers to fsl_clock.o(.text.CLOCK_GetFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetFixedFreqClkFreq) refers to fsl_clock.o(.text.CLOCK_GetFllRefClkFreq) for CLOCK_GetFllRefClkFreq
    fsl_clock.o(.text.CLOCK_GetFixedFreqClkFreq) refers to fsl_clock.o(.text.CLOCK_GetOutClkFreq) for CLOCK_GetOutClkFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetFixedFreqClkFreq) refers to fsl_clock.o(.text.CLOCK_GetFixedFreqClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetInternalRefClkFreq) refers to fsl_clock.o(.text.CLOCK_GetInternalRefClkSelectFreq) for CLOCK_GetInternalRefClkSelectFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetInternalRefClkFreq) refers to fsl_clock.o(.text.CLOCK_GetInternalRefClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_SetSimConfig) refers to fsl_clock.o(.text.CLOCK_SetPllFllSelClock) for CLOCK_SetPllFllSelClock
    fsl_clock.o(.text.CLOCK_SetSimConfig) refers to fsl_clock.o(.text.CLOCK_SetEr32kClock) for CLOCK_SetEr32kClock
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetSimConfig) refers to fsl_clock.o(.text.CLOCK_SetSimConfig) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetPllFllSelClock) refers to fsl_clock.o(.text.CLOCK_SetPllFllSelClock) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetEr32kClock) refers to fsl_clock.o(.text.CLOCK_SetEr32kClock) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_EnableUsbfs0Clock) refers to fsl_clock.o(.text.CLOCK_DisableClock) for CLOCK_DisableClock
    fsl_clock.o(.text.CLOCK_EnableUsbfs0Clock) refers to fsl_clock.o(.text.CLOCK_EnableClock) for CLOCK_EnableClock
    fsl_clock.o(.ARM.exidx.text.CLOCK_EnableUsbfs0Clock) refers to fsl_clock.o(.text.CLOCK_EnableUsbfs0Clock) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_DisableClock) refers to fsl_clock.o(.text.CLOCK_DisableClock) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_EnableClock) refers to fsl_clock.o(.text.CLOCK_EnableClock) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetInternalRefClkSelectFreq) refers to fsl_clock.o(.data.s_slowIrcFreq) for s_slowIrcFreq
    fsl_clock.o(.text.CLOCK_GetInternalRefClkSelectFreq) refers to fsl_clock.o(.data.s_fastIrcFreq) for s_fastIrcFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetInternalRefClkSelectFreq) refers to fsl_clock.o(.text.CLOCK_GetInternalRefClkSelectFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetMcgExtClkFreq) refers to fsl_clock.o(.bss.g_xtal0Freq) for g_xtal0Freq
    fsl_clock.o(.text.CLOCK_GetMcgExtClkFreq) refers to fsl_clock.o(.rodata.str1.1) for .L.str.1
    fsl_clock.o(.text.CLOCK_GetMcgExtClkFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.text.CLOCK_GetMcgExtClkFreq) refers to fsl_clock.o(.bss.g_xtal32Freq) for g_xtal32Freq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetMcgExtClkFreq) refers to fsl_clock.o(.text.CLOCK_GetMcgExtClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetFllRefClkFreq) refers to fsl_clock.o(.text.CLOCK_GetFllExtRefClkFreq) for CLOCK_GetFllExtRefClkFreq
    fsl_clock.o(.text.CLOCK_GetFllRefClkFreq) refers to fsl_clock.o(.data.s_slowIrcFreq) for s_slowIrcFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetFllRefClkFreq) refers to fsl_clock.o(.text.CLOCK_GetFllRefClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetPll0RefFreq) refers to fsl_clock.o(.text.CLOCK_GetMcgExtClkFreq) for CLOCK_GetMcgExtClkFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetPll0RefFreq) refers to fsl_clock.o(.text.CLOCK_GetPll0RefFreq) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetExternalRefClkConfig) refers to fsl_clock.o(.text.CLOCK_SetExternalRefClkConfig) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetInternalRefClkConfig) refers to fsl_clock.o(.text.CLOCK_SetInternalRefClkConfig) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_CalcPllDiv) refers to fsl_clock.o(.text.CLOCK_CalcPllDiv) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_EnablePll0) refers to fsl_clock.o(.rodata.str1.1) for .L.str.4
    fsl_clock.o(.text.CLOCK_EnablePll0) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_EnablePll0) refers to fsl_clock.o(.text.CLOCK_EnablePll0) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetOsc0MonitorMode) refers to fsl_clock.o(.text.CLOCK_SetOsc0MonitorMode) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetRtcOscMonitorMode) refers to fsl_clock.o(.text.CLOCK_SetRtcOscMonitorMode) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetPll0MonitorMode) refers to fsl_clock.o(.text.CLOCK_SetPll0MonitorMode) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetStatusFlags) refers to fsl_clock.o(.text.CLOCK_GetStatusFlags) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_ClearStatusFlags) refers to fsl_clock.o(.text.CLOCK_ClearStatusFlags) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_InitOsc0) refers to fsl_clock.o(.text.CLOCK_GetOscRangeFromFreq) for CLOCK_GetOscRangeFromFreq
    fsl_clock.o(.text.CLOCK_InitOsc0) refers to fsl_clock.o(.text.OSC_SetCapLoad) for OSC_SetCapLoad
    fsl_clock.o(.text.CLOCK_InitOsc0) refers to fsl_clock.o(.text.OSC_SetExtRefClkConfig) for OSC_SetExtRefClkConfig
    fsl_clock.o(.ARM.exidx.text.CLOCK_InitOsc0) refers to fsl_clock.o(.text.CLOCK_InitOsc0) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetOscRangeFromFreq) refers to fsl_clock.o(.text.CLOCK_GetOscRangeFromFreq) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.OSC_SetCapLoad) refers to fsl_clock.o(.text.OSC_SetCapLoad) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.OSC_SetExtRefClkConfig) refers to fsl_clock.o(.text.OSC_SetExtRefClkConfig) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_DeinitOsc0) refers to fsl_clock.o(.text.CLOCK_DeinitOsc0) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_SetSlowIrcFreq) refers to fsl_clock.o(.data.s_slowIrcFreq) for s_slowIrcFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetSlowIrcFreq) refers to fsl_clock.o(.text.CLOCK_SetSlowIrcFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_SetFastIrcFreq) refers to fsl_clock.o(.data.s_fastIrcFreq) for s_fastIrcFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetFastIrcFreq) refers to fsl_clock.o(.text.CLOCK_SetFastIrcFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_TrimInternalRefClk) refers to fsl_clock.o(.rodata.cst16) for CLOCK_TrimInternalRefClk.trimRange
    fsl_clock.o(.text.CLOCK_TrimInternalRefClk) refers to fsl_clock.o(.data.s_fastIrcFreq) for s_fastIrcFreq
    fsl_clock.o(.text.CLOCK_TrimInternalRefClk) refers to fsl_clock.o(.data.s_slowIrcFreq) for s_slowIrcFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_TrimInternalRefClk) refers to fsl_clock.o(.text.CLOCK_TrimInternalRefClk) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetMode) refers to fsl_clock.o(.text.CLOCK_GetMode) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetFeiMode) refers to fsl_clock.o(.text.CLOCK_SetFeiMode) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetFeeMode) refers to fsl_clock.o(.text.CLOCK_SetFeeMode) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetFbiMode) refers to fsl_clock.o(.text.CLOCK_SetFbiMode) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetFbeMode) refers to fsl_clock.o(.text.CLOCK_SetFbeMode) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetBlpiMode) refers to fsl_clock.o(.text.CLOCK_SetBlpiMode) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetBlpeMode) refers to fsl_clock.o(.text.CLOCK_SetBlpeMode) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_SetPbeMode) refers to fsl_clock.o(.text.CLOCK_EnablePll0) for CLOCK_EnablePll0
    fsl_clock.o(.text.CLOCK_SetPbeMode) refers to fsl_clock.o(.rodata.str1.1) for .L.str.4
    fsl_clock.o(.text.CLOCK_SetPbeMode) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetPbeMode) refers to fsl_clock.o(.text.CLOCK_SetPbeMode) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetPeeMode) refers to fsl_clock.o(.text.CLOCK_SetPeeMode) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_ExternalModeToFbeModeQuick) refers to fsl_clock.o(.text.CLOCK_ExternalModeToFbeModeQuick) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_InternalModeToFbiModeQuick) refers to fsl_clock.o(.text.CLOCK_InternalModeToFbiModeQuick) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_BootToFeiMode) refers to fsl_clock.o(.text.CLOCK_SetFeiMode) for CLOCK_SetFeiMode
    fsl_clock.o(.ARM.exidx.text.CLOCK_BootToFeiMode) refers to fsl_clock.o(.text.CLOCK_BootToFeiMode) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_BootToFeeMode) refers to fsl_clock.o(.text.CLOCK_SetExternalRefClkConfig) for CLOCK_SetExternalRefClkConfig
    fsl_clock.o(.text.CLOCK_BootToFeeMode) refers to fsl_clock.o(.text.CLOCK_SetFeeMode) for CLOCK_SetFeeMode
    fsl_clock.o(.ARM.exidx.text.CLOCK_BootToFeeMode) refers to fsl_clock.o(.text.CLOCK_BootToFeeMode) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_BootToBlpiMode) refers to fsl_clock.o(.text.CLOCK_SetInternalRefClkConfig) for CLOCK_SetInternalRefClkConfig
    fsl_clock.o(.ARM.exidx.text.CLOCK_BootToBlpiMode) refers to fsl_clock.o(.text.CLOCK_BootToBlpiMode) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_BootToBlpeMode) refers to fsl_clock.o(.text.CLOCK_SetExternalRefClkConfig) for CLOCK_SetExternalRefClkConfig
    fsl_clock.o(.ARM.exidx.text.CLOCK_BootToBlpeMode) refers to fsl_clock.o(.text.CLOCK_BootToBlpeMode) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_BootToPeeMode) refers to fsl_clock.o(.text.CLOCK_SetExternalRefClkConfig) for CLOCK_SetExternalRefClkConfig
    fsl_clock.o(.text.CLOCK_BootToPeeMode) refers to fsl_clock.o(.text.CLOCK_SetPbeMode) for CLOCK_SetPbeMode
    fsl_clock.o(.text.CLOCK_BootToPeeMode) refers to fsl_clock.o(.rodata.str1.1) for .L.str.4
    fsl_clock.o(.text.CLOCK_BootToPeeMode) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_BootToPeeMode) refers to fsl_clock.o(.text.CLOCK_BootToPeeMode) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_SetMcgConfig) refers to fsl_clock.o(.text.CLOCK_ExternalModeToFbeModeQuick) for CLOCK_ExternalModeToFbeModeQuick
    fsl_clock.o(.text.CLOCK_SetMcgConfig) refers to fsl_clock.o(.text.CLOCK_SetFeiMode) for CLOCK_SetFeiMode
    fsl_clock.o(.text.CLOCK_SetMcgConfig) refers to fsl_clock.o(.text.CLOCK_SetExternalRefClkConfig) for CLOCK_SetExternalRefClkConfig
    fsl_clock.o(.text.CLOCK_SetMcgConfig) refers to fsl_clock.o(.text.CLOCK_FllStableDelay) for CLOCK_FllStableDelay
    fsl_clock.o(.text.CLOCK_SetMcgConfig) refers to fsl_clock.o(.text.CLOCK_SetInternalRefClkConfig) for CLOCK_SetInternalRefClkConfig
    fsl_clock.o(.text.CLOCK_SetMcgConfig) refers to fsl_clock.o(.text.CLOCK_GetMode) for CLOCK_GetMode
    fsl_clock.o(.text.CLOCK_SetMcgConfig) refers to fsl_clock.o(.text.CLOCK_SetPeeMode) for CLOCK_SetPeeMode
    fsl_clock.o(.text.CLOCK_SetMcgConfig) refers to fsl_clock.o(.text.CLOCK_SetBlpiMode) for CLOCK_SetBlpiMode
    fsl_clock.o(.text.CLOCK_SetMcgConfig) refers to fsl_clock.o(.text.CLOCK_SetFeeMode) for CLOCK_SetFeeMode
    fsl_clock.o(.text.CLOCK_SetMcgConfig) refers to fsl_clock.o(.text.CLOCK_SetFbeMode) for CLOCK_SetFbeMode
    fsl_clock.o(.text.CLOCK_SetMcgConfig) refers to fsl_clock.o(.text.CLOCK_SetFbiMode) for CLOCK_SetFbiMode
    fsl_clock.o(.text.CLOCK_SetMcgConfig) refers to fsl_clock.o(.text.CLOCK_SetBlpeMode) for CLOCK_SetBlpeMode
    fsl_clock.o(.text.CLOCK_SetMcgConfig) refers to fsl_clock.o(.text.CLOCK_SetPbeMode) for CLOCK_SetPbeMode
    fsl_clock.o(.text.CLOCK_SetMcgConfig) refers to fsl_clock.o(.text.CLOCK_EnablePll0) for CLOCK_EnablePll0
    fsl_clock.o(.text.CLOCK_SetMcgConfig) refers to fsl_clock.o(.rodata.str1.1) for .L.str.1
    fsl_clock.o(.text.CLOCK_SetMcgConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetMcgConfig) refers to fsl_clock.o(.text.CLOCK_SetMcgConfig) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_FllStableDelay) refers to fsl_clock.o(.text.CLOCK_FllStableDelay) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetFllExtRefClkFreq) refers to fsl_clock.o(.text.CLOCK_GetMcgExtClkFreq) for CLOCK_GetMcgExtClkFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetFllExtRefClkFreq) refers to fsl_clock.o(.text.CLOCK_GetFllExtRefClkFreq) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_GetInstance) refers to fsl_uart.o(.rodata.str1.1) for .L.str.1
    fsl_uart.o(.text.UART_GetInstance) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_GetInstance) refers to fsl_uart.o(.text.UART_GetInstance) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_TransferGetRxRingBufferLength) refers to fsl_uart.o(.rodata.str1.1) for .L.str.2
    fsl_uart.o(.text.UART_TransferGetRxRingBufferLength) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_TransferGetRxRingBufferLength) refers to fsl_uart.o(.text.UART_TransferGetRxRingBufferLength) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_Init) refers to fsl_uart.o(.text.UART_GetInstance) for UART_GetInstance
    fsl_uart.o(.text.UART_Init) refers to fsl_uart.o(.rodata.s_uartClock) for s_uartClock
    fsl_uart.o(.text.UART_Init) refers to fsl_uart.o(.text.CLOCK_EnableClock) for CLOCK_EnableClock
    fsl_uart.o(.text.UART_Init) refers to fsl_uart.o(.rodata.str1.1) for .L.str.3
    fsl_uart.o(.text.UART_Init) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_Init) refers to fsl_uart.o(.text.UART_Init) for [Anonymous Symbol]
    fsl_uart.o(.ARM.exidx.text.CLOCK_EnableClock) refers to fsl_uart.o(.text.CLOCK_EnableClock) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_Deinit) refers to fsl_uart.o(.text.UART_GetInstance) for UART_GetInstance
    fsl_uart.o(.text.UART_Deinit) refers to fsl_uart.o(.rodata.s_uartClock) for s_uartClock
    fsl_uart.o(.text.UART_Deinit) refers to fsl_uart.o(.text.CLOCK_DisableClock) for CLOCK_DisableClock
    fsl_uart.o(.ARM.exidx.text.UART_Deinit) refers to fsl_uart.o(.text.UART_Deinit) for [Anonymous Symbol]
    fsl_uart.o(.ARM.exidx.text.CLOCK_DisableClock) refers to fsl_uart.o(.text.CLOCK_DisableClock) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_GetDefaultConfig) refers to memseta.o(.text) for memset
    fsl_uart.o(.text.UART_GetDefaultConfig) refers to fsl_uart.o(.rodata.str1.1) for .L.str.3
    fsl_uart.o(.text.UART_GetDefaultConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_GetDefaultConfig) refers to fsl_uart.o(.text.UART_GetDefaultConfig) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_SetBaudRate) refers to fsl_uart.o(.rodata.str1.1) for .L.str.1
    fsl_uart.o(.text.UART_SetBaudRate) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_SetBaudRate) refers to fsl_uart.o(.text.UART_SetBaudRate) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_Enable9bitMode) refers to fsl_uart.o(.rodata.str1.1) for .L.str.8
    fsl_uart.o(.text.UART_Enable9bitMode) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_Enable9bitMode) refers to fsl_uart.o(.text.UART_Enable9bitMode) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_SendAddress) refers to fsl_uart.o(.text.UART_Set9thTransmitBit) for UART_Set9thTransmitBit
    fsl_uart.o(.text.UART_SendAddress) refers to fsl_uart.o(.text.UART_WriteByte) for UART_WriteByte
    fsl_uart.o(.text.UART_SendAddress) refers to fsl_uart.o(.text.UART_Clear9thTransmitBit) for UART_Clear9thTransmitBit
    fsl_uart.o(.text.UART_SendAddress) refers to fsl_uart.o(.rodata.str1.1) for .L.str.8
    fsl_uart.o(.text.UART_SendAddress) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_SendAddress) refers to fsl_uart.o(.text.UART_SendAddress) for [Anonymous Symbol]
    fsl_uart.o(.ARM.exidx.text.UART_Set9thTransmitBit) refers to fsl_uart.o(.text.UART_Set9thTransmitBit) for [Anonymous Symbol]
    fsl_uart.o(.ARM.exidx.text.UART_WriteByte) refers to fsl_uart.o(.text.UART_WriteByte) for [Anonymous Symbol]
    fsl_uart.o(.ARM.exidx.text.UART_Clear9thTransmitBit) refers to fsl_uart.o(.text.UART_Clear9thTransmitBit) for [Anonymous Symbol]
    fsl_uart.o(.ARM.exidx.text.UART_EnableInterrupts) refers to fsl_uart.o(.text.UART_EnableInterrupts) for [Anonymous Symbol]
    fsl_uart.o(.ARM.exidx.text.UART_DisableInterrupts) refers to fsl_uart.o(.text.UART_DisableInterrupts) for [Anonymous Symbol]
    fsl_uart.o(.ARM.exidx.text.UART_GetEnabledInterrupts) refers to fsl_uart.o(.text.UART_GetEnabledInterrupts) for [Anonymous Symbol]
    fsl_uart.o(.ARM.exidx.text.UART_GetStatusFlags) refers to fsl_uart.o(.text.UART_GetStatusFlags) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_ClearStatusFlags) refers to fsl_uart.o(.text.UART_GetStatusFlags) for UART_GetStatusFlags
    fsl_uart.o(.ARM.exidx.text.UART_ClearStatusFlags) refers to fsl_uart.o(.text.UART_ClearStatusFlags) for [Anonymous Symbol]
    fsl_uart.o(.ARM.exidx.text.UART_WriteBlocking) refers to fsl_uart.o(.text.UART_WriteBlocking) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_ReadBlocking) refers to fsl_uart.o(.text.UART_GetStatusFlags) for UART_GetStatusFlags
    fsl_uart.o(.text.UART_ReadBlocking) refers to fsl_uart.o(.text.UART_ClearStatusFlags) for UART_ClearStatusFlags
    fsl_uart.o(.text.UART_ReadBlocking) refers to fsl_uart.o(.rodata.str1.1) for .L.str.9
    fsl_uart.o(.text.UART_ReadBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_ReadBlocking) refers to fsl_uart.o(.text.UART_ReadBlocking) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_TransferCreateHandle) refers to memseta.o(.text) for memset
    fsl_uart.o(.text.UART_TransferCreateHandle) refers to fsl_uart.o(.text.UART_GetInstance) for UART_GetInstance
    fsl_uart.o(.text.UART_TransferCreateHandle) refers to fsl_uart.o(.bss.s_uartHandle) for s_uartHandle
    fsl_uart.o(.text.UART_TransferCreateHandle) refers to fsl_uart.o(.rodata.s_uartIRQ) for s_uartIRQ
    fsl_uart.o(.text.UART_TransferCreateHandle) refers to fsl_uart.o(.data.s_uartIsr) for s_uartIsr
    fsl_uart.o(.text.UART_TransferCreateHandle) refers to fsl_uart.o(.text.UART_TransferHandleIRQ) for UART_TransferHandleIRQ
    fsl_uart.o(.text.UART_TransferCreateHandle) refers to fsl_uart.o(.text.EnableIRQ) for EnableIRQ
    fsl_uart.o(.text.UART_TransferCreateHandle) refers to fsl_uart.o(.rodata.str1.1) for .L.str.2
    fsl_uart.o(.text.UART_TransferCreateHandle) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_TransferCreateHandle) refers to fsl_uart.o(.text.UART_TransferCreateHandle) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_TransferHandleIRQ) refers to fsl_uart.o(.text.UART_GetStatusFlags) for UART_GetStatusFlags
    fsl_uart.o(.text.UART_TransferHandleIRQ) refers to fsl_uart.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_uart.o(.text.UART_TransferHandleIRQ) refers to fsl_uart.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_uart.o(.text.UART_TransferHandleIRQ) refers to fsl_uart.o(.text.UART_ReadNonBlocking) for UART_ReadNonBlocking
    fsl_uart.o(.text.UART_TransferHandleIRQ) refers to fsl_uart.o(.text.UART_TransferIsRxRingBufferFull) for UART_TransferIsRxRingBufferFull
    fsl_uart.o(.text.UART_TransferHandleIRQ) refers to fsl_uart.o(.text.UART_WriteNonBlocking) for UART_WriteNonBlocking
    fsl_uart.o(.text.UART_TransferHandleIRQ) refers to fsl_uart.o(.rodata.str1.1) for .L.str.1
    fsl_uart.o(.text.UART_TransferHandleIRQ) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_TransferHandleIRQ) refers to fsl_uart.o(.text.UART_TransferHandleIRQ) for [Anonymous Symbol]
    fsl_uart.o(.text.EnableIRQ) refers to fsl_uart.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    fsl_uart.o(.ARM.exidx.text.EnableIRQ) refers to fsl_uart.o(.text.EnableIRQ) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_TransferStartRingBuffer) refers to fsl_uart.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_uart.o(.text.UART_TransferStartRingBuffer) refers to fsl_uart.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_uart.o(.text.UART_TransferStartRingBuffer) refers to fsl_uart.o(.rodata.str1.1) for .L.str.2
    fsl_uart.o(.text.UART_TransferStartRingBuffer) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_TransferStartRingBuffer) refers to fsl_uart.o(.text.UART_TransferStartRingBuffer) for [Anonymous Symbol]
    fsl_uart.o(.ARM.exidx.text.DisableGlobalIRQ) refers to fsl_uart.o(.text.DisableGlobalIRQ) for [Anonymous Symbol]
    fsl_uart.o(.ARM.exidx.text.EnableGlobalIRQ) refers to fsl_uart.o(.text.EnableGlobalIRQ) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_TransferStopRingBuffer) refers to fsl_uart.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_uart.o(.text.UART_TransferStopRingBuffer) refers to fsl_uart.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_uart.o(.text.UART_TransferStopRingBuffer) refers to fsl_uart.o(.rodata.str1.1) for .L.str.2
    fsl_uart.o(.text.UART_TransferStopRingBuffer) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_TransferStopRingBuffer) refers to fsl_uart.o(.text.UART_TransferStopRingBuffer) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_TransferSendNonBlocking) refers to fsl_uart.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_uart.o(.text.UART_TransferSendNonBlocking) refers to fsl_uart.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_uart.o(.text.UART_TransferSendNonBlocking) refers to fsl_uart.o(.rodata.str1.1) for .L.str.2
    fsl_uart.o(.text.UART_TransferSendNonBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_TransferSendNonBlocking) refers to fsl_uart.o(.text.UART_TransferSendNonBlocking) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_TransferAbortSend) refers to fsl_uart.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_uart.o(.text.UART_TransferAbortSend) refers to fsl_uart.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_uart.o(.text.UART_TransferAbortSend) refers to fsl_uart.o(.rodata.str1.1) for .L.str.2
    fsl_uart.o(.text.UART_TransferAbortSend) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_TransferAbortSend) refers to fsl_uart.o(.text.UART_TransferAbortSend) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_TransferGetSendCount) refers to fsl_uart.o(.rodata.str1.1) for .L.str.2
    fsl_uart.o(.text.UART_TransferGetSendCount) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_TransferGetSendCount) refers to fsl_uart.o(.text.UART_TransferGetSendCount) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_TransferReceiveNonBlocking) refers to fsl_uart.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_uart.o(.text.UART_TransferReceiveNonBlocking) refers to fsl_uart.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_uart.o(.text.UART_TransferReceiveNonBlocking) refers to fsl_uart.o(.text.UART_TransferGetRxRingBufferLength) for UART_TransferGetRxRingBufferLength
    fsl_uart.o(.text.UART_TransferReceiveNonBlocking) refers to fsl_uart.o(.rodata.str1.1) for .L.str.2
    fsl_uart.o(.text.UART_TransferReceiveNonBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_TransferReceiveNonBlocking) refers to fsl_uart.o(.text.UART_TransferReceiveNonBlocking) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_TransferAbortReceive) refers to fsl_uart.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_uart.o(.text.UART_TransferAbortReceive) refers to fsl_uart.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_uart.o(.text.UART_TransferAbortReceive) refers to fsl_uart.o(.rodata.str1.1) for .L.str.2
    fsl_uart.o(.text.UART_TransferAbortReceive) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_TransferAbortReceive) refers to fsl_uart.o(.text.UART_TransferAbortReceive) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_TransferGetReceiveCount) refers to fsl_uart.o(.rodata.str1.1) for .L.str.2
    fsl_uart.o(.text.UART_TransferGetReceiveCount) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_TransferGetReceiveCount) refers to fsl_uart.o(.text.UART_TransferGetReceiveCount) for [Anonymous Symbol]
    fsl_uart.o(.ARM.exidx.text.UART_EnableTxFIFO) refers to fsl_uart.o(.text.UART_EnableTxFIFO) for [Anonymous Symbol]
    fsl_uart.o(.ARM.exidx.text.UART_EnableRxFIFO) refers to fsl_uart.o(.text.UART_EnableRxFIFO) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_ReadNonBlocking) refers to fsl_uart.o(.rodata.str1.1) for .L.str.9
    fsl_uart.o(.text.UART_ReadNonBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_ReadNonBlocking) refers to fsl_uart.o(.text.UART_ReadNonBlocking) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_TransferIsRxRingBufferFull) refers to fsl_uart.o(.text.UART_TransferGetRxRingBufferLength) for UART_TransferGetRxRingBufferLength
    fsl_uart.o(.text.UART_TransferIsRxRingBufferFull) refers to fsl_uart.o(.rodata.str1.1) for .L.str.2
    fsl_uart.o(.text.UART_TransferIsRxRingBufferFull) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_TransferIsRxRingBufferFull) refers to fsl_uart.o(.text.UART_TransferIsRxRingBufferFull) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_WriteNonBlocking) refers to fsl_uart.o(.rodata.str1.1) for .L.str.9
    fsl_uart.o(.text.UART_WriteNonBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_WriteNonBlocking) refers to fsl_uart.o(.text.UART_WriteNonBlocking) for [Anonymous Symbol]
    fsl_uart.o(.ARM.exidx.text.UART_TransferHandleErrorIRQ) refers to fsl_uart.o(.text.UART_TransferHandleErrorIRQ) for [Anonymous Symbol]
    fsl_uart.o(.text.UART0_DriverIRQHandler) refers to fsl_uart.o(.data.s_uartIsr) for s_uartIsr
    fsl_uart.o(.text.UART0_DriverIRQHandler) refers to fsl_uart.o(.bss.s_uartHandle) for s_uartHandle
    fsl_uart.o(.ARM.exidx.text.UART0_DriverIRQHandler) refers to fsl_uart.o(.text.UART0_DriverIRQHandler) for [Anonymous Symbol]
    fsl_uart.o(.text.UART0_RX_TX_DriverIRQHandler) refers to fsl_uart.o(.text.UART0_DriverIRQHandler) for UART0_DriverIRQHandler
    fsl_uart.o(.ARM.exidx.text.UART0_RX_TX_DriverIRQHandler) refers to fsl_uart.o(.text.UART0_RX_TX_DriverIRQHandler) for [Anonymous Symbol]
    fsl_uart.o(.text.UART1_DriverIRQHandler) refers to fsl_uart.o(.data.s_uartIsr) for s_uartIsr
    fsl_uart.o(.text.UART1_DriverIRQHandler) refers to fsl_uart.o(.bss.s_uartHandle) for s_uartHandle
    fsl_uart.o(.ARM.exidx.text.UART1_DriverIRQHandler) refers to fsl_uart.o(.text.UART1_DriverIRQHandler) for [Anonymous Symbol]
    fsl_uart.o(.text.UART1_RX_TX_DriverIRQHandler) refers to fsl_uart.o(.text.UART1_DriverIRQHandler) for UART1_DriverIRQHandler
    fsl_uart.o(.ARM.exidx.text.UART1_RX_TX_DriverIRQHandler) refers to fsl_uart.o(.text.UART1_RX_TX_DriverIRQHandler) for [Anonymous Symbol]
    fsl_uart.o(.text.UART2_DriverIRQHandler) refers to fsl_uart.o(.data.s_uartIsr) for s_uartIsr
    fsl_uart.o(.text.UART2_DriverIRQHandler) refers to fsl_uart.o(.bss.s_uartHandle) for s_uartHandle
    fsl_uart.o(.ARM.exidx.text.UART2_DriverIRQHandler) refers to fsl_uart.o(.text.UART2_DriverIRQHandler) for [Anonymous Symbol]
    fsl_uart.o(.text.UART2_RX_TX_DriverIRQHandler) refers to fsl_uart.o(.text.UART2_DriverIRQHandler) for UART2_DriverIRQHandler
    fsl_uart.o(.ARM.exidx.text.UART2_RX_TX_DriverIRQHandler) refers to fsl_uart.o(.text.UART2_RX_TX_DriverIRQHandler) for [Anonymous Symbol]
    fsl_uart.o(.text.UART3_DriverIRQHandler) refers to fsl_uart.o(.data.s_uartIsr) for s_uartIsr
    fsl_uart.o(.text.UART3_DriverIRQHandler) refers to fsl_uart.o(.bss.s_uartHandle) for s_uartHandle
    fsl_uart.o(.ARM.exidx.text.UART3_DriverIRQHandler) refers to fsl_uart.o(.text.UART3_DriverIRQHandler) for [Anonymous Symbol]
    fsl_uart.o(.text.UART3_RX_TX_DriverIRQHandler) refers to fsl_uart.o(.text.UART3_DriverIRQHandler) for UART3_DriverIRQHandler
    fsl_uart.o(.ARM.exidx.text.UART3_RX_TX_DriverIRQHandler) refers to fsl_uart.o(.text.UART3_RX_TX_DriverIRQHandler) for [Anonymous Symbol]
    fsl_uart.o(.text.UART4_DriverIRQHandler) refers to fsl_uart.o(.data.s_uartIsr) for s_uartIsr
    fsl_uart.o(.text.UART4_DriverIRQHandler) refers to fsl_uart.o(.bss.s_uartHandle) for s_uartHandle
    fsl_uart.o(.ARM.exidx.text.UART4_DriverIRQHandler) refers to fsl_uart.o(.text.UART4_DriverIRQHandler) for [Anonymous Symbol]
    fsl_uart.o(.text.UART4_RX_TX_DriverIRQHandler) refers to fsl_uart.o(.text.UART4_DriverIRQHandler) for UART4_DriverIRQHandler
    fsl_uart.o(.ARM.exidx.text.UART4_RX_TX_DriverIRQHandler) refers to fsl_uart.o(.text.UART4_RX_TX_DriverIRQHandler) for [Anonymous Symbol]
    fsl_uart.o(.text.UART5_DriverIRQHandler) refers to fsl_uart.o(.data.s_uartIsr) for s_uartIsr
    fsl_uart.o(.text.UART5_DriverIRQHandler) refers to fsl_uart.o(.bss.s_uartHandle) for s_uartHandle
    fsl_uart.o(.ARM.exidx.text.UART5_DriverIRQHandler) refers to fsl_uart.o(.text.UART5_DriverIRQHandler) for [Anonymous Symbol]
    fsl_uart.o(.text.UART5_RX_TX_DriverIRQHandler) refers to fsl_uart.o(.text.UART5_DriverIRQHandler) for UART5_DriverIRQHandler
    fsl_uart.o(.ARM.exidx.text.UART5_RX_TX_DriverIRQHandler) refers to fsl_uart.o(.text.UART5_RX_TX_DriverIRQHandler) for [Anonymous Symbol]
    fsl_uart.o(.ARM.exidx.text.__NVIC_EnableIRQ) refers to fsl_uart.o(.text.__NVIC_EnableIRQ) for [Anonymous Symbol]
    fsl_uart.o(.data.s_uartIsr) refers to startup_mk64f12.o(.text) for DefaultISR
    fsl_ftfx_controller.o(.text.FTFx_API_Init) refers to fsl_ftfx_controller.o(.bss.s_ftfxRunCommand) for s_ftfxRunCommand
    fsl_ftfx_controller.o(.text.FTFx_API_Init) refers to fsl_ftfx_controller.o(.text.ftfx_copy_run_command_to_ram) for ftfx_copy_run_command_to_ram
    fsl_ftfx_controller.o(.text.FTFx_API_Init) refers to fsl_ftfx_controller.o(.text.ftfx_init_ifr) for ftfx_init_ifr
    fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_API_Init) refers to fsl_ftfx_controller.o(.text.FTFx_API_Init) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.text.ftfx_copy_run_command_to_ram) refers to fsl_ftfx_controller.o(.bss.s_ftfxRunCommand) for s_ftfxRunCommand
    fsl_ftfx_controller.o(.text.ftfx_copy_run_command_to_ram) refers to fsl_ftfx_controller.o(.rodata.s_ftfxRunCommandFunctionCode) for s_ftfxRunCommandFunctionCode
    fsl_ftfx_controller.o(.text.ftfx_copy_run_command_to_ram) refers to memcpy.o(.text) for memcpy
    fsl_ftfx_controller.o(.ARM.exidx.text.ftfx_copy_run_command_to_ram) refers to fsl_ftfx_controller.o(.text.ftfx_copy_run_command_to_ram) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.ARM.exidx.text.ftfx_init_ifr) refers to fsl_ftfx_controller.o(.text.ftfx_init_ifr) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.text.FTFx_CMD_Erase) refers to fsl_ftfx_controller.o(.text.ftfx_check_mem_range) for ftfx_check_mem_range
    fsl_ftfx_controller.o(.text.FTFx_CMD_Erase) refers to fsl_ftfx_controller.o(.text.ftfx_check_user_key) for ftfx_check_user_key
    fsl_ftfx_controller.o(.text.FTFx_CMD_Erase) refers to fsl_ftfx_controller.o(.text.ftfx_command_sequence) for ftfx_command_sequence
    fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_Erase) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_Erase) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.ARM.exidx.text.ftfx_check_mem_range) refers to fsl_ftfx_controller.o(.text.ftfx_check_mem_range) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.ARM.exidx.text.ftfx_check_user_key) refers to fsl_ftfx_controller.o(.text.ftfx_check_user_key) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.ARM.exidx.text.ftfx_command_sequence) refers to fsl_ftfx_controller.o(.text.ftfx_command_sequence) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.text.FTFx_CMD_EraseSectorNonBlocking) refers to fsl_ftfx_controller.o(.text.ftfx_check_mem_range) for ftfx_check_mem_range
    fsl_ftfx_controller.o(.text.FTFx_CMD_EraseSectorNonBlocking) refers to fsl_ftfx_controller.o(.text.ftfx_check_user_key) for ftfx_check_user_key
    fsl_ftfx_controller.o(.text.FTFx_CMD_EraseSectorNonBlocking) refers to fsl_ftfx_controller.o(.text.ftfx_command_sequence_non_blocking) for ftfx_command_sequence_non_blocking
    fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_EraseSectorNonBlocking) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_EraseSectorNonBlocking) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.ARM.exidx.text.ftfx_command_sequence_non_blocking) refers to fsl_ftfx_controller.o(.text.ftfx_command_sequence_non_blocking) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.text.FTFx_CMD_EraseAll) refers to fsl_ftfx_controller.o(.text.ftfx_check_user_key) for ftfx_check_user_key
    fsl_ftfx_controller.o(.text.FTFx_CMD_EraseAll) refers to fsl_ftfx_controller.o(.text.ftfx_command_sequence) for ftfx_command_sequence
    fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_EraseAll) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_EraseAll) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.text.FTFx_CMD_EraseAllExecuteOnlySegments) refers to fsl_ftfx_controller.o(.text.ftfx_check_user_key) for ftfx_check_user_key
    fsl_ftfx_controller.o(.text.FTFx_CMD_EraseAllExecuteOnlySegments) refers to fsl_ftfx_controller.o(.text.ftfx_command_sequence) for ftfx_command_sequence
    fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_EraseAllExecuteOnlySegments) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_EraseAllExecuteOnlySegments) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.text.FTFx_CMD_Program) refers to fsl_ftfx_controller.o(.text.ftfx_check_mem_range) for ftfx_check_mem_range
    fsl_ftfx_controller.o(.text.FTFx_CMD_Program) refers to fsl_ftfx_controller.o(.text.ftfx_command_sequence) for ftfx_command_sequence
    fsl_ftfx_controller.o(.text.FTFx_CMD_Program) refers to fsl_ftfx_controller.o(.text.ftfx_read_word_from_byte_address) for ftfx_read_word_from_byte_address
    fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_Program) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_Program) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.ARM.exidx.text.ftfx_read_word_from_byte_address) refers to fsl_ftfx_controller.o(.text.ftfx_read_word_from_byte_address) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.text.FTFx_CMD_ProgramOnce) refers to fsl_ftfx_controller.o(.text.ftfx_read_word_from_byte_address) for ftfx_read_word_from_byte_address
    fsl_ftfx_controller.o(.text.FTFx_CMD_ProgramOnce) refers to fsl_ftfx_controller.o(.text.ftfx_command_sequence) for ftfx_command_sequence
    fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_ProgramOnce) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_ProgramOnce) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.text.FTFx_CMD_ProgramSection) refers to fsl_ftfx_controller.o(.text.ftfx_check_mem_range) for ftfx_check_mem_range
    fsl_ftfx_controller.o(.text.FTFx_CMD_ProgramSection) refers to memcpy.o(.text) for memcpy
    fsl_ftfx_controller.o(.text.FTFx_CMD_ProgramSection) refers to fsl_ftfx_controller.o(.text.ftfx_command_sequence) for ftfx_command_sequence
    fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_ProgramSection) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_ProgramSection) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.text.FTFx_CMD_ReadOnce) refers to fsl_ftfx_controller.o(.text.ftfx_command_sequence) for ftfx_command_sequence
    fsl_ftfx_controller.o(.text.FTFx_CMD_ReadOnce) refers to fsl_ftfx_controller.o(.text.ftfx_write_word_to_byte_address) for ftfx_write_word_to_byte_address
    fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_ReadOnce) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_ReadOnce) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.ARM.exidx.text.ftfx_write_word_to_byte_address) refers to fsl_ftfx_controller.o(.text.ftfx_write_word_to_byte_address) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.text.FTFx_CMD_ReadResource) refers to fsl_ftfx_controller.o(.text.ftfx_check_resource_range) for ftfx_check_resource_range
    fsl_ftfx_controller.o(.text.FTFx_CMD_ReadResource) refers to fsl_ftfx_controller.o(.text.ftfx_command_sequence) for ftfx_command_sequence
    fsl_ftfx_controller.o(.text.FTFx_CMD_ReadResource) refers to fsl_ftfx_controller.o(.text.ftfx_write_word_to_byte_address) for ftfx_write_word_to_byte_address
    fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_ReadResource) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_ReadResource) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.ARM.exidx.text.ftfx_check_resource_range) refers to fsl_ftfx_controller.o(.text.ftfx_check_resource_range) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.text.FTFx_CMD_VerifyErase) refers to fsl_ftfx_controller.o(.text.ftfx_check_mem_range) for ftfx_check_mem_range
    fsl_ftfx_controller.o(.text.FTFx_CMD_VerifyErase) refers to fsl_ftfx_controller.o(.text.ftfx_command_sequence) for ftfx_command_sequence
    fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_VerifyErase) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_VerifyErase) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.text.FTFx_CMD_VerifyEraseAll) refers to fsl_ftfx_controller.o(.text.ftfx_command_sequence) for ftfx_command_sequence
    fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_VerifyEraseAll) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_VerifyEraseAll) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.text.FTFx_CMD_VerifyEraseAllExecuteOnlySegments) refers to fsl_ftfx_controller.o(.text.ftfx_command_sequence) for ftfx_command_sequence
    fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_VerifyEraseAllExecuteOnlySegments) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_VerifyEraseAllExecuteOnlySegments) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.text.FTFx_CMD_VerifyProgram) refers to fsl_ftfx_controller.o(.text.ftfx_check_mem_range) for ftfx_check_mem_range
    fsl_ftfx_controller.o(.text.FTFx_CMD_VerifyProgram) refers to fsl_ftfx_controller.o(.text.ftfx_read_word_from_byte_address) for ftfx_read_word_from_byte_address
    fsl_ftfx_controller.o(.text.FTFx_CMD_VerifyProgram) refers to fsl_ftfx_controller.o(.text.ftfx_command_sequence) for ftfx_command_sequence
    fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_VerifyProgram) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_VerifyProgram) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.text.FTFx_CMD_SecurityBypass) refers to fsl_ftfx_controller.o(.text.ftfx_command_sequence) for ftfx_command_sequence
    fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_SecurityBypass) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_SecurityBypass) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_REG_GetSecurityState) refers to fsl_ftfx_controller.o(.text.FTFx_REG_GetSecurityState) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.text.FTFx_CMD_SwapControl) refers to fsl_ftfx_controller.o(.text.ftfx_check_swap_control_option) for ftfx_check_swap_control_option
    fsl_ftfx_controller.o(.text.FTFx_CMD_SwapControl) refers to fsl_ftfx_controller.o(.text.ftfx_command_sequence) for ftfx_command_sequence
    fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_SwapControl) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_SwapControl) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.ARM.exidx.text.ftfx_check_swap_control_option) refers to fsl_ftfx_controller.o(.text.ftfx_check_swap_control_option) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.text.FLASH_Init) refers to fsl_ftfx_flash.o(.text.flash_init_features) for flash_init_features
    fsl_ftfx_flash.o(.text.FLASH_Init) refers to fsl_ftfx_flash.o(.text.flash_opsonfig_Init) for flash_opsonfig_Init
    fsl_ftfx_flash.o(.text.FLASH_Init) refers to fsl_ftfx_flash.o(.text.flash_protection_init) for flash_protection_init
    fsl_ftfx_flash.o(.text.FLASH_Init) refers to fsl_ftfx_controller.o(.text.FTFx_API_Init) for FTFx_API_Init
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_Init) refers to fsl_ftfx_flash.o(.text.FLASH_Init) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.ARM.exidx.text.flash_init_features) refers to fsl_ftfx_flash.o(.text.flash_init_features) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.text.flash_opsonfig_Init) refers to fsl_ftfx_flash.o(.text.flash_calculate_mem_size) for flash_calculate_mem_size
    fsl_ftfx_flash.o(.ARM.exidx.text.flash_opsonfig_Init) refers to fsl_ftfx_flash.o(.text.flash_opsonfig_Init) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.text.flash_protection_init) refers to fsl_ftfx_flash.o(.text.flash_calculate_prot_segment_size) for flash_calculate_prot_segment_size
    fsl_ftfx_flash.o(.ARM.exidx.text.flash_protection_init) refers to fsl_ftfx_flash.o(.text.flash_protection_init) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.text.FLASH_Erase) refers to fsl_ftfx_flash.o(.text.flash_check_range_to_get_index) for flash_check_range_to_get_index
    fsl_ftfx_flash.o(.text.FLASH_Erase) refers to fsl_ftfx_flash.o(.text.flash_convert_start_address) for flash_convert_start_address
    fsl_ftfx_flash.o(.text.FLASH_Erase) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_Erase) for FTFx_CMD_Erase
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_Erase) refers to fsl_ftfx_flash.o(.text.FLASH_Erase) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.ARM.exidx.text.flash_check_range_to_get_index) refers to fsl_ftfx_flash.o(.text.flash_check_range_to_get_index) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.ARM.exidx.text.flash_convert_start_address) refers to fsl_ftfx_flash.o(.text.flash_convert_start_address) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.text.FLASH_EraseSectorNonBlocking) refers to fsl_ftfx_flash.o(.text.flash_check_range_to_get_index) for flash_check_range_to_get_index
    fsl_ftfx_flash.o(.text.FLASH_EraseSectorNonBlocking) refers to fsl_ftfx_flash.o(.text.flash_convert_start_address) for flash_convert_start_address
    fsl_ftfx_flash.o(.text.FLASH_EraseSectorNonBlocking) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_EraseSectorNonBlocking) for FTFx_CMD_EraseSectorNonBlocking
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_EraseSectorNonBlocking) refers to fsl_ftfx_flash.o(.text.FLASH_EraseSectorNonBlocking) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.text.FLASH_EraseAll) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_EraseAll) for FTFx_CMD_EraseAll
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_EraseAll) refers to fsl_ftfx_flash.o(.text.FLASH_EraseAll) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.text.FLASH_Program) refers to fsl_ftfx_flash.o(.text.flash_check_range_to_get_index) for flash_check_range_to_get_index
    fsl_ftfx_flash.o(.text.FLASH_Program) refers to fsl_ftfx_flash.o(.text.flash_convert_start_address) for flash_convert_start_address
    fsl_ftfx_flash.o(.text.FLASH_Program) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_Program) for FTFx_CMD_Program
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_Program) refers to fsl_ftfx_flash.o(.text.FLASH_Program) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.text.FLASH_ProgramOnce) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_ProgramOnce) for FTFx_CMD_ProgramOnce
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_ProgramOnce) refers to fsl_ftfx_flash.o(.text.FLASH_ProgramOnce) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.text.FLASH_ProgramSection) refers to fsl_ftfx_flash.o(.text.flash_check_range_to_get_index) for flash_check_range_to_get_index
    fsl_ftfx_flash.o(.text.FLASH_ProgramSection) refers to fsl_ftfx_flash.o(.text.flash_convert_start_address) for flash_convert_start_address
    fsl_ftfx_flash.o(.text.FLASH_ProgramSection) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_ProgramSection) for FTFx_CMD_ProgramSection
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_ProgramSection) refers to fsl_ftfx_flash.o(.text.FLASH_ProgramSection) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.text.FLASH_ReadResource) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_ReadResource) for FTFx_CMD_ReadResource
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_ReadResource) refers to fsl_ftfx_flash.o(.text.FLASH_ReadResource) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.text.FLASH_ReadOnce) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_ReadOnce) for FTFx_CMD_ReadOnce
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_ReadOnce) refers to fsl_ftfx_flash.o(.text.FLASH_ReadOnce) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.text.FLASH_VerifyErase) refers to fsl_ftfx_flash.o(.text.flash_check_range_to_get_index) for flash_check_range_to_get_index
    fsl_ftfx_flash.o(.text.FLASH_VerifyErase) refers to fsl_ftfx_flash.o(.text.flash_convert_start_address) for flash_convert_start_address
    fsl_ftfx_flash.o(.text.FLASH_VerifyErase) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_VerifyErase) for FTFx_CMD_VerifyErase
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_VerifyErase) refers to fsl_ftfx_flash.o(.text.FLASH_VerifyErase) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.text.FLASH_VerifyEraseAll) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_VerifyEraseAll) for FTFx_CMD_VerifyEraseAll
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_VerifyEraseAll) refers to fsl_ftfx_flash.o(.text.FLASH_VerifyEraseAll) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.text.FLASH_VerifyProgram) refers to fsl_ftfx_flash.o(.text.flash_check_range_to_get_index) for flash_check_range_to_get_index
    fsl_ftfx_flash.o(.text.FLASH_VerifyProgram) refers to fsl_ftfx_flash.o(.text.flash_convert_start_address) for flash_convert_start_address
    fsl_ftfx_flash.o(.text.FLASH_VerifyProgram) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_VerifyProgram) for FTFx_CMD_VerifyProgram
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_VerifyProgram) refers to fsl_ftfx_flash.o(.text.FLASH_VerifyProgram) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.text.FLASH_GetSecurityState) refers to fsl_ftfx_controller.o(.text.FTFx_REG_GetSecurityState) for FTFx_REG_GetSecurityState
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_GetSecurityState) refers to fsl_ftfx_flash.o(.text.FLASH_GetSecurityState) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.text.FLASH_SecurityBypass) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_SecurityBypass) for FTFx_CMD_SecurityBypass
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_SecurityBypass) refers to fsl_ftfx_flash.o(.text.FLASH_SecurityBypass) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.text.FLASH_Swap) refers to fsl_ftfx_flash.o(.text.flash_check_range_to_get_index) for flash_check_range_to_get_index
    fsl_ftfx_flash.o(.text.FLASH_Swap) refers to memseta.o(.text) for memset
    fsl_ftfx_flash.o(.text.FLASH_Swap) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_SwapControl) for FTFx_CMD_SwapControl
    fsl_ftfx_flash.o(.text.FLASH_Swap) refers to fsl_ftfx_flash.o(.text.flash_validate_swap_indicator_address) for flash_validate_swap_indicator_address
    fsl_ftfx_flash.o(.text.FLASH_Swap) refers to fsl_ftfx_flash.o(.text.FLASH_Erase) for FLASH_Erase
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_Swap) refers to fsl_ftfx_flash.o(.text.FLASH_Swap) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.text.flash_validate_swap_indicator_address) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_ReadResource) for FTFx_CMD_ReadResource
    fsl_ftfx_flash.o(.ARM.exidx.text.flash_validate_swap_indicator_address) refers to fsl_ftfx_flash.o(.text.flash_validate_swap_indicator_address) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.text.FLASH_IsProtected) refers to fsl_ftfx_flash.o(.text.flash_check_range_to_get_index) for flash_check_range_to_get_index
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_IsProtected) refers to fsl_ftfx_flash.o(.text.FLASH_IsProtected) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_PflashSetProtection) refers to fsl_ftfx_flash.o(.text.FLASH_PflashSetProtection) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_PflashGetProtection) refers to fsl_ftfx_flash.o(.text.FLASH_PflashGetProtection) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_GetProperty) refers to fsl_ftfx_flash.o(.text.FLASH_GetProperty) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_GetCommandState) refers to fsl_ftfx_flash.o(.text.FLASH_GetCommandState) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.text.flash_calculate_mem_size) refers to fsl_ftfx_flash.o(.rodata.kPFlashDensities) for kPFlashDensities
    fsl_ftfx_flash.o(.ARM.exidx.text.flash_calculate_mem_size) refers to fsl_ftfx_flash.o(.text.flash_calculate_mem_size) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.ARM.exidx.text.flash_calculate_prot_segment_size) refers to fsl_ftfx_flash.o(.text.flash_calculate_prot_segment_size) for [Anonymous Symbol]
    fsl_ftfx_cache.o(.text.FTFx_CACHE_Init) refers to fsl_ftfx_cache.o(.bss.s_ftfxCommonBitOperation) for s_ftfxCommonBitOperation
    fsl_ftfx_cache.o(.text.FTFx_CACHE_Init) refers to fsl_ftfx_cache.o(.text.ftfx_copy_common_bit_operation_to_ram) for ftfx_copy_common_bit_operation_to_ram
    fsl_ftfx_cache.o(.ARM.exidx.text.FTFx_CACHE_Init) refers to fsl_ftfx_cache.o(.text.FTFx_CACHE_Init) for [Anonymous Symbol]
    fsl_ftfx_cache.o(.text.ftfx_copy_common_bit_operation_to_ram) refers to fsl_ftfx_cache.o(.rodata.s_ftfxCommonBitOperationFunctionCode) for s_ftfxCommonBitOperationFunctionCode
    fsl_ftfx_cache.o(.text.ftfx_copy_common_bit_operation_to_ram) refers to memcpy.o(.text) for memcpy
    fsl_ftfx_cache.o(.ARM.exidx.text.ftfx_copy_common_bit_operation_to_ram) refers to fsl_ftfx_cache.o(.text.ftfx_copy_common_bit_operation_to_ram) for [Anonymous Symbol]
    fsl_ftfx_cache.o(.text.FTFx_CACHE_ClearCachePrefetchSpeculation) refers to fsl_ftfx_cache.o(.text.fmc_flash_cache_clear) for fmc_flash_cache_clear
    fsl_ftfx_cache.o(.text.FTFx_CACHE_ClearCachePrefetchSpeculation) refers to fsl_ftfx_cache.o(.text.fmc_flash_prefetch_speculation_clear) for fmc_flash_prefetch_speculation_clear
    fsl_ftfx_cache.o(.ARM.exidx.text.FTFx_CACHE_ClearCachePrefetchSpeculation) refers to fsl_ftfx_cache.o(.text.FTFx_CACHE_ClearCachePrefetchSpeculation) for [Anonymous Symbol]
    fsl_ftfx_cache.o(.text.fmc_flash_cache_clear) refers to fsl_ftfx_cache.o(.text.ftfx_common_bit_operation_command_sequence) for ftfx_common_bit_operation_command_sequence
    fsl_ftfx_cache.o(.ARM.exidx.text.fmc_flash_cache_clear) refers to fsl_ftfx_cache.o(.text.fmc_flash_cache_clear) for [Anonymous Symbol]
    fsl_ftfx_cache.o(.text.fmc_flash_prefetch_speculation_clear) refers to fsl_ftfx_cache.o(.text.ftfx_common_bit_operation_command_sequence) for ftfx_common_bit_operation_command_sequence
    fsl_ftfx_cache.o(.ARM.exidx.text.fmc_flash_prefetch_speculation_clear) refers to fsl_ftfx_cache.o(.text.fmc_flash_prefetch_speculation_clear) for [Anonymous Symbol]
    fsl_ftfx_cache.o(.ARM.exidx.text.FTFx_CACHE_PflashSetPrefetchSpeculation) refers to fsl_ftfx_cache.o(.text.FTFx_CACHE_PflashSetPrefetchSpeculation) for [Anonymous Symbol]
    fsl_ftfx_cache.o(.text.FTFx_CACHE_PflashGetPrefetchSpeculation) refers to memseta.o(.text) for memset
    fsl_ftfx_cache.o(.ARM.exidx.text.FTFx_CACHE_PflashGetPrefetchSpeculation) refers to fsl_ftfx_cache.o(.text.FTFx_CACHE_PflashGetPrefetchSpeculation) for [Anonymous Symbol]
    fsl_ftfx_cache.o(.ARM.exidx.text.ftfx_common_bit_operation_command_sequence) refers to fsl_ftfx_cache.o(.text.ftfx_common_bit_operation_command_sequence) for [Anonymous Symbol]
    fsl_smc.o(.text.SMC_PreEnterStopModes) refers to fsl_smc.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_smc.o(.text.SMC_PreEnterStopModes) refers to fsl_smc.o(.bss.g_savedPrimask) for g_savedPrimask
    fsl_smc.o(.ARM.exidx.text.SMC_PreEnterStopModes) refers to fsl_smc.o(.text.SMC_PreEnterStopModes) for [Anonymous Symbol]
    fsl_smc.o(.ARM.exidx.text.DisableGlobalIRQ) refers to fsl_smc.o(.text.DisableGlobalIRQ) for [Anonymous Symbol]
    fsl_smc.o(.text.SMC_PostExitStopModes) refers to fsl_smc.o(.bss.g_savedPrimask) for g_savedPrimask
    fsl_smc.o(.text.SMC_PostExitStopModes) refers to fsl_smc.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_smc.o(.ARM.exidx.text.SMC_PostExitStopModes) refers to fsl_smc.o(.text.SMC_PostExitStopModes) for [Anonymous Symbol]
    fsl_smc.o(.ARM.exidx.text.EnableGlobalIRQ) refers to fsl_smc.o(.text.EnableGlobalIRQ) for [Anonymous Symbol]
    fsl_smc.o(.text.SMC_PreEnterWaitModes) refers to fsl_smc.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_smc.o(.text.SMC_PreEnterWaitModes) refers to fsl_smc.o(.bss.g_savedPrimask) for g_savedPrimask
    fsl_smc.o(.ARM.exidx.text.SMC_PreEnterWaitModes) refers to fsl_smc.o(.text.SMC_PreEnterWaitModes) for [Anonymous Symbol]
    fsl_smc.o(.text.SMC_PostExitWaitModes) refers to fsl_smc.o(.bss.g_savedPrimask) for g_savedPrimask
    fsl_smc.o(.text.SMC_PostExitWaitModes) refers to fsl_smc.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_smc.o(.ARM.exidx.text.SMC_PostExitWaitModes) refers to fsl_smc.o(.text.SMC_PostExitWaitModes) for [Anonymous Symbol]
    fsl_smc.o(.ARM.exidx.text.SMC_SetPowerModeRun) refers to fsl_smc.o(.text.SMC_SetPowerModeRun) for [Anonymous Symbol]
    fsl_smc.o(.ARM.exidx.text.SMC_SetPowerModeWait) refers to fsl_smc.o(.text.SMC_SetPowerModeWait) for [Anonymous Symbol]
    fsl_smc.o(.text.SMC_SetPowerModeStop) refers to fsl_smc.o(.text.SMC_EnterStopRamFunc) for SMC_EnterStopRamFunc
    fsl_smc.o(.ARM.exidx.text.SMC_SetPowerModeStop) refers to fsl_smc.o(.text.SMC_SetPowerModeStop) for [Anonymous Symbol]
    fsl_smc.o(.text.SMC_EnterStopRamFunc) refers to fsl_smc.o(.data.s_stopRamFuncArray) for s_stopRamFuncArray
    fsl_smc.o(.ARM.exidx.text.SMC_EnterStopRamFunc) refers to fsl_smc.o(.text.SMC_EnterStopRamFunc) for [Anonymous Symbol]
    fsl_smc.o(.ARM.exidx.text.SMC_SetPowerModeVlpr) refers to fsl_smc.o(.text.SMC_SetPowerModeVlpr) for [Anonymous Symbol]
    fsl_smc.o(.ARM.exidx.text.SMC_SetPowerModeVlpw) refers to fsl_smc.o(.text.SMC_SetPowerModeVlpw) for [Anonymous Symbol]
    fsl_smc.o(.text.SMC_SetPowerModeVlps) refers to fsl_smc.o(.text.SMC_EnterStopRamFunc) for SMC_EnterStopRamFunc
    fsl_smc.o(.ARM.exidx.text.SMC_SetPowerModeVlps) refers to fsl_smc.o(.text.SMC_SetPowerModeVlps) for [Anonymous Symbol]
    fsl_smc.o(.text.SMC_SetPowerModeLls) refers to fsl_smc.o(.text.SMC_EnterStopRamFunc) for SMC_EnterStopRamFunc
    fsl_smc.o(.ARM.exidx.text.SMC_SetPowerModeLls) refers to fsl_smc.o(.text.SMC_SetPowerModeLls) for [Anonymous Symbol]
    fsl_smc.o(.text.SMC_SetPowerModeVlls) refers to fsl_smc.o(.text.SMC_EnterStopRamFunc) for SMC_EnterStopRamFunc
    fsl_smc.o(.ARM.exidx.text.SMC_SetPowerModeVlls) refers to fsl_smc.o(.text.SMC_SetPowerModeVlls) for [Anonymous Symbol]
    fsl_common.o(.text.SDK_Malloc) refers to malloc2.o(i.__malloc$2region) for malloc
    fsl_common.o(.ARM.exidx.text.SDK_Malloc) refers to fsl_common.o(.text.SDK_Malloc) for [Anonymous Symbol]
    fsl_common.o(.text.SDK_Free) refers to malloc2.o(i.__free$2region) for free
    fsl_common.o(.ARM.exidx.text.SDK_Free) refers to fsl_common.o(.text.SDK_Free) for [Anonymous Symbol]
    fsl_common_arm.o(.text.SDK_DelayAtLeastUs) refers to uldiv.o(.text) for __aeabi_uldivmod
    fsl_common_arm.o(.text.SDK_DelayAtLeastUs) refers to fsl_common_arm.o(.text.DelayLoop) for DelayLoop
    fsl_common_arm.o(.text.SDK_DelayAtLeastUs) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_common_arm.o(.ARM.exidx.text.SDK_DelayAtLeastUs) refers to fsl_common_arm.o(.text.SDK_DelayAtLeastUs) for [Anonymous Symbol]
    fsl_common_arm.o(.ARM.exidx.text.DelayLoop) refers to fsl_common_arm.o(.text.DelayLoop) for [Anonymous Symbol]
    fsl_uart_freertos.o(.text.UART_RTOS_Init) refers to queue.o(.text.xQueueCreateMutex) for xQueueCreateMutex
    fsl_uart_freertos.o(.text.UART_RTOS_Init) refers to event_groups.o(.text.xEventGroupCreate) for xEventGroupCreate
    fsl_uart_freertos.o(.text.UART_RTOS_Init) refers to fsl_uart.o(.text.UART_GetDefaultConfig) for UART_GetDefaultConfig
    fsl_uart_freertos.o(.text.UART_RTOS_Init) refers to fsl_uart.o(.text.UART_Init) for UART_Init
    fsl_uart_freertos.o(.text.UART_RTOS_Init) refers to event_groups.o(.text.vEventGroupDelete) for vEventGroupDelete
    fsl_uart_freertos.o(.text.UART_RTOS_Init) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    fsl_uart_freertos.o(.text.UART_RTOS_Init) refers to fsl_uart_freertos.o(.text.UART_RTOS_Callback) for UART_RTOS_Callback
    fsl_uart_freertos.o(.text.UART_RTOS_Init) refers to fsl_uart.o(.text.UART_TransferCreateHandle) for UART_TransferCreateHandle
    fsl_uart_freertos.o(.text.UART_RTOS_Init) refers to fsl_uart.o(.text.UART_TransferStartRingBuffer) for UART_TransferStartRingBuffer
    fsl_uart_freertos.o(.text.UART_RTOS_Init) refers to fsl_uart_freertos.o(.text.UART_EnableTx) for UART_EnableTx
    fsl_uart_freertos.o(.text.UART_RTOS_Init) refers to fsl_uart_freertos.o(.text.UART_EnableRx) for UART_EnableRx
    fsl_uart_freertos.o(.ARM.exidx.text.UART_RTOS_Init) refers to fsl_uart_freertos.o(.text.UART_RTOS_Init) for [Anonymous Symbol]
    fsl_uart_freertos.o(.text.UART_RTOS_Callback) refers to event_groups.o(.text.xEventGroupSetBitsFromISR) for xEventGroupSetBitsFromISR
    fsl_uart_freertos.o(.text.UART_RTOS_Callback) refers to fsl_uart.o(.text.UART_ClearStatusFlags) for UART_ClearStatusFlags
    fsl_uart_freertos.o(.ARM.exidx.text.UART_RTOS_Callback) refers to fsl_uart_freertos.o(.text.UART_RTOS_Callback) for [Anonymous Symbol]
    fsl_uart_freertos.o(.ARM.exidx.text.UART_EnableTx) refers to fsl_uart_freertos.o(.text.UART_EnableTx) for [Anonymous Symbol]
    fsl_uart_freertos.o(.ARM.exidx.text.UART_EnableRx) refers to fsl_uart_freertos.o(.text.UART_EnableRx) for [Anonymous Symbol]
    fsl_uart_freertos.o(.text.UART_RTOS_Deinit) refers to fsl_uart.o(.text.UART_Deinit) for UART_Deinit
    fsl_uart_freertos.o(.text.UART_RTOS_Deinit) refers to event_groups.o(.text.vEventGroupDelete) for vEventGroupDelete
    fsl_uart_freertos.o(.text.UART_RTOS_Deinit) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    fsl_uart_freertos.o(.text.UART_RTOS_Deinit) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    fsl_uart_freertos.o(.ARM.exidx.text.UART_RTOS_Deinit) refers to fsl_uart_freertos.o(.text.UART_RTOS_Deinit) for [Anonymous Symbol]
    fsl_uart_freertos.o(.text.UART_RTOS_Send) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    fsl_uart_freertos.o(.text.UART_RTOS_Send) refers to fsl_uart.o(.text.UART_TransferSendNonBlocking) for UART_TransferSendNonBlocking
    fsl_uart_freertos.o(.text.UART_RTOS_Send) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    fsl_uart_freertos.o(.text.UART_RTOS_Send) refers to event_groups.o(.text.xEventGroupWaitBits) for xEventGroupWaitBits
    fsl_uart_freertos.o(.ARM.exidx.text.UART_RTOS_Send) refers to fsl_uart_freertos.o(.text.UART_RTOS_Send) for [Anonymous Symbol]
    fsl_uart_freertos.o(.text.UART_RTOS_Receive) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    fsl_uart_freertos.o(.text.UART_RTOS_Receive) refers to fsl_uart.o(.text.UART_TransferReceiveNonBlocking) for UART_TransferReceiveNonBlocking
    fsl_uart_freertos.o(.text.UART_RTOS_Receive) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    fsl_uart_freertos.o(.text.UART_RTOS_Receive) refers to event_groups.o(.text.xEventGroupWaitBits) for xEventGroupWaitBits
    fsl_uart_freertos.o(.text.UART_RTOS_Receive) refers to fsl_uart.o(.text.UART_TransferAbortReceive) for UART_TransferAbortReceive
    fsl_uart_freertos.o(.text.UART_RTOS_Receive) refers to event_groups.o(.text.xEventGroupClearBits) for xEventGroupClearBits
    fsl_uart_freertos.o(.ARM.exidx.text.UART_RTOS_Receive) refers to fsl_uart_freertos.o(.text.UART_RTOS_Receive) for [Anonymous Symbol]
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.text.prvHeapInit) for prvHeapInit
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xBlockAllocatedBit) for xBlockAllocatedBit
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4.o(.ARM.exidx.text.pvPortMalloc) refers to heap_4.o(.text.pvPortMalloc) for [Anonymous Symbol]
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.ucHeap) for ucHeap
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xBlockAllocatedBit) for xBlockAllocatedBit
    heap_4.o(.ARM.exidx.text.prvHeapInit) refers to heap_4.o(.text.prvHeapInit) for [Anonymous Symbol]
    heap_4.o(.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.ARM.exidx.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for [Anonymous Symbol]
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xBlockAllocatedBit) for xBlockAllocatedBit
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.vPortFree) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.ARM.exidx.text.vPortFree) refers to heap_4.o(.text.vPortFree) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetFreeHeapSize) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize) refers to heap_4.o(.text.xPortGetFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks) refers to heap_4.o(.text.vPortInitialiseBlocks) for [Anonymous Symbol]
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    heap_4.o(.ARM.exidx.text.vPortGetHeapStats) refers to heap_4.o(.text.vPortGetHeapStats) for [Anonymous Symbol]
    fsl_str.o(.text.StrFormatPrintf) refers to fsl_str.o(.text.PrintGetWidth) for PrintGetWidth
    fsl_str.o(.text.StrFormatPrintf) refers to fsl_str.o(.text.PrintGetPrecision) for PrintGetPrecision
    fsl_str.o(.text.StrFormatPrintf) refers to fsl_str.o(.text.PrintFilterLengthFlag) for PrintFilterLengthFlag
    fsl_str.o(.text.StrFormatPrintf) refers to fsl_str.o(.text.PrintIsdi) for PrintIsdi
    fsl_str.o(.text.StrFormatPrintf) refers to fsl_str.o(.text.ConvertRadixNumToString) for ConvertRadixNumToString
    fsl_str.o(.text.StrFormatPrintf) refers to fsl_str.o(.text.PrintOutputdifFobpu) for PrintOutputdifFobpu
    fsl_str.o(.text.StrFormatPrintf) refers to fsl_str.o(.text.PrintIsfF) for PrintIsfF
    fsl_str.o(.text.StrFormatPrintf) refers to fsl_str.o(.text.PrintIsxX) for PrintIsxX
    fsl_str.o(.text.StrFormatPrintf) refers to fsl_str.o(.text.PrintOutputxX) for PrintOutputxX
    fsl_str.o(.text.StrFormatPrintf) refers to fsl_str.o(.text.PrintIsobpu) for PrintIsobpu
    fsl_str.o(.text.StrFormatPrintf) refers to memcpy.o(.text) for memcpy
    fsl_str.o(.text.StrFormatPrintf) refers to fsl_str.o(.text.PrintGetRadixFromobpu) for PrintGetRadixFromobpu
    fsl_str.o(.text.StrFormatPrintf) refers to strlen.o(.text) for strlen
    fsl_str.o(.ARM.exidx.text.StrFormatPrintf) refers to fsl_str.o(.text.StrFormatPrintf) for [Anonymous Symbol]
    fsl_str.o(.ARM.exidx.text.PrintGetWidth) refers to fsl_str.o(.text.PrintGetWidth) for [Anonymous Symbol]
    fsl_str.o(.ARM.exidx.text.PrintGetPrecision) refers to fsl_str.o(.text.PrintGetPrecision) for [Anonymous Symbol]
    fsl_str.o(.ARM.exidx.text.PrintFilterLengthFlag) refers to fsl_str.o(.text.PrintFilterLengthFlag) for [Anonymous Symbol]
    fsl_str.o(.ARM.exidx.text.PrintIsdi) refers to fsl_str.o(.text.PrintIsdi) for [Anonymous Symbol]
    fsl_str.o(.ARM.exidx.text.ConvertRadixNumToString) refers to fsl_str.o(.text.ConvertRadixNumToString) for [Anonymous Symbol]
    fsl_str.o(.ARM.exidx.text.PrintOutputdifFobpu) refers to fsl_str.o(.text.PrintOutputdifFobpu) for [Anonymous Symbol]
    fsl_str.o(.ARM.exidx.text.PrintIsfF) refers to fsl_str.o(.text.PrintIsfF) for [Anonymous Symbol]
    fsl_str.o(.ARM.exidx.text.PrintIsxX) refers to fsl_str.o(.text.PrintIsxX) for [Anonymous Symbol]
    fsl_str.o(.ARM.exidx.text.PrintOutputxX) refers to fsl_str.o(.text.PrintOutputxX) for [Anonymous Symbol]
    fsl_str.o(.ARM.exidx.text.PrintIsobpu) refers to fsl_str.o(.text.PrintIsobpu) for [Anonymous Symbol]
    fsl_str.o(.ARM.exidx.text.PrintGetRadixFromobpu) refers to fsl_str.o(.text.PrintGetRadixFromobpu) for [Anonymous Symbol]
    fsl_str.o(.text.StrFormatScanf) refers to fsl_str.o(.text.ScanIgnoreWhiteSpace) for ScanIgnoreWhiteSpace
    fsl_str.o(.text.StrFormatScanf) refers to fsl_str.o(.text.StrFormatScanIsFormatStarting) for StrFormatScanIsFormatStarting
    fsl_str.o(.text.StrFormatScanf) refers to fsl_str.o(.text.StrFormatScanfStringHandling) for StrFormatScanfStringHandling
    fsl_str.o(.text.StrFormatScanf) refers to fsl_str.o(.text.StrFormatScanGetBase) for StrFormatScanGetBase
    fsl_str.o(.text.StrFormatScanf) refers to fsl_str.o(.text.StrFormatScanCheckSymbol) for StrFormatScanCheckSymbol
    fsl_str.o(.text.StrFormatScanf) refers to strlen.o(.text) for strlen
    fsl_str.o(.text.StrFormatScanf) refers to memcpy.o(.text) for memcpy
    fsl_str.o(.text.StrFormatScanf) refers to errno.o(i.__aeabi_errno_addr) for __aeabi_errno_addr
    fsl_str.o(.text.StrFormatScanf) refers to strtoul.o(.text) for strtoul
    fsl_str.o(.text.StrFormatScanf) refers to fsl_str.o(.text.ScanIsWhiteSpace) for ScanIsWhiteSpace
    fsl_str.o(.text.StrFormatScanf) refers to fsl_str.o(.text.StrFormatScanFillInteger) for StrFormatScanFillInteger
    fsl_str.o(.ARM.exidx.text.StrFormatScanf) refers to fsl_str.o(.text.StrFormatScanf) for [Anonymous Symbol]
    fsl_str.o(.text.ScanIgnoreWhiteSpace) refers to fsl_str.o(.text.ScanIsWhiteSpace) for ScanIsWhiteSpace
    fsl_str.o(.ARM.exidx.text.ScanIgnoreWhiteSpace) refers to fsl_str.o(.text.ScanIgnoreWhiteSpace) for [Anonymous Symbol]
    fsl_str.o(.ARM.exidx.text.StrFormatScanIsFormatStarting) refers to fsl_str.o(.text.StrFormatScanIsFormatStarting) for [Anonymous Symbol]
    fsl_str.o(.text.StrFormatScanfStringHandling) refers to errno.o(i.__aeabi_errno_addr) for __aeabi_errno_addr
    fsl_str.o(.text.StrFormatScanfStringHandling) refers to strtoul.o(.text) for strtoul
    fsl_str.o(.ARM.exidx.text.StrFormatScanfStringHandling) refers to fsl_str.o(.text.StrFormatScanfStringHandling) for [Anonymous Symbol]
    fsl_str.o(.ARM.exidx.text.ScanIsWhiteSpace) refers to fsl_str.o(.text.ScanIsWhiteSpace) for [Anonymous Symbol]
    fsl_str.o(.ARM.exidx.text.StrFormatScanGetBase) refers to fsl_str.o(.text.StrFormatScanGetBase) for [Anonymous Symbol]
    fsl_str.o(.ARM.exidx.text.StrFormatScanCheckSymbol) refers to fsl_str.o(.text.StrFormatScanCheckSymbol) for [Anonymous Symbol]
    fsl_str.o(.ARM.exidx.text.StrFormatScanFillInteger) refers to fsl_str.o(.text.StrFormatScanFillInteger) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_ReadOneCharacter) refers to fsl_debug_console.o(.bss.s_debugConsoleState) for s_debugConsoleState
    fsl_debug_console.o(.text.DbgConsole_ReadOneCharacter) refers to fsl_component_serial_manager.o(.text.SerialManager_ReadBlocking) for SerialManager_ReadBlocking
    fsl_debug_console.o(.text.DbgConsole_ReadOneCharacter) refers to fsl_debug_console.o(.bss.s_debugConsoleReadWaitSemaphore) for s_debugConsoleReadWaitSemaphore
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_ReadOneCharacter) refers to fsl_debug_console.o(.text.DbgConsole_ReadOneCharacter) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_SendData) refers to fsl_debug_console.o(.bss.s_debugConsoleState) for s_debugConsoleState
    fsl_debug_console.o(.text.DbgConsole_SendData) refers to fsl_component_serial_manager.o(.text.SerialManager_WriteBlocking) for SerialManager_WriteBlocking
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_SendData) refers to fsl_debug_console.o(.text.DbgConsole_SendData) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_SendDataReliable) refers to fsl_debug_console.o(.bss.g_serialHandle) for g_serialHandle
    fsl_debug_console.o(.text.DbgConsole_SendDataReliable) refers to fsl_debug_console.o(.bss.s_debugConsoleState) for s_debugConsoleState
    fsl_debug_console.o(.text.DbgConsole_SendDataReliable) refers to fsl_component_serial_manager.o(.text.SerialManager_WriteBlocking) for SerialManager_WriteBlocking
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_SendDataReliable) refers to fsl_debug_console.o(.text.DbgConsole_SendDataReliable) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_ReadLine) refers to fsl_debug_console.o(.bss.g_serialHandle) for g_serialHandle
    fsl_debug_console.o(.text.DbgConsole_ReadLine) refers to fsl_debug_console.o(.text.DbgConsole_ReadOneCharacter) for DbgConsole_ReadOneCharacter
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_ReadLine) refers to fsl_debug_console.o(.text.DbgConsole_ReadLine) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_ReadCharacter) refers to fsl_debug_console.o(.bss.g_serialHandle) for g_serialHandle
    fsl_debug_console.o(.text.DbgConsole_ReadCharacter) refers to fsl_debug_console.o(.text.DbgConsole_ReadOneCharacter) for DbgConsole_ReadOneCharacter
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_ReadCharacter) refers to fsl_debug_console.o(.text.DbgConsole_ReadCharacter) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Init) refers to fsl_debug_console.o(.bss.s_debugConsoleState) for s_debugConsoleState
    fsl_debug_console.o(.text.DbgConsole_Init) refers to memseta.o(.text) for memset
    fsl_debug_console.o(.text.DbgConsole_Init) refers to fsl_component_serial_manager.o(.text.SerialManager_Init) for SerialManager_Init
    fsl_debug_console.o(.text.DbgConsole_Init) refers to fsl_debug_console.o(.bss.s_debugConsoleReadWaitSemaphore) for s_debugConsoleReadWaitSemaphore
    fsl_debug_console.o(.text.DbgConsole_Init) refers to fsl_component_serial_manager.o(.text.SerialManager_OpenWriteHandle) for SerialManager_OpenWriteHandle
    fsl_debug_console.o(.text.DbgConsole_Init) refers to fsl_component_serial_manager.o(.text.SerialManager_OpenReadHandle) for SerialManager_OpenReadHandle
    fsl_debug_console.o(.text.DbgConsole_Init) refers to fsl_debug_console.o(.bss.g_serialHandle) for g_serialHandle
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Init) refers to fsl_debug_console.o(.text.DbgConsole_Init) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_EnterLowpower) refers to fsl_debug_console.o(.bss.s_debugConsoleState) for s_debugConsoleState
    fsl_debug_console.o(.text.DbgConsole_EnterLowpower) refers to fsl_component_serial_manager.o(.text.SerialManager_EnterLowpower) for SerialManager_EnterLowpower
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_EnterLowpower) refers to fsl_debug_console.o(.text.DbgConsole_EnterLowpower) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_ExitLowpower) refers to fsl_debug_console.o(.bss.s_debugConsoleState) for s_debugConsoleState
    fsl_debug_console.o(.text.DbgConsole_ExitLowpower) refers to fsl_component_serial_manager.o(.text.SerialManager_ExitLowpower) for SerialManager_ExitLowpower
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_ExitLowpower) refers to fsl_debug_console.o(.text.DbgConsole_ExitLowpower) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Deinit) refers to fsl_debug_console.o(.bss.s_debugConsoleState) for s_debugConsoleState
    fsl_debug_console.o(.text.DbgConsole_Deinit) refers to fsl_component_serial_manager.o(.text.SerialManager_CloseWriteHandle) for SerialManager_CloseWriteHandle
    fsl_debug_console.o(.text.DbgConsole_Deinit) refers to fsl_component_serial_manager.o(.text.SerialManager_CloseReadHandle) for SerialManager_CloseReadHandle
    fsl_debug_console.o(.text.DbgConsole_Deinit) refers to fsl_component_serial_manager.o(.text.SerialManager_Deinit) for SerialManager_Deinit
    fsl_debug_console.o(.text.DbgConsole_Deinit) refers to fsl_debug_console.o(.bss.g_serialHandle) for g_serialHandle
    fsl_debug_console.o(.text.DbgConsole_Deinit) refers to fsl_debug_console.o(.bss.s_debugConsoleReadWaitSemaphore) for s_debugConsoleReadWaitSemaphore
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Deinit) refers to fsl_debug_console.o(.text.DbgConsole_Deinit) for [Anonymous Symbol]
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Flush) refers to fsl_debug_console.o(.text.DbgConsole_Flush) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Printf) refers to fsl_debug_console.o(.text.DbgConsole_Vprintf) for DbgConsole_Vprintf
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Printf) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Vprintf) refers to memseta.o(.text) for __aeabi_memclr4
    fsl_debug_console.o(.text.DbgConsole_Vprintf) refers to fsl_debug_console.o(.bss.g_serialHandle) for g_serialHandle
    fsl_debug_console.o(.text.DbgConsole_Vprintf) refers to fsl_debug_console.o(.text.DbgConsole_PrintCallback) for DbgConsole_PrintCallback
    fsl_debug_console.o(.text.DbgConsole_Vprintf) refers to fsl_str.o(.text.StrFormatPrintf) for StrFormatPrintf
    fsl_debug_console.o(.text.DbgConsole_Vprintf) refers to fsl_debug_console.o(.text.DbgConsole_SendDataReliable) for DbgConsole_SendDataReliable
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Vprintf) refers to fsl_debug_console.o(.text.DbgConsole_Vprintf) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_PrintCallback) refers to fsl_debug_console.o(.text.DbgConsole_SendDataReliable) for DbgConsole_SendDataReliable
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_PrintCallback) refers to fsl_debug_console.o(.text.DbgConsole_PrintCallback) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Putchar) refers to fsl_debug_console.o(.text.DbgConsole_SendDataReliable) for DbgConsole_SendDataReliable
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Putchar) refers to fsl_debug_console.o(.text.DbgConsole_Putchar) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Scanf) refers to fsl_debug_console.o(.text.DbgConsole_ReadLine) for DbgConsole_ReadLine
    fsl_debug_console.o(.text.DbgConsole_Scanf) refers to fsl_str.o(.text.StrFormatScanf) for StrFormatScanf
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Scanf) refers to fsl_debug_console.o(.text.DbgConsole_Scanf) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_BlockingPrintf) refers to fsl_debug_console.o(.text.DbgConsole_BlockingVprintf) for DbgConsole_BlockingVprintf
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_BlockingPrintf) refers to fsl_debug_console.o(.text.DbgConsole_BlockingPrintf) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_BlockingVprintf) refers to memseta.o(.text) for __aeabi_memclr4
    fsl_debug_console.o(.text.DbgConsole_BlockingVprintf) refers to fsl_debug_console.o(.bss.g_serialHandle) for g_serialHandle
    fsl_debug_console.o(.text.DbgConsole_BlockingVprintf) refers to fsl_debug_console.o(.text.DbgConsole_PrintCallback) for DbgConsole_PrintCallback
    fsl_debug_console.o(.text.DbgConsole_BlockingVprintf) refers to fsl_str.o(.text.StrFormatPrintf) for StrFormatPrintf
    fsl_debug_console.o(.text.DbgConsole_BlockingVprintf) refers to fsl_debug_console.o(.bss.s_debugConsoleState) for s_debugConsoleState
    fsl_debug_console.o(.text.DbgConsole_BlockingVprintf) refers to fsl_component_serial_manager.o(.text.SerialManager_WriteBlocking) for SerialManager_WriteBlocking
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_BlockingVprintf) refers to fsl_debug_console.o(.text.DbgConsole_BlockingVprintf) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Getchar) refers to fsl_debug_console.o(.text.DbgConsole_ReadCharacter) for DbgConsole_ReadCharacter
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Getchar) refers to fsl_debug_console.o(.text.DbgConsole_Getchar) for [Anonymous Symbol]
    fsl_assert.o(.text.__aeabi_assert) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    fsl_assert.o(.ARM.exidx.text.__aeabi_assert) refers to fsl_assert.o(.text.__aeabi_assert) for [Anonymous Symbol]
    system_mk64f12.o(.text.SystemInit) refers to system_mk64f12.o(.text.SystemInitHook) for SystemInitHook
    system_mk64f12.o(.ARM.exidx.text.SystemInit) refers to system_mk64f12.o(.text.SystemInit) for [Anonymous Symbol]
    system_mk64f12.o(.ARM.exidx.text.SystemInitHook) refers to system_mk64f12.o(.text.SystemInitHook) for [Anonymous Symbol]
    system_mk64f12.o(.text.SystemCoreClockUpdate) refers to system_mk64f12.o(.data.SystemCoreClock) for SystemCoreClock
    system_mk64f12.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_mk64f12.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    fsl_adapter_uart.o(.text.HAL_UartInit) refers to fsl_uart.o(.text.UART_GetDefaultConfig) for UART_GetDefaultConfig
    fsl_adapter_uart.o(.text.HAL_UartInit) refers to fsl_adapter_uart.o(.rodata.s_UartAdapterBase) for s_UartAdapterBase
    fsl_adapter_uart.o(.text.HAL_UartInit) refers to fsl_uart.o(.text.UART_Init) for UART_Init
    fsl_adapter_uart.o(.text.HAL_UartInit) refers to fsl_adapter_uart.o(.text.HAL_UartGetStatus) for HAL_UartGetStatus
    fsl_adapter_uart.o(.text.HAL_UartInit) refers to fsl_adapter_uart.o(.rodata.str1.1) for .L.str
    fsl_adapter_uart.o(.text.HAL_UartInit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_adapter_uart.o(.ARM.exidx.text.HAL_UartInit) refers to fsl_adapter_uart.o(.text.HAL_UartInit) for [Anonymous Symbol]
    fsl_adapter_uart.o(.ARM.exidx.text.HAL_UartGetStatus) refers to fsl_adapter_uart.o(.text.HAL_UartGetStatus) for [Anonymous Symbol]
    fsl_adapter_uart.o(.text.HAL_UartDeinit) refers to fsl_adapter_uart.o(.rodata.s_UartAdapterBase) for s_UartAdapterBase
    fsl_adapter_uart.o(.text.HAL_UartDeinit) refers to fsl_uart.o(.text.UART_Deinit) for UART_Deinit
    fsl_adapter_uart.o(.text.HAL_UartDeinit) refers to fsl_adapter_uart.o(.rodata.str1.1) for .L.str
    fsl_adapter_uart.o(.text.HAL_UartDeinit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_adapter_uart.o(.ARM.exidx.text.HAL_UartDeinit) refers to fsl_adapter_uart.o(.text.HAL_UartDeinit) for [Anonymous Symbol]
    fsl_adapter_uart.o(.text.HAL_UartReceiveBlocking) refers to fsl_adapter_uart.o(.rodata.s_UartAdapterBase) for s_UartAdapterBase
    fsl_adapter_uart.o(.text.HAL_UartReceiveBlocking) refers to fsl_uart.o(.text.UART_ReadBlocking) for UART_ReadBlocking
    fsl_adapter_uart.o(.text.HAL_UartReceiveBlocking) refers to fsl_adapter_uart.o(.text.HAL_UartGetStatus) for HAL_UartGetStatus
    fsl_adapter_uart.o(.text.HAL_UartReceiveBlocking) refers to fsl_adapter_uart.o(.rodata.str1.1) for .L.str
    fsl_adapter_uart.o(.text.HAL_UartReceiveBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_adapter_uart.o(.ARM.exidx.text.HAL_UartReceiveBlocking) refers to fsl_adapter_uart.o(.text.HAL_UartReceiveBlocking) for [Anonymous Symbol]
    fsl_adapter_uart.o(.text.HAL_UartSendBlocking) refers to fsl_adapter_uart.o(.rodata.s_UartAdapterBase) for s_UartAdapterBase
    fsl_adapter_uart.o(.text.HAL_UartSendBlocking) refers to fsl_uart.o(.text.UART_WriteBlocking) for UART_WriteBlocking
    fsl_adapter_uart.o(.text.HAL_UartSendBlocking) refers to fsl_adapter_uart.o(.rodata.str1.1) for .L.str
    fsl_adapter_uart.o(.text.HAL_UartSendBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_adapter_uart.o(.ARM.exidx.text.HAL_UartSendBlocking) refers to fsl_adapter_uart.o(.text.HAL_UartSendBlocking) for [Anonymous Symbol]
    fsl_adapter_uart.o(.text.HAL_UartEnterLowpower) refers to fsl_adapter_uart.o(.rodata.str1.1) for .L.str
    fsl_adapter_uart.o(.text.HAL_UartEnterLowpower) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_adapter_uart.o(.ARM.exidx.text.HAL_UartEnterLowpower) refers to fsl_adapter_uart.o(.text.HAL_UartEnterLowpower) for [Anonymous Symbol]
    fsl_adapter_uart.o(.text.HAL_UartExitLowpower) refers to fsl_adapter_uart.o(.rodata.str1.1) for .L.str
    fsl_adapter_uart.o(.text.HAL_UartExitLowpower) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_adapter_uart.o(.ARM.exidx.text.HAL_UartExitLowpower) refers to fsl_adapter_uart.o(.text.HAL_UartExitLowpower) for [Anonymous Symbol]
    fsl_component_serial_manager.o(.text.SerialManager_Init) refers to memseta.o(.text) for memset
    fsl_component_serial_manager.o(.text.SerialManager_Init) refers to fsl_component_serial_port_uart.o(.text.Serial_UartInit) for Serial_UartInit
    fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_Init) refers to fsl_component_serial_manager.o(.text.SerialManager_Init) for [Anonymous Symbol]
    fsl_component_serial_manager.o(.text.SerialManager_Deinit) refers to fsl_component_serial_manager.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_component_serial_manager.o(.text.SerialManager_Deinit) refers to fsl_component_serial_port_uart.o(.text.Serial_UartDeinit) for Serial_UartDeinit
    fsl_component_serial_manager.o(.text.SerialManager_Deinit) refers to fsl_component_serial_manager.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_Deinit) refers to fsl_component_serial_manager.o(.text.SerialManager_Deinit) for [Anonymous Symbol]
    fsl_component_serial_manager.o(.ARM.exidx.text.DisableGlobalIRQ) refers to fsl_component_serial_manager.o(.text.DisableGlobalIRQ) for [Anonymous Symbol]
    fsl_component_serial_manager.o(.ARM.exidx.text.EnableGlobalIRQ) refers to fsl_component_serial_manager.o(.text.EnableGlobalIRQ) for [Anonymous Symbol]
    fsl_component_serial_manager.o(.text.SerialManager_OpenWriteHandle) refers to fsl_component_serial_manager.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_component_serial_manager.o(.text.SerialManager_OpenWriteHandle) refers to fsl_component_serial_manager.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_component_serial_manager.o(.text.SerialManager_OpenWriteHandle) refers to memseta.o(.text) for memset
    fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_OpenWriteHandle) refers to fsl_component_serial_manager.o(.text.SerialManager_OpenWriteHandle) for [Anonymous Symbol]
    fsl_component_serial_manager.o(.text.SerialManager_CloseWriteHandle) refers to fsl_component_serial_manager.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_component_serial_manager.o(.text.SerialManager_CloseWriteHandle) refers to fsl_component_serial_manager.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_component_serial_manager.o(.text.SerialManager_CloseWriteHandle) refers to memseta.o(.text) for memset
    fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_CloseWriteHandle) refers to fsl_component_serial_manager.o(.text.SerialManager_CloseWriteHandle) for [Anonymous Symbol]
    fsl_component_serial_manager.o(.text.SerialManager_OpenReadHandle) refers to fsl_component_serial_manager.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_component_serial_manager.o(.text.SerialManager_OpenReadHandle) refers to memseta.o(.text) for memset
    fsl_component_serial_manager.o(.text.SerialManager_OpenReadHandle) refers to fsl_component_serial_manager.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_OpenReadHandle) refers to fsl_component_serial_manager.o(.text.SerialManager_OpenReadHandle) for [Anonymous Symbol]
    fsl_component_serial_manager.o(.text.SerialManager_CloseReadHandle) refers to fsl_component_serial_manager.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_component_serial_manager.o(.text.SerialManager_CloseReadHandle) refers to fsl_component_serial_manager.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_component_serial_manager.o(.text.SerialManager_CloseReadHandle) refers to memseta.o(.text) for memset
    fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_CloseReadHandle) refers to fsl_component_serial_manager.o(.text.SerialManager_CloseReadHandle) for [Anonymous Symbol]
    fsl_component_serial_manager.o(.text.SerialManager_WriteBlocking) refers to fsl_component_serial_manager.o(.text.SerialManager_Write) for SerialManager_Write
    fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_WriteBlocking) refers to fsl_component_serial_manager.o(.text.SerialManager_WriteBlocking) for [Anonymous Symbol]
    fsl_component_serial_manager.o(.text.SerialManager_Write) refers to fsl_component_serial_manager.o(.text.SerialManager_StartWriting) for SerialManager_StartWriting
    fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_Write) refers to fsl_component_serial_manager.o(.text.SerialManager_Write) for [Anonymous Symbol]
    fsl_component_serial_manager.o(.text.SerialManager_ReadBlocking) refers to fsl_component_serial_manager.o(.text.SerialManager_Read) for SerialManager_Read
    fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_ReadBlocking) refers to fsl_component_serial_manager.o(.text.SerialManager_ReadBlocking) for [Anonymous Symbol]
    fsl_component_serial_manager.o(.text.SerialManager_Read) refers to fsl_component_serial_manager.o(.text.SerialManager_StartReading) for SerialManager_StartReading
    fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_Read) refers to fsl_component_serial_manager.o(.text.SerialManager_Read) for [Anonymous Symbol]
    fsl_component_serial_manager.o(.text.SerialManager_EnterLowpower) refers to fsl_component_serial_port_uart.o(.text.Serial_UartEnterLowpower) for Serial_UartEnterLowpower
    fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_EnterLowpower) refers to fsl_component_serial_manager.o(.text.SerialManager_EnterLowpower) for [Anonymous Symbol]
    fsl_component_serial_manager.o(.text.SerialManager_ExitLowpower) refers to fsl_component_serial_port_uart.o(.text.Serial_UartExitLowpower) for Serial_UartExitLowpower
    fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_ExitLowpower) refers to fsl_component_serial_manager.o(.text.SerialManager_ExitLowpower) for [Anonymous Symbol]
    fsl_component_serial_manager.o(.text.SerialManager_StartWriting) refers to fsl_component_serial_port_uart.o(.text.Serial_UartWrite) for Serial_UartWrite
    fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_StartWriting) refers to fsl_component_serial_manager.o(.text.SerialManager_StartWriting) for [Anonymous Symbol]
    fsl_component_serial_manager.o(.text.SerialManager_StartReading) refers to fsl_component_serial_port_uart.o(.text.Serial_UartRead) for Serial_UartRead
    fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_StartReading) refers to fsl_component_serial_manager.o(.text.SerialManager_StartReading) for [Anonymous Symbol]
    fsl_component_serial_port_uart.o(.text.Serial_UartInit) refers to fsl_adapter_uart.o(.text.HAL_UartInit) for HAL_UartInit
    fsl_component_serial_port_uart.o(.ARM.exidx.text.Serial_UartInit) refers to fsl_component_serial_port_uart.o(.text.Serial_UartInit) for [Anonymous Symbol]
    fsl_component_serial_port_uart.o(.text.Serial_UartDeinit) refers to fsl_adapter_uart.o(.text.HAL_UartDeinit) for HAL_UartDeinit
    fsl_component_serial_port_uart.o(.ARM.exidx.text.Serial_UartDeinit) refers to fsl_component_serial_port_uart.o(.text.Serial_UartDeinit) for [Anonymous Symbol]
    fsl_component_serial_port_uart.o(.text.Serial_UartWrite) refers to fsl_adapter_uart.o(.text.HAL_UartSendBlocking) for HAL_UartSendBlocking
    fsl_component_serial_port_uart.o(.ARM.exidx.text.Serial_UartWrite) refers to fsl_component_serial_port_uart.o(.text.Serial_UartWrite) for [Anonymous Symbol]
    fsl_component_serial_port_uart.o(.text.Serial_UartRead) refers to fsl_adapter_uart.o(.text.HAL_UartReceiveBlocking) for HAL_UartReceiveBlocking
    fsl_component_serial_port_uart.o(.ARM.exidx.text.Serial_UartRead) refers to fsl_component_serial_port_uart.o(.text.Serial_UartRead) for [Anonymous Symbol]
    fsl_component_serial_port_uart.o(.text.Serial_UartEnterLowpower) refers to fsl_adapter_uart.o(.text.HAL_UartEnterLowpower) for HAL_UartEnterLowpower
    fsl_component_serial_port_uart.o(.ARM.exidx.text.Serial_UartEnterLowpower) refers to fsl_component_serial_port_uart.o(.text.Serial_UartEnterLowpower) for [Anonymous Symbol]
    fsl_component_serial_port_uart.o(.text.Serial_UartExitLowpower) refers to fsl_adapter_uart.o(.text.HAL_UartExitLowpower) for HAL_UartExitLowpower
    fsl_component_serial_port_uart.o(.ARM.exidx.text.Serial_UartExitLowpower) refers to fsl_component_serial_port_uart.o(.text.Serial_UartExitLowpower) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_Init) refers to fsl_component_generic_list.o(.text.LIST_Init) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetList) refers to fsl_component_generic_list.o(.text.LIST_GetList) for [Anonymous Symbol]
    fsl_component_generic_list.o(.text.LIST_AddTail) refers to fsl_component_generic_list.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_component_generic_list.o(.text.LIST_AddTail) refers to fsl_component_generic_list.o(.text.LIST_Error_Check) for LIST_Error_Check
    fsl_component_generic_list.o(.text.LIST_AddTail) refers to fsl_component_generic_list.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_AddTail) refers to fsl_component_generic_list.o(.text.LIST_AddTail) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.DisableGlobalIRQ) refers to fsl_component_generic_list.o(.text.DisableGlobalIRQ) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_Error_Check) refers to fsl_component_generic_list.o(.text.LIST_Error_Check) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.EnableGlobalIRQ) refers to fsl_component_generic_list.o(.text.EnableGlobalIRQ) for [Anonymous Symbol]
    fsl_component_generic_list.o(.text.LIST_AddHead) refers to fsl_component_generic_list.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_component_generic_list.o(.text.LIST_AddHead) refers to fsl_component_generic_list.o(.text.LIST_Error_Check) for LIST_Error_Check
    fsl_component_generic_list.o(.text.LIST_AddHead) refers to fsl_component_generic_list.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_AddHead) refers to fsl_component_generic_list.o(.text.LIST_AddHead) for [Anonymous Symbol]
    fsl_component_generic_list.o(.text.LIST_RemoveHead) refers to fsl_component_generic_list.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_component_generic_list.o(.text.LIST_RemoveHead) refers to fsl_component_generic_list.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_RemoveHead) refers to fsl_component_generic_list.o(.text.LIST_RemoveHead) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetHead) refers to fsl_component_generic_list.o(.text.LIST_GetHead) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetNext) refers to fsl_component_generic_list.o(.text.LIST_GetNext) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetPrev) refers to fsl_component_generic_list.o(.text.LIST_GetPrev) for [Anonymous Symbol]
    fsl_component_generic_list.o(.text.LIST_RemoveElement) refers to fsl_component_generic_list.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_component_generic_list.o(.text.LIST_RemoveElement) refers to fsl_component_generic_list.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_RemoveElement) refers to fsl_component_generic_list.o(.text.LIST_RemoveElement) for [Anonymous Symbol]
    fsl_component_generic_list.o(.text.LIST_AddPrevElement) refers to fsl_component_generic_list.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_component_generic_list.o(.text.LIST_AddPrevElement) refers to fsl_component_generic_list.o(.text.LIST_Error_Check) for LIST_Error_Check
    fsl_component_generic_list.o(.text.LIST_AddPrevElement) refers to fsl_component_generic_list.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_AddPrevElement) refers to fsl_component_generic_list.o(.text.LIST_AddPrevElement) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetSize) refers to fsl_component_generic_list.o(.text.LIST_GetSize) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetAvailableSize) refers to fsl_component_generic_list.o(.text.LIST_GetAvailableSize) for [Anonymous Symbol]
    startup_mk64f12.o(.text) refers to startup_mk64f12.o(.isr_vector) for __Vectors
    startup_mk64f12.o(.text) refers to system_mk64f12.o(.text.SystemInit) for SystemInit
    startup_mk64f12.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    startup_mk64f12.o(.text) refers to port.o(.text.SVC_Handler) for SVC_Handler
    startup_mk64f12.o(.text) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    startup_mk64f12.o(.text) refers to port.o(.text.SysTick_Handler) for SysTick_Handler
    startup_mk64f12.o(.text) refers to fsl_uart.o(.text.UART0_RX_TX_DriverIRQHandler) for UART0_RX_TX_DriverIRQHandler
    startup_mk64f12.o(.text) refers to fsl_uart.o(.text.UART1_RX_TX_DriverIRQHandler) for UART1_RX_TX_DriverIRQHandler
    startup_mk64f12.o(.text) refers to fsl_uart.o(.text.UART2_RX_TX_DriverIRQHandler) for UART2_RX_TX_DriverIRQHandler
    startup_mk64f12.o(.text) refers to fsl_uart.o(.text.UART3_RX_TX_DriverIRQHandler) for UART3_RX_TX_DriverIRQHandler
    startup_mk64f12.o(.text) refers to fsl_uart.o(.text.UART4_RX_TX_DriverIRQHandler) for UART4_RX_TX_DriverIRQHandler
    startup_mk64f12.o(.text) refers to fsl_uart.o(.text.UART5_RX_TX_DriverIRQHandler) for UART5_RX_TX_DriverIRQHandler
    startup_mk64f12.o(.isr_vector) refers to startup_mk64f12.o(.text) for Reset_Handler
    startup_mk64f12.o(.isr_vector) refers to port.o(.text.SVC_Handler) for SVC_Handler
    startup_mk64f12.o(.isr_vector) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    startup_mk64f12.o(.isr_vector) refers to port.o(.text.SysTick_Handler) for SysTick_Handler
    event_groups.o(.text.xEventGroupCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    event_groups.o(.text.xEventGroupCreate) refers to list.o(.text.vListInitialise) for vListInitialise
    event_groups.o(.ARM.exidx.text.xEventGroupCreate) refers to event_groups.o(.text.xEventGroupCreate) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupSync) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(.text.xEventGroupSync) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupSync) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupSync) refers to event_groups.o(.text.xEventGroupSync) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.ARM.exidx.text.xEventGroupSetBits) refers to event_groups.o(.text.xEventGroupSetBits) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupWaitBits) refers to event_groups.o(.text.prvTestWaitCondition) for prvTestWaitCondition
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(.text.xEventGroupWaitBits) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupWaitBits) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupWaitBits) refers to event_groups.o(.text.xEventGroupWaitBits) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.prvTestWaitCondition) refers to event_groups.o(.text.prvTestWaitCondition) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupClearBits) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupClearBits) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupClearBits) refers to event_groups.o(.text.xEventGroupClearBits) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupClearBitsFromISR) refers to event_groups.o(.text.vEventGroupClearBitsCallback) for vEventGroupClearBitsCallback
    event_groups.o(.text.xEventGroupClearBitsFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for xTimerPendFunctionCallFromISR
    event_groups.o(.ARM.exidx.text.xEventGroupClearBitsFromISR) refers to event_groups.o(.text.xEventGroupClearBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupClearBitsCallback) refers to event_groups.o(.text.xEventGroupClearBits) for xEventGroupClearBits
    event_groups.o(.ARM.exidx.text.vEventGroupClearBitsCallback) refers to event_groups.o(.text.vEventGroupClearBitsCallback) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.xEventGroupGetBitsFromISR) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.text.vEventGroupDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.ARM.exidx.text.vEventGroupDelete) refers to event_groups.o(.text.vEventGroupDelete) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupSetBitsCallback) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    event_groups.o(.ARM.exidx.text.vEventGroupSetBitsCallback) refers to event_groups.o(.text.vEventGroupSetBitsCallback) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSetBitsFromISR) refers to event_groups.o(.text.vEventGroupSetBitsCallback) for vEventGroupSetBitsCallback
    event_groups.o(.text.xEventGroupSetBitsFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for xTimerPendFunctionCallFromISR
    event_groups.o(.ARM.exidx.text.xEventGroupSetBitsFromISR) refers to event_groups.o(.text.xEventGroupSetBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.uxEventGroupGetNumber) refers to event_groups.o(.text.uxEventGroupGetNumber) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.vEventGroupSetNumber) refers to event_groups.o(.text.vEventGroupSetNumber) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialise) refers to list.o(.text.vListInitialise) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialiseItem) refers to list.o(.text.vListInitialiseItem) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsertEnd) refers to list.o(.text.vListInsertEnd) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsert) refers to list.o(.text.vListInsert) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.uxListRemove) refers to list.o(.text.uxListRemove) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericReset) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericReset) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericReset) refers to queue.o(.text.xQueueGenericReset) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueGenericCreate) refers to queue.o(.text.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(.ARM.exidx.text.xQueueGenericCreate) refers to queue.o(.text.xQueueGenericCreate) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseNewQueue) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    queue.o(.ARM.exidx.text.prvInitialiseNewQueue) refers to queue.o(.text.prvInitialiseNewQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(.ARM.exidx.text.xQueueCreateMutex) refers to queue.o(.text.xQueueCreateMutex) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseMutex) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.prvInitialiseMutex) refers to queue.o(.text.prvInitialiseMutex) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGiveMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvIsQueueFull) for prvIsQueueFull
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGenericSend) refers to queue.o(.text.xQueueGenericSend) for [Anonymous Symbol]
    queue.o(.text.xQueueTakeMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueTakeMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for prvGetDisinheritPriorityAfterTimeout
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(.ARM.exidx.text.xQueueSemaphoreTake) refers to queue.o(.text.xQueueSemaphoreTake) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueCreateCountingSemaphore) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataToQueue) refers to memcpy.o(.text) for memcpy
    queue.o(.text.prvCopyDataToQueue) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.ARM.exidx.text.prvCopyDataToQueue) refers to queue.o(.text.prvCopyDataToQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueFull) refers to queue.o(.text.prvIsQueueFull) for [Anonymous Symbol]
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.vTaskMissedYield) for vTaskMissedYield
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvUnlockQueue) refers to queue.o(.text.prvUnlockQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSendFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGenericSendFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGiveFromISR) refers to queue.o(.text.xQueueGiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.ARM.exidx.text.xQueueReceive) refers to queue.o(.text.xQueueReceive) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataFromQueue) refers to memcpy.o(.text) for memcpy
    queue.o(.ARM.exidx.text.prvCopyDataFromQueue) refers to queue.o(.text.prvCopyDataFromQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueEmpty) refers to queue.o(.text.prvIsQueueEmpty) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for [Anonymous Symbol]
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.ARM.exidx.text.xQueuePeek) refers to queue.o(.text.xQueuePeek) for [Anonymous Symbol]
    queue.o(.text.xQueueReceiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueReceiveFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueReceiveFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueuePeekFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueuePeekFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.ARM.exidx.text.xQueuePeekFromISR) refers to queue.o(.text.xQueuePeekFromISR) for [Anonymous Symbol]
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueMessagesWaiting) refers to queue.o(.text.uxQueueMessagesWaiting) for [Anonymous Symbol]
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueSpacesAvailable) refers to queue.o(.text.uxQueueSpacesAvailable) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueDelete) refers to queue.o(.text.vQueueUnregisterQueue) for vQueueUnregisterQueue
    queue.o(.text.vQueueDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    queue.o(.ARM.exidx.text.vQueueDelete) refers to queue.o(.text.vQueueDelete) for [Anonymous Symbol]
    queue.o(.text.vQueueUnregisterQueue) refers to queue.o(.bss.xQueueRegistry) for xQueueRegistry
    queue.o(.ARM.exidx.text.vQueueUnregisterQueue) refers to queue.o(.text.vQueueUnregisterQueue) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueGetQueueNumber) refers to queue.o(.text.uxQueueGetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.vQueueSetQueueNumber) refers to queue.o(.text.vQueueSetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.ucQueueGetQueueType) refers to queue.o(.text.ucQueueGetQueueType) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR) refers to queue.o(.text.xQueueIsQueueEmptyFromISR) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR) refers to queue.o(.text.xQueueIsQueueFullFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueAddToRegistry) refers to queue.o(.bss.xQueueRegistry) for xQueueRegistry
    queue.o(.ARM.exidx.text.vQueueAddToRegistry) refers to queue.o(.text.vQueueAddToRegistry) for [Anonymous Symbol]
    queue.o(.text.pcQueueGetName) refers to queue.o(.bss.xQueueRegistry) for xQueueRegistry
    queue.o(.ARM.exidx.text.pcQueueGetName) refers to queue.o(.text.pcQueueGetName) for [Anonymous Symbol]
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for vTaskPlaceOnEventListRestricted
    queue.o(.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.vQueueWaitForMessageRestricted) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferGenericCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    stream_buffer.o(.text.xStreamBufferGenericCreate) refers to stream_buffer.o(.text.prvInitialiseNewStreamBuffer) for prvInitialiseNewStreamBuffer
    stream_buffer.o(.ARM.exidx.text.xStreamBufferGenericCreate) refers to stream_buffer.o(.text.xStreamBufferGenericCreate) for [Anonymous Symbol]
    stream_buffer.o(.text.prvInitialiseNewStreamBuffer) refers to memseta.o(.text) for memset
    stream_buffer.o(.ARM.exidx.text.prvInitialiseNewStreamBuffer) refers to stream_buffer.o(.text.prvInitialiseNewStreamBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.vStreamBufferDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    stream_buffer.o(.text.vStreamBufferDelete) refers to memseta.o(.text) for memset
    stream_buffer.o(.ARM.exidx.text.vStreamBufferDelete) refers to stream_buffer.o(.text.vStreamBufferDelete) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    stream_buffer.o(.text.xStreamBufferReset) refers to stream_buffer.o(.text.prvInitialiseNewStreamBuffer) for prvInitialiseNewStreamBuffer
    stream_buffer.o(.text.xStreamBufferReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReset) refers to stream_buffer.o(.text.xStreamBufferReset) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSetTriggerLevel) refers to stream_buffer.o(.text.xStreamBufferSetTriggerLevel) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSpacesAvailable) refers to stream_buffer.o(.text.xStreamBufferSpacesAvailable) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferBytesAvailable) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.ARM.exidx.text.xStreamBufferBytesAvailable) refers to stream_buffer.o(.text.xStreamBufferBytesAvailable) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.prvBytesInBuffer) refers to stream_buffer.o(.text.prvBytesInBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.vTaskSetTimeOutState) for vTaskSetTimeOutState
    stream_buffer.o(.text.xStreamBufferSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    stream_buffer.o(.text.xStreamBufferSend) refers to stream_buffer.o(.text.xStreamBufferSpacesAvailable) for xStreamBufferSpacesAvailable
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for xTaskGenericNotifyStateClear
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    stream_buffer.o(.text.xStreamBufferSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskGenericNotifyWait) for xTaskGenericNotifyWait
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    stream_buffer.o(.text.xStreamBufferSend) refers to stream_buffer.o(.text.prvWriteMessageToBuffer) for prvWriteMessageToBuffer
    stream_buffer.o(.text.xStreamBufferSend) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSend) refers to stream_buffer.o(.text.xStreamBufferSend) for [Anonymous Symbol]
    stream_buffer.o(.text.prvWriteMessageToBuffer) refers to stream_buffer.o(.text.prvWriteBytesToBuffer) for prvWriteBytesToBuffer
    stream_buffer.o(.ARM.exidx.text.prvWriteMessageToBuffer) refers to stream_buffer.o(.text.prvWriteMessageToBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to stream_buffer.o(.text.xStreamBufferSpacesAvailable) for xStreamBufferSpacesAvailable
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to stream_buffer.o(.text.prvWriteMessageToBuffer) for prvWriteMessageToBuffer
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSendFromISR) refers to stream_buffer.o(.text.xStreamBufferSendFromISR) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    stream_buffer.o(.text.xStreamBufferReceive) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for xTaskGenericNotifyStateClear
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskGenericNotifyWait) for xTaskGenericNotifyWait
    stream_buffer.o(.text.xStreamBufferReceive) refers to stream_buffer.o(.text.prvReadMessageFromBuffer) for prvReadMessageFromBuffer
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReceive) refers to stream_buffer.o(.text.xStreamBufferReceive) for [Anonymous Symbol]
    stream_buffer.o(.text.prvReadMessageFromBuffer) refers to stream_buffer.o(.text.prvReadBytesFromBuffer) for prvReadBytesFromBuffer
    stream_buffer.o(.ARM.exidx.text.prvReadMessageFromBuffer) refers to stream_buffer.o(.text.prvReadMessageFromBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes) refers to stream_buffer.o(.text.prvReadBytesFromBuffer) for prvReadBytesFromBuffer
    stream_buffer.o(.ARM.exidx.text.xStreamBufferNextMessageLengthBytes) refers to stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes) for [Anonymous Symbol]
    stream_buffer.o(.text.prvReadBytesFromBuffer) refers to memcpy.o(.text) for memcpy
    stream_buffer.o(.ARM.exidx.text.prvReadBytesFromBuffer) refers to stream_buffer.o(.text.prvReadBytesFromBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReceiveFromISR) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferReceiveFromISR) refers to stream_buffer.o(.text.prvReadMessageFromBuffer) for prvReadMessageFromBuffer
    stream_buffer.o(.text.xStreamBufferReceiveFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveFromISR) refers to stream_buffer.o(.text.xStreamBufferReceiveFromISR) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.xStreamBufferIsEmpty) refers to stream_buffer.o(.text.xStreamBufferIsEmpty) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferIsFull) refers to stream_buffer.o(.text.xStreamBufferSpacesAvailable) for xStreamBufferSpacesAvailable
    stream_buffer.o(.ARM.exidx.text.xStreamBufferIsFull) refers to stream_buffer.o(.text.xStreamBufferIsFull) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferSendCompletedFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSendCompletedFromISR) refers to stream_buffer.o(.text.xStreamBufferSendCompletedFromISR) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReceiveCompletedFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveCompletedFromISR) refers to stream_buffer.o(.text.xStreamBufferReceiveCompletedFromISR) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.uxStreamBufferGetStreamBufferNumber) refers to stream_buffer.o(.text.uxStreamBufferGetStreamBufferNumber) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.vStreamBufferSetStreamBufferNumber) refers to stream_buffer.o(.text.vStreamBufferSetStreamBufferNumber) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.ucStreamBufferGetStreamBufferType) refers to stream_buffer.o(.text.ucStreamBufferGetStreamBufferType) for [Anonymous Symbol]
    stream_buffer.o(.text.prvWriteBytesToBuffer) refers to memcpy.o(.text) for memcpy
    stream_buffer.o(.ARM.exidx.text.prvWriteBytesToBuffer) refers to stream_buffer.o(.text.prvWriteBytesToBuffer) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.ARM.exidx.text.xTaskCreate) refers to tasks.o(.text.xTaskCreate) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseNewTask) refers to memseta.o(.text) for memset
    tasks.o(.text.prvInitialiseNewTask) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks.o(.text.prvInitialiseNewTask) refers to port.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(.ARM.exidx.text.prvInitialiseNewTask) refers to tasks.o(.text.prvInitialiseNewTask) for [Anonymous Symbol]
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvAddNewTaskToReadyList) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskDelete) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.vTaskDelete) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskDelete) refers to tasks.o(.text.vTaskDelete) for [Anonymous Symbol]
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.prvDeleteTCB) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.ARM.exidx.text.prvDeleteTCB) refers to tasks.o(.text.prvDeleteTCB) for [Anonymous Symbol]
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskDelayUntil) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspendAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskSuspendAll) refers to tasks.o(.text.vTaskSuspendAll) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeAll) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeAll) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(.ARM.exidx.text.xTaskResumeAll) refers to tasks.o(.text.xTaskResumeAll) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskDelay) refers to tasks.o(.text.vTaskDelay) for [Anonymous Symbol]
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.ARM.exidx.text.eTaskGetState) refers to tasks.o(.text.eTaskGetState) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.uxTaskPriorityGet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.uxTaskPriorityGet) refers to tasks.o(.text.uxTaskPriorityGet) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR) refers to tasks.o(.text.uxTaskPriorityGetFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskPrioritySet) refers to tasks.o(.text.vTaskPrioritySet) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(.ARM.exidx.text.vTaskSuspend) refers to tasks.o(.text.vTaskSuspend) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.vTaskSwitchContext) refers to tasks.o(.text.vTaskSwitchContext) for [Anonymous Symbol]
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskResume) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.vTaskResume) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskResume) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskResume) refers to tasks.o(.text.vTaskResume) for [Anonymous Symbol]
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended) refers to tasks.o(.text.prvTaskIsTaskSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.xTaskResumeFromISR) refers to tasks.o(.text.xTaskResumeFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.prvIdleTask) for prvIdleTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    tasks.o(.text.vTaskStartScheduler) refers to timers.o(.text.xTimerCreateTimerTask) for xTimerCreateTimerTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStartScheduler) refers to port.o(.text.xPortStartScheduler) for xPortStartScheduler
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.uxTopUsedPriority) for uxTopUsedPriority
    tasks.o(.ARM.exidx.text.vTaskStartScheduler) refers to tasks.o(.text.vTaskStartScheduler) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(.ARM.exidx.text.prvIdleTask) refers to tasks.o(.text.prvIdleTask) for [Anonymous Symbol]
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskEndScheduler) refers to port.o(.text.vPortEndScheduler) for vPortEndScheduler
    tasks.o(.ARM.exidx.text.vTaskEndScheduler) refers to tasks.o(.text.vTaskEndScheduler) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskIncrementTick) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskIncrementTick) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskIncrementTick) refers to tasks.o(.text.xTaskIncrementTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCount) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCountFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskGetTickCountFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR) refers to tasks.o(.text.xTaskGetTickCountFromISR) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetNumberOfTasks) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.pcTaskGetName) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pcTaskGetName) refers to tasks.o(.text.pcTaskGetName) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.prvListTasksWithinSingleList) for prvListTasksWithinSingleList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.uxTaskGetSystemState) refers to tasks.o(.text.uxTaskGetSystemState) for [Anonymous Symbol]
    tasks.o(.text.prvListTasksWithinSingleList) refers to tasks.o(.text.vTaskGetInfo) for vTaskGetInfo
    tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList) refers to tasks.o(.text.prvListTasksWithinSingleList) for [Anonymous Symbol]
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskCatchUpTicks) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList) refers to tasks.o(.text.vTaskPlaceOnEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskRemoveFromEventList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList) refers to tasks.o(.text.xTaskRemoveFromEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskSetTimeOutState) refers to tasks.o(.text.vTaskSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut) refers to tasks.o(.text.xTaskCheckForTimeOut) for [Anonymous Symbol]
    tasks.o(.text.vTaskMissedYield) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskMissedYield) refers to tasks.o(.text.vTaskMissedYield) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber) refers to tasks.o(.text.uxTaskGetTaskNumber) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskSetTaskNumber) refers to tasks.o(.text.vTaskSetTaskNumber) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetThreadLocalStoragePointer) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.vTaskSetThreadLocalStoragePointer) refers to tasks.o(.text.vTaskSetThreadLocalStoragePointer) for [Anonymous Symbol]
    tasks.o(.text.pvTaskGetThreadLocalStoragePointer) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pvTaskGetThreadLocalStoragePointer) refers to tasks.o(.text.pvTaskGetThreadLocalStoragePointer) for [Anonymous Symbol]
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.vTaskGetInfo) refers to tasks.o(.text.vTaskGetInfo) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.xTaskGetSchedulerState) refers to tasks.o(.text.xTaskGetSchedulerState) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.xTaskPriorityInherit) refers to tasks.o(.text.xTaskPriorityInherit) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit) refers to tasks.o(.text.xTaskPriorityDisinherit) for [Anonymous Symbol]
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for [Anonymous Symbol]
    tasks.o(.text.uxTaskResetEventItemValue) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue) refers to tasks.o(.text.uxTaskResetEventItemValue) for [Anonymous Symbol]
    tasks.o(.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.ulTaskGenericNotifyTake) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait) refers to tasks.o(.text.xTaskGenericNotifyWait) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskGenericNotify) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotify) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotify) refers to tasks.o(.text.xTaskGenericNotify) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.text.vTaskGenericNotifyGiveFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.text.ulTaskGenericNotifyValueClear) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvInitialiseTaskLists) refers to list.o(.text.vListInitialise) for vListInitialise
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList1) for xDelayedTaskList1
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList2) for xDelayedTaskList2
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.ARM.exidx.text.prvInitialiseTaskLists) refers to tasks.o(.text.prvInitialiseTaskLists) for [Anonymous Symbol]
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvTimerTask) for prvTimerTask
    timers.o(.text.xTimerCreateTimerTask) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    timers.o(.ARM.exidx.text.xTimerCreateTimerTask) refers to timers.o(.text.xTimerCreateTimerTask) for [Anonymous Symbol]
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList1) for xActiveTimerList1
    timers.o(.text.prvCheckForValidListAndQueue) refers to list.o(.text.vListInitialise) for vListInitialise
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList2) for xActiveTimerList2
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    timers.o(.text.prvCheckForValidListAndQueue) refers to queue.o(.text.vQueueAddToRegistry) for vQueueAddToRegistry
    timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue) refers to timers.o(.text.prvCheckForValidListAndQueue) for [Anonymous Symbol]
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvGetNextExpireTime) for prvGetNextExpireTime
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for prvProcessTimerOrBlockTask
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessReceivedCommands) for prvProcessReceivedCommands
    timers.o(.ARM.exidx.text.prvTimerTask) refers to timers.o(.text.prvTimerTask) for [Anonymous Symbol]
    timers.o(.text.xTimerCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    timers.o(.text.xTimerCreate) refers to timers.o(.text.prvInitialiseNewTimer) for prvInitialiseNewTimer
    timers.o(.ARM.exidx.text.xTimerCreate) refers to timers.o(.text.xTimerCreate) for [Anonymous Symbol]
    timers.o(.text.prvInitialiseNewTimer) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.prvInitialiseNewTimer) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    timers.o(.ARM.exidx.text.prvInitialiseNewTimer) refers to timers.o(.text.prvInitialiseNewTimer) for [Anonymous Symbol]
    timers.o(.text.xTimerGenericCommand) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerGenericCommand) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.ARM.exidx.text.xTimerGenericCommand) refers to timers.o(.text.xTimerGenericCommand) for [Anonymous Symbol]
    timers.o(.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.text.xTimerGetTimerDaemonTaskHandle) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetPeriod) refers to timers.o(.text.xTimerGetPeriod) for [Anonymous Symbol]
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetReloadMode) refers to timers.o(.text.vTimerSetReloadMode) for [Anonymous Symbol]
    timers.o(.text.uxTimerGetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.uxTimerGetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.uxTimerGetReloadMode) refers to timers.o(.text.uxTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetExpiryTime) refers to timers.o(.text.xTimerGetExpiryTime) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.pcTimerGetName) refers to timers.o(.text.pcTimerGetName) for [Anonymous Symbol]
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerIsTimerActive) refers to timers.o(.text.xTimerIsTimerActive) for [Anonymous Symbol]
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.pvTimerGetTimerID) refers to timers.o(.text.pvTimerGetTimerID) for [Anonymous Symbol]
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetTimerID) refers to timers.o(.text.vTimerSetTimerID) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCall) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerPendFunctionCall) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.ARM.exidx.text.xTimerPendFunctionCall) refers to timers.o(.text.xTimerPendFunctionCall) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.uxTimerGetTimerNumber) refers to timers.o(.text.uxTimerGetTimerNumber) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.vTimerSetTimerNumber) refers to timers.o(.text.vTimerSetTimerNumber) for [Anonymous Symbol]
    timers.o(.text.prvGetNextExpireTime) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.ARM.exidx.text.prvGetNextExpireTime) refers to timers.o(.text.prvGetNextExpireTime) for [Anonymous Symbol]
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessTimerOrBlockTask) refers to queue.o(.text.vQueueWaitForMessageRestricted) for vQueueWaitForMessageRestricted
    timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for [Anonymous Symbol]
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessReceivedCommands) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    timers.o(.text.prvProcessReceivedCommands) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    timers.o(.text.prvProcessReceivedCommands) refers to heap_4.o(.text.vPortFree) for vPortFree
    timers.o(.ARM.exidx.text.prvProcessReceivedCommands) refers to timers.o(.text.prvProcessReceivedCommands) for [Anonymous Symbol]
    timers.o(.text.prvSampleTimeNow) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.bss.prvSampleTimeNow.xLastTime) for prvSampleTimeNow.xLastTime
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.text.prvSwitchTimerLists) for prvSwitchTimerLists
    timers.o(.ARM.exidx.text.prvSampleTimeNow) refers to timers.o(.text.prvSampleTimeNow) for [Anonymous Symbol]
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvProcessExpiredTimer) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    timers.o(.ARM.exidx.text.prvProcessExpiredTimer) refers to timers.o(.text.prvProcessExpiredTimer) for [Anonymous Symbol]
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvSwitchTimerLists) refers to list.o(.text.vListInsert) for vListInsert
    timers.o(.text.prvSwitchTimerLists) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.ARM.exidx.text.prvSwitchTimerLists) refers to timers.o(.text.prvSwitchTimerLists) for [Anonymous Symbol]
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvInsertTimerInActiveList) refers to list.o(.text.vListInsert) for vListInsert
    timers.o(.ARM.exidx.text.prvInsertTimerInActiveList) refers to timers.o(.text.prvInsertTimerInActiveList) for [Anonymous Symbol]
    port.o(.text.pxPortInitialiseStack) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.pxPortInitialiseStack) refers to port.o(.text.pxPortInitialiseStack) for [Anonymous Symbol]
    port.o(.text.prvTaskExitError) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.prvTaskExitError) refers to port.o(.text.prvTaskExitError) for [Anonymous Symbol]
    port.o(.text.SVC_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.SVC_Handler) refers to port.o(.text.SVC_Handler) for [Anonymous Symbol]
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(.text.xPortStartScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortEnableVFP) for vPortEnableVFP
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvPortStartFirstTask) for prvPortStartFirstTask
    port.o(.text.xPortStartScheduler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.xPortStartScheduler) refers to port.o(.text.xPortStartScheduler) for [Anonymous Symbol]
    port.o(.text.vPortSetupTimerInterrupt) refers to system_mk64f12.o(.data.SystemCoreClock) for SystemCoreClock
    port.o(.ARM.exidx.text.vPortSetupTimerInterrupt) refers to port.o(.text.vPortSetupTimerInterrupt) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEnableVFP) refers to port.o(.text.vPortEnableVFP) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvPortStartFirstTask) refers to port.o(.text.prvPortStartFirstTask) for [Anonymous Symbol]
    port.o(.text.vPortEndScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEndScheduler) refers to port.o(.text.vPortEndScheduler) for [Anonymous Symbol]
    port.o(.text.vPortEnterCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEnterCritical) refers to port.o(.text.vPortEnterCritical) for [Anonymous Symbol]
    port.o(.text.vPortExitCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortExitCritical) refers to port.o(.text.vPortExitCritical) for [Anonymous Symbol]
    port.o(.text.PendSV_Handler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.PendSV_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.PendSV_Handler) refers to port.o(.text.PendSV_Handler) for [Anonymous Symbol]
    port.o(.text.SysTick_Handler) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    port.o(.ARM.exidx.text.SysTick_Handler) refers to port.o(.text.SysTick_Handler) for [Anonymous Symbol]
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.ARM.exidx.text.vPortValidateInterruptPriority) refers to port.o(.text.vPortValidateInterruptPriority) for [Anonymous Symbol]
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry4.o(.ARM.Collect$$$$00000003) for _main_stk
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    malloc2.o(i.__free$2region) refers to mvars.o(.data) for __microlib_freelist
    malloc2.o(i.__malloc$2region) refers to mvars.o(.data) for __microlib_freelist_initialised
    malloc2.o(i.__malloc$2region) refers to mvars.o(.data) for __microlib_freelist
    mallocr2.o(i.__free$realloc$2region) refers to mvars.o(.data) for __microlib_freelist
    mallocr2.o(i.__malloc$realloc$2region) refers to mallocr2.o(i.internal_alloc) for internal_alloc
    mallocr2.o(i.__malloc$realloc$2region) refers to mvars.o(.data) for __microlib_freelist_initialised
    mallocr2.o(i.__malloc$realloc$2region) refers to mvars.o(.data) for __microlib_freelist
    mallocr2.o(i.__realloc$2region) refers to mallocr2.o(i.__free$realloc$2region) for __free$realloc$2region
    mallocr2.o(i.__realloc$2region) refers to mallocr2.o(i.internal_alloc) for internal_alloc
    mallocr2.o(i.__realloc$2region) refers to mallocr2.o(i.__malloc$realloc$2region) for __malloc$realloc$2region
    mallocr2.o(i.__realloc$2region) refers to mvars.o(.data) for __microlib_freelist
    mallocr2.o(i.internal_alloc) refers to memcpy.o(.text) for __aeabi_memcpy
    mallocr2.o(i.internal_alloc) refers to mvars.o(.data) for __microlib_freelist
    malloca2.o(i.__aligned_malloc$2region) refers to mvars.o(.data) for __microlib_freelist_initialised
    malloca2.o(i.__aligned_malloc$2region) refers to mvars.o(.data) for __microlib_freelist
    malloca2.o(i.__free$memalign$2region) refers to mvars.o(.data) for __microlib_freelist
    malloca2.o(i.__malloc$memalign$2region) refers to malloca2.o(i.__aligned_malloc$2region) for __aligned_malloc$2region
    mallocra2.o(i.__aligned_malloc$realloc$2region) refers to mallocra2.o(i.internal_alloc) for internal_alloc
    mallocra2.o(i.__aligned_malloc$realloc$2region) refers to mvars.o(.data) for __microlib_freelist_initialised
    mallocra2.o(i.__aligned_malloc$realloc$2region) refers to mvars.o(.data) for __microlib_freelist
    mallocra2.o(i.__free$realloc$memalign$2region) refers to mvars.o(.data) for __microlib_freelist
    mallocra2.o(i.__malloc$realloc$memalign$2region) refers to mallocra2.o(i.__aligned_malloc$realloc$2region) for __aligned_malloc$realloc$2region
    mallocra2.o(i.__realloc$memalign$2region) refers to mallocra2.o(i.__free$realloc$memalign$2region) for __free$realloc$memalign$2region
    mallocra2.o(i.__realloc$memalign$2region) refers to mallocra2.o(i.internal_alloc) for internal_alloc
    mallocra2.o(i.__realloc$memalign$2region) refers to mallocra2.o(i.__malloc$realloc$memalign$2region) for __malloc$realloc$memalign$2region
    mallocra2.o(i.__realloc$memalign$2region) refers to mvars.o(.data) for __microlib_freelist
    mallocra2.o(i.internal_alloc) refers to memcpy.o(.text) for __aeabi_memcpy
    mallocra2.o(i.internal_alloc) refers to mvars.o(.data) for __microlib_freelist
    errno.o(i.__aeabi_errno_addr) refers to errno.o(.data) for .data
    errno.o(i.__read_errno) refers to errno.o(.data) for .data
    errno.o(i.__set_errno) refers to errno.o(.data) for .data
    strtoul.o(.text) refers to errno.o(i.__aeabi_errno_addr) for __aeabi_errno_addr
    strtoul.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    strtoul.o(.text) refers to _strtoul.o(.text) for _strtoul
    entry4.o(.ARM.Collect$$$$00000003) refers to entry4.o(.ARM.Collect$$$$00002714) for __lit__00000000
    entry4.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to freertos_uart.o(.text.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to freertos_uart.o(.text.main) for main
    ctype_o.o(.text) refers to ctype_o.o(.constdata) for .constdata
    ctype_o.o(.constdata) refers to ctype_o.o(.constdata) for __ctype_table
    isalnum_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isalpha_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isblank_o.o(.text) refers to ctype_o.o(.constdata) for __ctype_table
    iscntrl_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isdigit_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isgraph_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    islower_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isprint_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    ispunct_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isspace_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isupper_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isxdigit_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    _strtoul.o(.text) refers to _chval.o(.text) for _chval
    _strtoul.o(.text) refers to errno.o(i.__aeabi_errno_addr) for __aeabi_errno_addr
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload


==============================================================================

Removing Unused input sections from the image.

    Removing freertos_uart.o(.text), (0 bytes).
    Removing freertos_uart.o(.ARM.exidx.text.main), (8 bytes).
    Removing freertos_uart.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing freertos_uart.o(.ARM.exidx.text.uart_task), (8 bytes).
    Removing freertos_uart.o(.ARM.use_no_argv), (4 bytes).
    Removing pin_mux.o(.text), (0 bytes).
    Removing pin_mux.o(.ARM.exidx.text.BOARD_InitBootPins), (8 bytes).
    Removing pin_mux.o(.ARM.exidx.text.BOARD_InitPins), (8 bytes).
    Removing pin_mux.o(.ARM.exidx.text.CLOCK_EnableClock), (8 bytes).
    Removing pin_mux.o(.ARM.exidx.text.PORT_SetPinMux), (8 bytes).
    Removing board.o(.text), (0 bytes).
    Removing board.o(.text.BOARD_InitDebugConsole), (22 bytes).
    Removing board.o(.ARM.exidx.text.BOARD_InitDebugConsole), (8 bytes).
    Removing clock_config.o(.text), (0 bytes).
    Removing clock_config.o(.ARM.exidx.text.BOARD_InitBootClocks), (8 bytes).
    Removing clock_config.o(.ARM.exidx.text.BOARD_BootClockRUN), (8 bytes).
    Removing clock_config.o(.ARM.exidx.text.CLOCK_SetSimSafeDivs), (8 bytes).
    Removing clock_config.o(.ARM.exidx.text.CLOCK_SetXtal0Freq), (8 bytes).
    Removing clock_config.o(.ARM.exidx.text.CLOCK_CONFIG_SetFllExtRefDiv), (8 bytes).
    Removing clock_config.o(.text.BOARD_BootClockVLPR), (76 bytes).
    Removing clock_config.o(.ARM.exidx.text.BOARD_BootClockVLPR), (8 bytes).
    Removing clock_config.o(.text.SMC_SetPowerModeProtection), (14 bytes).
    Removing clock_config.o(.ARM.exidx.text.SMC_SetPowerModeProtection), (8 bytes).
    Removing clock_config.o(.text.SMC_GetPowerModeState), (12 bytes).
    Removing clock_config.o(.ARM.exidx.text.SMC_GetPowerModeState), (8 bytes).
    Removing clock_config.o(.rodata.mcgConfig_BOARD_BootClockVLPR), (11 bytes).
    Removing clock_config.o(.rodata.simConfig_BOARD_BootClockVLPR), (8 bytes).
    Removing clock_config.o(.rodata.oscConfig_BOARD_BootClockVLPR), (8 bytes).
    Removing fsl_gpio.o(.text), (0 bytes).
    Removing fsl_gpio.o(.text.GPIO_PinInit), (80 bytes).
    Removing fsl_gpio.o(.ARM.exidx.text.GPIO_PinInit), (8 bytes).
    Removing fsl_gpio.o(.text.GPIO_PinWrite), (18 bytes).
    Removing fsl_gpio.o(.ARM.exidx.text.GPIO_PinWrite), (8 bytes).
    Removing fsl_gpio.o(.text.GPIO_PortGetInterruptFlags), (26 bytes).
    Removing fsl_gpio.o(.ARM.exidx.text.GPIO_PortGetInterruptFlags), (8 bytes).
    Removing fsl_gpio.o(.text.GPIO_GetInstance), (96 bytes).
    Removing fsl_gpio.o(.ARM.exidx.text.GPIO_GetInstance), (8 bytes).
    Removing fsl_gpio.o(.text.GPIO_PortClearInterruptFlags), (28 bytes).
    Removing fsl_gpio.o(.ARM.exidx.text.GPIO_PortClearInterruptFlags), (8 bytes).
    Removing fsl_gpio.o(.rodata.str1.1), (50 bytes).
    Removing fsl_gpio.o(.rodata.s_portBases), (20 bytes).
    Removing fsl_clock.o(.text), (0 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetOsc0ErClkFreq), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetEr32kClkFreq), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetPllFllSelClkFreq), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetFllFreq), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetPll0Freq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetPlatClkFreq), (28 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetPlatClkFreq), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetOutClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetFlashClkFreq), (28 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetFlashClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetFlexBusClkFreq), (28 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetFlexBusClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetBusClkFreq), (28 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetBusClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq), (28 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetCoreSysClkFreq), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetFreq), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetFixedFreqClkFreq), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetInternalRefClkFreq), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetSimConfig), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetPllFllSelClock), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetEr32kClock), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_EnableUsbfs0Clock), (160 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_EnableUsbfs0Clock), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_DisableClock), (18 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_DisableClock), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_EnableClock), (18 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_EnableClock), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetInternalRefClkSelectFreq), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetMcgExtClkFreq), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetFllRefClkFreq), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetPll0RefFreq), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetExternalRefClkConfig), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetInternalRefClkConfig), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_CalcPllDiv), (224 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_CalcPllDiv), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_EnablePll0), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetOsc0MonitorMode), (58 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetOsc0MonitorMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetRtcOscMonitorMode), (32 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetRtcOscMonitorMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetPll0MonitorMode), (48 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetPll0MonitorMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetStatusFlags), (42 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetStatusFlags), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_ClearStatusFlags), (40 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_ClearStatusFlags), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_InitOsc0), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetOscRangeFromFreq), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.OSC_SetCapLoad), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.OSC_SetExtRefClkConfig), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_DeinitOsc0), (30 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_DeinitOsc0), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetSlowIrcFreq), (12 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetSlowIrcFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetFastIrcFreq), (12 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetFastIrcFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_TrimInternalRefClk), (198 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_TrimInternalRefClk), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetMode), (88 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetFeiMode), (98 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetFeiMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetFeeMode), (144 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetFeeMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetFbiMode), (106 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetFbiMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetFbeMode), (144 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetFbeMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetBlpiMode), (20 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetBlpiMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetBlpeMode), (20 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetBlpeMode), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetPbeMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetPeeMode), (30 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetPeeMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_ExternalModeToFbeModeQuick), (58 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_ExternalModeToFbeModeQuick), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_InternalModeToFbiModeQuick), (42 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_InternalModeToFbiModeQuick), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_BootToFeiMode), (10 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_BootToFeiMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_BootToFeeMode), (34 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_BootToFeeMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_BootToBlpiMode), (54 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_BootToBlpiMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_BootToBlpeMode), (70 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_BootToBlpeMode), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_BootToPeeMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetMcgConfig), (400 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetMcgConfig), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_FllStableDelay), (32 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_FllStableDelay), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetFllExtRefClkFreq), (8 bytes).
    Removing fsl_clock.o(.rodata.cst16), (16 bytes).
    Removing fsl_uart.o(.text), (0 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_GetInstance), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_TransferGetRxRingBufferLength), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_Init), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.CLOCK_EnableClock), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_Deinit), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.CLOCK_DisableClock), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_GetDefaultConfig), (8 bytes).
    Removing fsl_uart.o(.text.UART_SetBaudRate), (148 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_SetBaudRate), (8 bytes).
    Removing fsl_uart.o(.text.UART_Enable9bitMode), (48 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_Enable9bitMode), (8 bytes).
    Removing fsl_uart.o(.text.UART_SendAddress), (52 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_SendAddress), (8 bytes).
    Removing fsl_uart.o(.text.UART_Set9thTransmitBit), (10 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_Set9thTransmitBit), (8 bytes).
    Removing fsl_uart.o(.text.UART_WriteByte), (4 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_WriteByte), (8 bytes).
    Removing fsl_uart.o(.text.UART_Clear9thTransmitBit), (10 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_Clear9thTransmitBit), (8 bytes).
    Removing fsl_uart.o(.text.UART_EnableInterrupts), (44 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_EnableInterrupts), (8 bytes).
    Removing fsl_uart.o(.text.UART_DisableInterrupts), (50 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_DisableInterrupts), (8 bytes).
    Removing fsl_uart.o(.text.UART_GetEnabledInterrupts), (32 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_GetEnabledInterrupts), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_GetStatusFlags), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_ClearStatusFlags), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_WriteBlocking), (8 bytes).
    Removing fsl_uart.o(.text.UART_ReadBlocking), (204 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_ReadBlocking), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_TransferCreateHandle), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_TransferHandleIRQ), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.EnableIRQ), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_TransferStartRingBuffer), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.DisableGlobalIRQ), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.EnableGlobalIRQ), (8 bytes).
    Removing fsl_uart.o(.text.UART_TransferStopRingBuffer), (90 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_TransferStopRingBuffer), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_TransferSendNonBlocking), (8 bytes).
    Removing fsl_uart.o(.text.UART_TransferAbortSend), (58 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_TransferAbortSend), (8 bytes).
    Removing fsl_uart.o(.text.UART_TransferGetSendCount), (80 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_TransferGetSendCount), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_TransferReceiveNonBlocking), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_TransferAbortReceive), (8 bytes).
    Removing fsl_uart.o(.text.UART_TransferGetReceiveCount), (76 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_TransferGetReceiveCount), (8 bytes).
    Removing fsl_uart.o(.text.UART_EnableTxFIFO), (66 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_EnableTxFIFO), (8 bytes).
    Removing fsl_uart.o(.text.UART_EnableRxFIFO), (62 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_EnableRxFIFO), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_ReadNonBlocking), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_TransferIsRxRingBufferFull), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_WriteNonBlocking), (8 bytes).
    Removing fsl_uart.o(.text.UART_TransferHandleErrorIRQ), (2 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_TransferHandleErrorIRQ), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART0_DriverIRQHandler), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART0_RX_TX_DriverIRQHandler), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART1_DriverIRQHandler), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART1_RX_TX_DriverIRQHandler), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART2_DriverIRQHandler), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART2_RX_TX_DriverIRQHandler), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART3_DriverIRQHandler), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART3_RX_TX_DriverIRQHandler), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART4_DriverIRQHandler), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART4_RX_TX_DriverIRQHandler), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART5_DriverIRQHandler), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART5_RX_TX_DriverIRQHandler), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.__NVIC_EnableIRQ), (8 bytes).
    Removing fsl_uart.o(.rodata.cst16), (32 bytes).
    Removing fsl_ftfx_controller.o(.text), (0 bytes).
    Removing fsl_ftfx_controller.o(.text.FTFx_API_Init), (48 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_API_Init), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.ftfx_copy_run_command_to_ram), (26 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.ftfx_copy_run_command_to_ram), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.ftfx_init_ifr), (32 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.ftfx_init_ifr), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.FTFx_CMD_Erase), (114 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_Erase), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.ftfx_check_mem_range), (46 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.ftfx_check_mem_range), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.ftfx_check_user_key), (16 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.ftfx_check_user_key), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.ftfx_command_sequence), (58 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.ftfx_command_sequence), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.FTFx_CMD_EraseSectorNonBlocking), (58 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_EraseSectorNonBlocking), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.ftfx_command_sequence_non_blocking), (30 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.ftfx_command_sequence_non_blocking), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.FTFx_CMD_EraseAll), (42 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_EraseAll), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.FTFx_CMD_EraseAllExecuteOnlySegments), (42 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_EraseAllExecuteOnlySegments), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.FTFx_CMD_Program), (146 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_Program), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.ftfx_read_word_from_byte_address), (34 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.ftfx_read_word_from_byte_address), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.FTFx_CMD_ProgramOnce), (122 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_ProgramOnce), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.FTFx_CMD_ProgramSection), (258 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_ProgramSection), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.FTFx_CMD_ReadOnce), (138 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_ReadOnce), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.ftfx_write_word_to_byte_address), (28 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.ftfx_write_word_to_byte_address), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.FTFx_CMD_ReadResource), (174 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_ReadResource), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.ftfx_check_resource_range), (94 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.ftfx_check_resource_range), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.FTFx_CMD_VerifyErase), (142 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_VerifyErase), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.FTFx_CMD_VerifyEraseAll), (36 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_VerifyEraseAll), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.FTFx_CMD_VerifyEraseAllExecuteOnlySegments), (36 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_VerifyEraseAllExecuteOnlySegments), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.FTFx_CMD_VerifyProgram), (146 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_VerifyProgram), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.FTFx_CMD_SecurityBypass), (72 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_SecurityBypass), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.FTFx_REG_GetSecurityState), (68 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_REG_GetSecurityState), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.FTFx_CMD_SwapControl), (126 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_SwapControl), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.ftfx_check_swap_control_option), (30 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.ftfx_check_swap_control_option), (8 bytes).
    Removing fsl_ftfx_controller.o(.bss.s_ftfxRunCommand), (64 bytes).
    Removing fsl_ftfx_controller.o(.rodata.s_ftfxRunCommandFunctionCode), (12 bytes).
    Removing fsl_ftfx_flash.o(.text), (0 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_Init), (44 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_Init), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.flash_init_features), (12 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.flash_init_features), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.flash_opsonfig_Init), (46 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.flash_opsonfig_Init), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.flash_protection_init), (26 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.flash_protection_init), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_Erase), (60 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_Erase), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.flash_check_range_to_get_index), (42 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.flash_check_range_to_get_index), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.flash_convert_start_address), (4 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.flash_convert_start_address), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_EraseSectorNonBlocking), (60 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_EraseSectorNonBlocking), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_EraseAll), (8 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_EraseAll), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_Program), (62 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_Program), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_ProgramOnce), (8 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_ProgramOnce), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_ProgramSection), (62 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_ProgramSection), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_ReadResource), (20 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_ReadResource), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_ReadOnce), (8 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_ReadOnce), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_VerifyErase), (60 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_VerifyErase), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_VerifyEraseAll), (8 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_VerifyEraseAll), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_VerifyProgram), (82 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_VerifyProgram), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_GetSecurityState), (8 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_GetSecurityState), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_SecurityBypass), (8 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_SecurityBypass), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_Swap), (226 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_Swap), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.flash_validate_swap_indicator_address), (50 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.flash_validate_swap_indicator_address), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_IsProtected), (238 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_IsProtected), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_PflashSetProtection), (50 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_PflashSetProtection), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_PflashGetProtection), (42 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_PflashGetProtection), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_GetProperty), (142 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_GetProperty), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_GetCommandState), (42 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_GetCommandState), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.flash_calculate_mem_size), (40 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.flash_calculate_mem_size), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.flash_calculate_prot_segment_size), (16 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.flash_calculate_prot_segment_size), (8 bytes).
    Removing fsl_ftfx_flash.o(.rodata.kPFlashDensities), (30 bytes).
    Removing fsl_ftfx_cache.o(.text), (0 bytes).
    Removing fsl_ftfx_cache.o(.text.FTFx_CACHE_Init), (34 bytes).
    Removing fsl_ftfx_cache.o(.ARM.exidx.text.FTFx_CACHE_Init), (8 bytes).
    Removing fsl_ftfx_cache.o(.text.ftfx_copy_common_bit_operation_to_ram), (18 bytes).
    Removing fsl_ftfx_cache.o(.ARM.exidx.text.ftfx_copy_common_bit_operation_to_ram), (8 bytes).
    Removing fsl_ftfx_cache.o(.text.FTFx_CACHE_ClearCachePrefetchSpeculation), (24 bytes).
    Removing fsl_ftfx_cache.o(.ARM.exidx.text.FTFx_CACHE_ClearCachePrefetchSpeculation), (8 bytes).
    Removing fsl_ftfx_cache.o(.text.fmc_flash_cache_clear), (16 bytes).
    Removing fsl_ftfx_cache.o(.ARM.exidx.text.fmc_flash_cache_clear), (8 bytes).
    Removing fsl_ftfx_cache.o(.text.fmc_flash_prefetch_speculation_clear), (16 bytes).
    Removing fsl_ftfx_cache.o(.ARM.exidx.text.fmc_flash_prefetch_speculation_clear), (8 bytes).
    Removing fsl_ftfx_cache.o(.text.FTFx_CACHE_PflashSetPrefetchSpeculation), (52 bytes).
    Removing fsl_ftfx_cache.o(.ARM.exidx.text.FTFx_CACHE_PflashSetPrefetchSpeculation), (8 bytes).
    Removing fsl_ftfx_cache.o(.text.FTFx_CACHE_PflashGetPrefetchSpeculation), (46 bytes).
    Removing fsl_ftfx_cache.o(.ARM.exidx.text.FTFx_CACHE_PflashGetPrefetchSpeculation), (8 bytes).
    Removing fsl_ftfx_cache.o(.text.ftfx_common_bit_operation_command_sequence), (32 bytes).
    Removing fsl_ftfx_cache.o(.ARM.exidx.text.ftfx_common_bit_operation_command_sequence), (8 bytes).
    Removing fsl_ftfx_cache.o(.bss.s_ftfxCommonBitOperation), (64 bytes).
    Removing fsl_ftfx_cache.o(.rodata.s_ftfxCommonBitOperationFunctionCode), (28 bytes).
    Removing fsl_ftfx_flexnvm.o(.text), (0 bytes).
    Removing fsl_smc.o(.text), (0 bytes).
    Removing fsl_smc.o(.text.SMC_PreEnterStopModes), (22 bytes).
    Removing fsl_smc.o(.ARM.exidx.text.SMC_PreEnterStopModes), (8 bytes).
    Removing fsl_smc.o(.text.DisableGlobalIRQ), (12 bytes).
    Removing fsl_smc.o(.ARM.exidx.text.DisableGlobalIRQ), (8 bytes).
    Removing fsl_smc.o(.text.SMC_PostExitStopModes), (22 bytes).
    Removing fsl_smc.o(.ARM.exidx.text.SMC_PostExitStopModes), (8 bytes).
    Removing fsl_smc.o(.text.EnableGlobalIRQ), (6 bytes).
    Removing fsl_smc.o(.ARM.exidx.text.EnableGlobalIRQ), (8 bytes).
    Removing fsl_smc.o(.text.SMC_PreEnterWaitModes), (22 bytes).
    Removing fsl_smc.o(.ARM.exidx.text.SMC_PreEnterWaitModes), (8 bytes).
    Removing fsl_smc.o(.text.SMC_PostExitWaitModes), (22 bytes).
    Removing fsl_smc.o(.ARM.exidx.text.SMC_PostExitWaitModes), (8 bytes).
    Removing fsl_smc.o(.text.SMC_SetPowerModeRun), (14 bytes).
    Removing fsl_smc.o(.ARM.exidx.text.SMC_SetPowerModeRun), (8 bytes).
    Removing fsl_smc.o(.text.SMC_SetPowerModeWait), (30 bytes).
    Removing fsl_smc.o(.ARM.exidx.text.SMC_SetPowerModeWait), (8 bytes).
    Removing fsl_smc.o(.text.SMC_SetPowerModeStop), (48 bytes).
    Removing fsl_smc.o(.ARM.exidx.text.SMC_SetPowerModeStop), (8 bytes).
    Removing fsl_smc.o(.text.SMC_EnterStopRamFunc), (16 bytes).
    Removing fsl_smc.o(.ARM.exidx.text.SMC_EnterStopRamFunc), (8 bytes).
    Removing fsl_smc.o(.text.SMC_SetPowerModeVlpr), (26 bytes).
    Removing fsl_smc.o(.ARM.exidx.text.SMC_SetPowerModeVlpr), (8 bytes).
    Removing fsl_smc.o(.text.SMC_SetPowerModeVlpw), (30 bytes).
    Removing fsl_smc.o(.ARM.exidx.text.SMC_SetPowerModeVlpw), (8 bytes).
    Removing fsl_smc.o(.text.SMC_SetPowerModeVlps), (50 bytes).
    Removing fsl_smc.o(.ARM.exidx.text.SMC_SetPowerModeVlps), (8 bytes).
    Removing fsl_smc.o(.text.SMC_SetPowerModeLls), (50 bytes).
    Removing fsl_smc.o(.ARM.exidx.text.SMC_SetPowerModeLls), (8 bytes).
    Removing fsl_smc.o(.text.SMC_SetPowerModeVlls), (84 bytes).
    Removing fsl_smc.o(.ARM.exidx.text.SMC_SetPowerModeVlls), (8 bytes).
    Removing fsl_smc.o(.bss.g_savedPrimask), (4 bytes).
    Removing fsl_smc.o(.data.s_stopRamFuncArray), (24 bytes).
    Removing fsl_common.o(.text), (0 bytes).
    Removing fsl_common.o(.text.SDK_Malloc), (70 bytes).
    Removing fsl_common.o(.ARM.exidx.text.SDK_Malloc), (8 bytes).
    Removing fsl_common.o(.text.SDK_Free), (28 bytes).
    Removing fsl_common.o(.ARM.exidx.text.SDK_Free), (8 bytes).
    Removing fsl_common_arm.o(.text), (0 bytes).
    Removing fsl_common_arm.o(.text.SDK_DelayAtLeastUs), (132 bytes).
    Removing fsl_common_arm.o(.ARM.exidx.text.SDK_DelayAtLeastUs), (8 bytes).
    Removing fsl_common_arm.o(.text.DelayLoop), (10 bytes).
    Removing fsl_common_arm.o(.ARM.exidx.text.DelayLoop), (8 bytes).
    Removing fsl_uart_freertos.o(.text), (0 bytes).
    Removing fsl_uart_freertos.o(.ARM.exidx.text.UART_RTOS_Init), (8 bytes).
    Removing fsl_uart_freertos.o(.ARM.exidx.text.UART_RTOS_Callback), (8 bytes).
    Removing fsl_uart_freertos.o(.ARM.exidx.text.UART_EnableTx), (8 bytes).
    Removing fsl_uart_freertos.o(.ARM.exidx.text.UART_EnableRx), (8 bytes).
    Removing fsl_uart_freertos.o(.ARM.exidx.text.UART_RTOS_Deinit), (8 bytes).
    Removing fsl_uart_freertos.o(.ARM.exidx.text.UART_RTOS_Send), (8 bytes).
    Removing fsl_uart_freertos.o(.ARM.exidx.text.UART_RTOS_Receive), (8 bytes).
    Removing heap_4.o(.text), (0 bytes).
    Removing heap_4.o(.ARM.exidx.text.pvPortMalloc), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.prvHeapInit), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.prvInsertBlockIntoFreeList), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortFree), (8 bytes).
    Removing heap_4.o(.text.xPortGetFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.xPortGetMinimumEverFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.vPortInitialiseBlocks), (2 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks), (8 bytes).
    Removing heap_4.o(.text.vPortGetHeapStats), (142 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortGetHeapStats), (8 bytes).
    Removing fsl_str.o(.text), (0 bytes).
    Removing fsl_str.o(.ARM.exidx.text.StrFormatPrintf), (8 bytes).
    Removing fsl_str.o(.ARM.exidx.text.PrintGetWidth), (8 bytes).
    Removing fsl_str.o(.ARM.exidx.text.PrintGetPrecision), (8 bytes).
    Removing fsl_str.o(.ARM.exidx.text.PrintFilterLengthFlag), (8 bytes).
    Removing fsl_str.o(.ARM.exidx.text.PrintIsdi), (8 bytes).
    Removing fsl_str.o(.ARM.exidx.text.ConvertRadixNumToString), (8 bytes).
    Removing fsl_str.o(.ARM.exidx.text.PrintOutputdifFobpu), (8 bytes).
    Removing fsl_str.o(.ARM.exidx.text.PrintIsfF), (8 bytes).
    Removing fsl_str.o(.ARM.exidx.text.PrintIsxX), (8 bytes).
    Removing fsl_str.o(.ARM.exidx.text.PrintOutputxX), (8 bytes).
    Removing fsl_str.o(.ARM.exidx.text.PrintIsobpu), (8 bytes).
    Removing fsl_str.o(.ARM.exidx.text.PrintGetRadixFromobpu), (8 bytes).
    Removing fsl_str.o(.text.StrFormatScanf), (524 bytes).
    Removing fsl_str.o(.ARM.exidx.text.StrFormatScanf), (8 bytes).
    Removing fsl_str.o(.text.ScanIgnoreWhiteSpace), (42 bytes).
    Removing fsl_str.o(.ARM.exidx.text.ScanIgnoreWhiteSpace), (8 bytes).
    Removing fsl_str.o(.text.StrFormatScanIsFormatStarting), (20 bytes).
    Removing fsl_str.o(.ARM.exidx.text.StrFormatScanIsFormatStarting), (8 bytes).
    Removing fsl_str.o(.text.StrFormatScanfStringHandling), (242 bytes).
    Removing fsl_str.o(.ARM.exidx.text.StrFormatScanfStringHandling), (8 bytes).
    Removing fsl_str.o(.text.ScanIsWhiteSpace), (20 bytes).
    Removing fsl_str.o(.ARM.exidx.text.ScanIsWhiteSpace), (8 bytes).
    Removing fsl_str.o(.text.StrFormatScanGetBase), (34 bytes).
    Removing fsl_str.o(.ARM.exidx.text.StrFormatScanGetBase), (8 bytes).
    Removing fsl_str.o(.text.StrFormatScanCheckSymbol), (30 bytes).
    Removing fsl_str.o(.ARM.exidx.text.StrFormatScanCheckSymbol), (8 bytes).
    Removing fsl_str.o(.text.StrFormatScanFillInteger), (12 bytes).
    Removing fsl_str.o(.ARM.exidx.text.StrFormatScanFillInteger), (8 bytes).
    Removing fsl_debug_console.o(.text), (0 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_ReadOneCharacter), (44 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_ReadOneCharacter), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_SendData), (46 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_SendData), (8 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_SendDataReliable), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_ReadLine), (98 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_ReadLine), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_ReadCharacter), (38 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_ReadCharacter), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_Init), (146 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Init), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_EnterLowpower), (26 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_EnterLowpower), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_ExitLowpower), (26 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_ExitLowpower), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_Deinit), (72 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Deinit), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_Flush), (4 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Flush), (8 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Printf), (8 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Vprintf), (8 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_PrintCallback), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_Putchar), (18 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Putchar), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_Scanf), (60 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Scanf), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_BlockingPrintf), (32 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_BlockingPrintf), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_BlockingVprintf), (86 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_BlockingVprintf), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_Getchar), (36 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Getchar), (8 bytes).
    Removing fsl_debug_console.o(.bss.s_debugConsoleReadWaitSemaphore), (1 bytes).
    Removing fsl_assert.o(.text), (0 bytes).
    Removing fsl_assert.o(.ARM.exidx.text.__aeabi_assert), (8 bytes).
    Removing system_mk64f12.o(.text), (0 bytes).
    Removing system_mk64f12.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_mk64f12.o(.ARM.exidx.text.SystemInitHook), (8 bytes).
    Removing system_mk64f12.o(.text.SystemCoreClockUpdate), (370 bytes).
    Removing system_mk64f12.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing fsl_adapter_uart.o(.text), (0 bytes).
    Removing fsl_adapter_uart.o(.text.HAL_UartInit), (236 bytes).
    Removing fsl_adapter_uart.o(.ARM.exidx.text.HAL_UartInit), (8 bytes).
    Removing fsl_adapter_uart.o(.text.HAL_UartGetStatus), (10 bytes).
    Removing fsl_adapter_uart.o(.ARM.exidx.text.HAL_UartGetStatus), (8 bytes).
    Removing fsl_adapter_uart.o(.text.HAL_UartDeinit), (50 bytes).
    Removing fsl_adapter_uart.o(.ARM.exidx.text.HAL_UartDeinit), (8 bytes).
    Removing fsl_adapter_uart.o(.text.HAL_UartReceiveBlocking), (104 bytes).
    Removing fsl_adapter_uart.o(.ARM.exidx.text.HAL_UartReceiveBlocking), (8 bytes).
    Removing fsl_adapter_uart.o(.ARM.exidx.text.HAL_UartSendBlocking), (8 bytes).
    Removing fsl_adapter_uart.o(.text.HAL_UartEnterLowpower), (32 bytes).
    Removing fsl_adapter_uart.o(.ARM.exidx.text.HAL_UartEnterLowpower), (8 bytes).
    Removing fsl_adapter_uart.o(.text.HAL_UartExitLowpower), (32 bytes).
    Removing fsl_adapter_uart.o(.ARM.exidx.text.HAL_UartExitLowpower), (8 bytes).
    Removing fsl_component_serial_manager.o(.text), (0 bytes).
    Removing fsl_component_serial_manager.o(.text.SerialManager_Init), (54 bytes).
    Removing fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_Init), (8 bytes).
    Removing fsl_component_serial_manager.o(.text.SerialManager_Deinit), (62 bytes).
    Removing fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_Deinit), (8 bytes).
    Removing fsl_component_serial_manager.o(.text.DisableGlobalIRQ), (12 bytes).
    Removing fsl_component_serial_manager.o(.ARM.exidx.text.DisableGlobalIRQ), (8 bytes).
    Removing fsl_component_serial_manager.o(.text.EnableGlobalIRQ), (6 bytes).
    Removing fsl_component_serial_manager.o(.ARM.exidx.text.EnableGlobalIRQ), (8 bytes).
    Removing fsl_component_serial_manager.o(.text.SerialManager_OpenWriteHandle), (46 bytes).
    Removing fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_OpenWriteHandle), (8 bytes).
    Removing fsl_component_serial_manager.o(.text.SerialManager_CloseWriteHandle), (50 bytes).
    Removing fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_CloseWriteHandle), (8 bytes).
    Removing fsl_component_serial_manager.o(.text.SerialManager_OpenReadHandle), (62 bytes).
    Removing fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_OpenReadHandle), (8 bytes).
    Removing fsl_component_serial_manager.o(.text.SerialManager_CloseReadHandle), (46 bytes).
    Removing fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_CloseReadHandle), (8 bytes).
    Removing fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_WriteBlocking), (8 bytes).
    Removing fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_Write), (8 bytes).
    Removing fsl_component_serial_manager.o(.text.SerialManager_ReadBlocking), (8 bytes).
    Removing fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_ReadBlocking), (8 bytes).
    Removing fsl_component_serial_manager.o(.text.SerialManager_Read), (34 bytes).
    Removing fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_Read), (8 bytes).
    Removing fsl_component_serial_manager.o(.text.SerialManager_EnterLowpower), (26 bytes).
    Removing fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_EnterLowpower), (8 bytes).
    Removing fsl_component_serial_manager.o(.text.SerialManager_ExitLowpower), (26 bytes).
    Removing fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_ExitLowpower), (8 bytes).
    Removing fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_StartWriting), (8 bytes).
    Removing fsl_component_serial_manager.o(.text.SerialManager_StartReading), (20 bytes).
    Removing fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_StartReading), (8 bytes).
    Removing fsl_component_serial_port_uart.o(.text), (0 bytes).
    Removing fsl_component_serial_port_uart.o(.text.Serial_UartInit), (30 bytes).
    Removing fsl_component_serial_port_uart.o(.ARM.exidx.text.Serial_UartInit), (8 bytes).
    Removing fsl_component_serial_port_uart.o(.text.Serial_UartDeinit), (14 bytes).
    Removing fsl_component_serial_port_uart.o(.ARM.exidx.text.Serial_UartDeinit), (8 bytes).
    Removing fsl_component_serial_port_uart.o(.ARM.exidx.text.Serial_UartWrite), (8 bytes).
    Removing fsl_component_serial_port_uart.o(.text.Serial_UartRead), (26 bytes).
    Removing fsl_component_serial_port_uart.o(.ARM.exidx.text.Serial_UartRead), (8 bytes).
    Removing fsl_component_serial_port_uart.o(.text.Serial_UartEnterLowpower), (26 bytes).
    Removing fsl_component_serial_port_uart.o(.ARM.exidx.text.Serial_UartEnterLowpower), (8 bytes).
    Removing fsl_component_serial_port_uart.o(.text.Serial_UartExitLowpower), (26 bytes).
    Removing fsl_component_serial_port_uart.o(.ARM.exidx.text.Serial_UartExitLowpower), (8 bytes).
    Removing fsl_component_generic_list.o(.text), (0 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_Init), (12 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_Init), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_GetList), (4 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetList), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_AddTail), (60 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_AddTail), (8 bytes).
    Removing fsl_component_generic_list.o(.text.DisableGlobalIRQ), (12 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.DisableGlobalIRQ), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_Error_Check), (24 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_Error_Check), (8 bytes).
    Removing fsl_component_generic_list.o(.text.EnableGlobalIRQ), (6 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.EnableGlobalIRQ), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_AddHead), (56 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_AddHead), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_RemoveHead), (52 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_RemoveHead), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_GetHead), (4 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetHead), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_GetNext), (4 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetNext), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_GetPrev), (4 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetPrev), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_RemoveElement), (64 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_RemoveElement), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_AddPrevElement), (90 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_AddPrevElement), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_GetSize), (4 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetSize), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_GetAvailableSize), (8 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetAvailableSize), (8 bytes).
    Removing croutine.o(.text), (0 bytes).
    Removing event_groups.o(.text), (0 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupCreate), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSync), (220 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSync), (8 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSetBits), (8 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupWaitBits), (8 bytes).
    Removing event_groups.o(.ARM.exidx.text.prvTestWaitCondition), (8 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupClearBits), (8 bytes).
    Removing event_groups.o(.text.xEventGroupClearBitsFromISR), (22 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupClearBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.vEventGroupClearBitsCallback), (8 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupClearBitsCallback), (8 bytes).
    Removing event_groups.o(.text.xEventGroupGetBitsFromISR), (28 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupGetBitsFromISR), (8 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupDelete), (8 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupSetBitsCallback), (8 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSetBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.uxEventGroupGetNumber), (10 bytes).
    Removing event_groups.o(.ARM.exidx.text.uxEventGroupGetNumber), (8 bytes).
    Removing event_groups.o(.text.vEventGroupSetNumber), (4 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupSetNumber), (8 bytes).
    Removing list.o(.text), (0 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialise), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialiseItem), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsertEnd), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsert), (8 bytes).
    Removing list.o(.ARM.exidx.text.uxListRemove), (8 bytes).
    Removing queue.o(.text), (0 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericReset), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreate), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseNewQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutex), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseMutex), (8 bytes).
    Removing queue.o(.text.xQueueGiveMutexRecursive), (66 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSend), (8 bytes).
    Removing queue.o(.text.xQueueTakeMutexRecursive), (60 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSemaphoreTake), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphore), (66 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataToQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueFull), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvUnlockQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSendFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveFromISR), (216 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataFromQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueEmpty), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout), (8 bytes).
    Removing queue.o(.text.xQueuePeek), (376 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeek), (8 bytes).
    Removing queue.o(.text.xQueueReceiveFromISR), (196 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueuePeekFromISR), (132 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeekFromISR), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaiting), (38 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaiting), (8 bytes).
    Removing queue.o(.text.uxQueueSpacesAvailable), (42 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueSpacesAvailable), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaitingFromISR), (26 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueDelete), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueUnregisterQueue), (8 bytes).
    Removing queue.o(.text.uxQueueGetQueueNumber), (4 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueGetQueueNumber), (8 bytes).
    Removing queue.o(.text.vQueueSetQueueNumber), (4 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueSetQueueNumber), (8 bytes).
    Removing queue.o(.text.ucQueueGetQueueType), (6 bytes).
    Removing queue.o(.ARM.exidx.text.ucQueueGetQueueType), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueEmptyFromISR), (30 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueFullFromISR), (34 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueAddToRegistry), (8 bytes).
    Removing queue.o(.text.pcQueueGetName), (40 bytes).
    Removing queue.o(.ARM.exidx.text.pcQueueGetName), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted), (8 bytes).
    Removing stream_buffer.o(.text), (0 bytes).
    Removing stream_buffer.o(.text.xStreamBufferGenericCreate), (140 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferGenericCreate), (8 bytes).
    Removing stream_buffer.o(.text.prvInitialiseNewStreamBuffer), (70 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvInitialiseNewStreamBuffer), (8 bytes).
    Removing stream_buffer.o(.text.vStreamBufferDelete), (44 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.vStreamBufferDelete), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReset), (84 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReset), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSetTriggerLevel), (42 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSetTriggerLevel), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSpacesAvailable), (42 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSpacesAvailable), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferBytesAvailable), (30 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferBytesAvailable), (8 bytes).
    Removing stream_buffer.o(.text.prvBytesInBuffer), (18 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvBytesInBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSend), (318 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSend), (8 bytes).
    Removing stream_buffer.o(.text.prvWriteMessageToBuffer), (70 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvWriteMessageToBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSendFromISR), (166 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSendFromISR), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReceive), (230 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReceive), (8 bytes).
    Removing stream_buffer.o(.text.prvReadMessageFromBuffer), (68 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvReadMessageFromBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes), (94 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferNextMessageLengthBytes), (8 bytes).
    Removing stream_buffer.o(.text.prvReadBytesFromBuffer), (142 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvReadBytesFromBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReceiveFromISR), (164 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveFromISR), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferIsEmpty), (34 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferIsEmpty), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferIsFull), (46 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferIsFull), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSendCompletedFromISR), (86 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSendCompletedFromISR), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReceiveCompletedFromISR), (86 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveCompletedFromISR), (8 bytes).
    Removing stream_buffer.o(.text.uxStreamBufferGetStreamBufferNumber), (4 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.uxStreamBufferGetStreamBufferNumber), (8 bytes).
    Removing stream_buffer.o(.text.vStreamBufferSetStreamBufferNumber), (4 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.vStreamBufferSetStreamBufferNumber), (8 bytes).
    Removing stream_buffer.o(.text.ucStreamBufferGetStreamBufferType), (8 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.ucStreamBufferGetStreamBufferType), (8 bytes).
    Removing stream_buffer.o(.text.prvWriteBytesToBuffer), (154 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvWriteBytesToBuffer), (8 bytes).
    Removing tasks.o(.text), (0 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreate), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseNewTask), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList), (8 bytes).
    Removing tasks.o(.text.vTaskDelete), (246 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelete), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvDeleteTCB), (8 bytes).
    Removing tasks.o(.text.xTaskDelayUntil), (190 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskDelayUntil), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspendAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeAll), (8 bytes).
    Removing tasks.o(.text.vTaskDelay), (84 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelay), (8 bytes).
    Removing tasks.o(.text.eTaskGetState), (156 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskGetState), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGet), (30 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGet), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGetFromISR), (48 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskPrioritySet), (226 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPrioritySet), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspend), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSwitchContext), (8 bytes).
    Removing tasks.o(.text.vTaskResume), (142 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskResume), (8 bytes).
    Removing tasks.o(.text.prvTaskIsTaskSuspended), (50 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended), (8 bytes).
    Removing tasks.o(.text.xTaskResumeFromISR), (188 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStartScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvIdleTask), (8 bytes).
    Removing tasks.o(.text.vTaskEndScheduler), (36 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskEndScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskIncrementTick), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCount), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCountFromISR), (18 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR), (8 bytes).
    Removing tasks.o(.text.uxTaskGetNumberOfTasks), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks), (8 bytes).
    Removing tasks.o(.text.pcTaskGetName), (38 bytes).
    Removing tasks.o(.ARM.exidx.text.pcTaskGetName), (8 bytes).
    Removing tasks.o(.text.uxTaskGetSystemState), (192 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetSystemState), (8 bytes).
    Removing tasks.o(.text.prvListTasksWithinSingleList), (100 bytes).
    Removing tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList), (8 bytes).
    Removing tasks.o(.text.xTaskCatchUpTicks), (60 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCatchUpTicks), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList), (8 bytes).
    Removing tasks.o(.text.vTaskSetTimeOutState), (58 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskMissedYield), (8 bytes).
    Removing tasks.o(.text.uxTaskGetTaskNumber), (10 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskSetThreadLocalStoragePointer), (50 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetThreadLocalStoragePointer), (8 bytes).
    Removing tasks.o(.text.pvTaskGetThreadLocalStoragePointer), (28 bytes).
    Removing tasks.o(.ARM.exidx.text.pvTaskGetThreadLocalStoragePointer), (8 bytes).
    Removing tasks.o(.text.vTaskGetInfo), (126 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGetInfo), (8 bytes).
    Removing tasks.o(.text.prvTaskCheckFreeStackSpace), (32 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace), (8 bytes).
    Removing tasks.o(.text.xTaskGetCurrentTaskHandle), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetSchedulerState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityInherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyTake), (150 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyWait), (194 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotify), (312 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotify), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyFromISR), (362 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskGenericNotifyGiveFromISR), (252 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyStateClear), (66 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyValueClear), (44 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseTaskLists), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination), (8 bytes).
    Removing tasks.o(.rodata), (28 bytes).
    Removing timers.o(.text), (0 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreateTimerTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvTimerTask), (8 bytes).
    Removing timers.o(.text.xTimerCreate), (56 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreate), (8 bytes).
    Removing timers.o(.text.prvInitialiseNewTimer), (86 bytes).
    Removing timers.o(.ARM.exidx.text.prvInitialiseNewTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGenericCommand), (8 bytes).
    Removing timers.o(.text.xTimerGetTimerDaemonTaskHandle), (34 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle), (8 bytes).
    Removing timers.o(.text.xTimerGetPeriod), (26 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetPeriod), (8 bytes).
    Removing timers.o(.text.vTimerSetReloadMode), (58 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetReloadMode), (8 bytes).
    Removing timers.o(.text.uxTimerGetReloadMode), (46 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetExpiryTime), (26 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetExpiryTime), (8 bytes).
    Removing timers.o(.text.pcTimerGetName), (26 bytes).
    Removing timers.o(.ARM.exidx.text.pcTimerGetName), (8 bytes).
    Removing timers.o(.text.xTimerIsTimerActive), (46 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerIsTimerActive), (8 bytes).
    Removing timers.o(.text.pvTimerGetTimerID), (38 bytes).
    Removing timers.o(.ARM.exidx.text.pvTimerGetTimerID), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerID), (38 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerID), (8 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR), (8 bytes).
    Removing timers.o(.text.xTimerPendFunctionCall), (70 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCall), (8 bytes).
    Removing timers.o(.text.uxTimerGetTimerNumber), (4 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetTimerNumber), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerNumber), (4 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerNumber), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvGetNextExpireTime), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessReceivedCommands), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSampleTimeNow), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessExpiredTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSwitchTimerLists), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvInsertTimerInActiveList), (8 bytes).
    Removing port.o(.text), (0 bytes).
    Removing port.o(.ARM.exidx.text.pxPortInitialiseStack), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvTaskExitError), (8 bytes).
    Removing port.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortStartScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSetupTimerInterrupt), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnableVFP), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvPortStartFirstTask), (8 bytes).
    Removing port.o(.text.vPortEndScheduler), (38 bytes).
    Removing port.o(.ARM.exidx.text.vPortEndScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnterCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortExitCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortValidateInterruptPriority), (8 bytes).

845 unused section(s) (total 24246 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  ctype_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isalnum_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isalpha_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isblank_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  iscntrl_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isdigit_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isgraph_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  islower_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isprint_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  ispunct_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isspace_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isupper_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isxdigit_o.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/errno.c                 0x00000000   Number         0  errno.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry4.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/malloc/malloc.c         0x00000000   Number         0  malloc2.o ABSOLUTE
    ../clib/microlib/malloc/malloc.c         0x00000000   Number         0  mallocr2.o ABSOLUTE
    ../clib/microlib/malloc/malloc.c         0x00000000   Number         0  malloca2.o ABSOLUTE
    ../clib/microlib/malloc/malloc.c         0x00000000   Number         0  mallocra2.o ABSOLUTE
    ../clib/microlib/malloc/mvars.c          0x00000000   Number         0  mvars.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpy.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyc.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memset.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    ../clib/microlib/string/strlen.c         0x00000000   Number         0  strlen.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  strtoul.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  _strtoul.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  _chval.o ABSOLUTE
    board.c                                  0x00000000   Number         0  board.o ABSOLUTE
    clock_config.c                           0x00000000   Number         0  clock_config.o ABSOLUTE
    croutine.c                               0x00000000   Number         0  croutine.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    event_groups.c                           0x00000000   Number         0  event_groups.o ABSOLUTE
    freertos_uart.c                          0x00000000   Number         0  freertos_uart.o ABSOLUTE
    fsl_adapter_uart.c                       0x00000000   Number         0  fsl_adapter_uart.o ABSOLUTE
    fsl_assert.c                             0x00000000   Number         0  fsl_assert.o ABSOLUTE
    fsl_clock.c                              0x00000000   Number         0  fsl_clock.o ABSOLUTE
    fsl_common.c                             0x00000000   Number         0  fsl_common.o ABSOLUTE
    fsl_common_arm.c                         0x00000000   Number         0  fsl_common_arm.o ABSOLUTE
    fsl_component_generic_list.c             0x00000000   Number         0  fsl_component_generic_list.o ABSOLUTE
    fsl_component_serial_manager.c           0x00000000   Number         0  fsl_component_serial_manager.o ABSOLUTE
    fsl_component_serial_port_uart.c         0x00000000   Number         0  fsl_component_serial_port_uart.o ABSOLUTE
    fsl_debug_console.c                      0x00000000   Number         0  fsl_debug_console.o ABSOLUTE
    fsl_ftfx_cache.c                         0x00000000   Number         0  fsl_ftfx_cache.o ABSOLUTE
    fsl_ftfx_controller.c                    0x00000000   Number         0  fsl_ftfx_controller.o ABSOLUTE
    fsl_ftfx_flash.c                         0x00000000   Number         0  fsl_ftfx_flash.o ABSOLUTE
    fsl_ftfx_flexnvm.c                       0x00000000   Number         0  fsl_ftfx_flexnvm.o ABSOLUTE
    fsl_gpio.c                               0x00000000   Number         0  fsl_gpio.o ABSOLUTE
    fsl_smc.c                                0x00000000   Number         0  fsl_smc.o ABSOLUTE
    fsl_str.c                                0x00000000   Number         0  fsl_str.o ABSOLUTE
    fsl_uart.c                               0x00000000   Number         0  fsl_uart.o ABSOLUTE
    fsl_uart_freertos.c                      0x00000000   Number         0  fsl_uart_freertos.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    heap_4.c                                 0x00000000   Number         0  heap_4.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    list.c                                   0x00000000   Number         0  list.o ABSOLUTE
    pin_mux.c                                0x00000000   Number         0  pin_mux.o ABSOLUTE
    port.c                                   0x00000000   Number         0  port.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue.o ABSOLUTE
    stream_buffer.c                          0x00000000   Number         0  stream_buffer.o ABSOLUTE
    system_MK64F12.c                         0x00000000   Number         0  system_mk64f12.o ABSOLUTE
    tasks.c                                  0x00000000   Number         0  tasks.o ABSOLUTE
    timers.c                                 0x00000000   Number         0  timers.o ABSOLUTE
    .ARM.Collect$$$$00000000                 0x00000410   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000003                 0x00000410   Section        4  entry4.o(.ARM.Collect$$$$00000003)
    .ARM.Collect$$$$00000004                 0x00000414   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x00000418   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x00000418   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x00000418   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    __lit__00000000                          0x00000420   Data           4  entry4.o(.ARM.Collect$$$$00002714)
    .ARM.Collect$$$$0000000D                 0x00000420   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x00000420   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002714                 0x00000420   Section        4  entry4.o(.ARM.Collect$$$$00002714)
    [Anonymous Symbol]                       0x00000424   Section        0  startup_mk64f12.o(.text)
    .text                                    0x00000600   Section        0  memcpy.o(.text)
    .text                                    0x00000628   Section        0  memseta.o(.text)
    .text                                    0x0000064c   Section        0  strlen.o(.text)
    .text                                    0x0000065c   Section       36  init.o(.text)
    [Anonymous Symbol]                       0x00000680   Section        0  clock_config.o(.text.BOARD_BootClockRUN)
    [Anonymous Symbol]                       0x000006d8   Section        0  clock_config.o(.text.BOARD_InitBootClocks)
    [Anonymous Symbol]                       0x000006e0   Section        0  pin_mux.o(.text.BOARD_InitBootPins)
    [Anonymous Symbol]                       0x000006e8   Section        0  pin_mux.o(.text.BOARD_InitPins)
    [Anonymous Symbol]                       0x0000070c   Section        0  fsl_clock.o(.text.CLOCK_BootToPeeMode)
    CLOCK_CONFIG_SetFllExtRefDiv             0x00000759   Thumb Code    18  clock_config.o(.text.CLOCK_CONFIG_SetFllExtRefDiv)
    [Anonymous Symbol]                       0x00000758   Section        0  clock_config.o(.text.CLOCK_CONFIG_SetFllExtRefDiv)
    CLOCK_DisableClock                       0x0000076d   Thumb Code    30  fsl_uart.o(.text.CLOCK_DisableClock)
    [Anonymous Symbol]                       0x0000076c   Section        0  fsl_uart.o(.text.CLOCK_DisableClock)
    CLOCK_EnableClock                        0x0000078d   Thumb Code    18  pin_mux.o(.text.CLOCK_EnableClock)
    [Anonymous Symbol]                       0x0000078c   Section        0  pin_mux.o(.text.CLOCK_EnableClock)
    CLOCK_EnableClock                        0x000007a1   Thumb Code    28  fsl_uart.o(.text.CLOCK_EnableClock)
    [Anonymous Symbol]                       0x000007a0   Section        0  fsl_uart.o(.text.CLOCK_EnableClock)
    [Anonymous Symbol]                       0x000007bc   Section        0  fsl_clock.o(.text.CLOCK_EnablePll0)
    [Anonymous Symbol]                       0x0000080c   Section        0  fsl_clock.o(.text.CLOCK_GetEr32kClkFreq)
    [Anonymous Symbol]                       0x00000878   Section        0  fsl_clock.o(.text.CLOCK_GetFixedFreqClkFreq)
    CLOCK_GetFllExtRefClkFreq                0x00000899   Thumb Code   100  fsl_clock.o(.text.CLOCK_GetFllExtRefClkFreq)
    [Anonymous Symbol]                       0x00000898   Section        0  fsl_clock.o(.text.CLOCK_GetFllExtRefClkFreq)
    [Anonymous Symbol]                       0x000008fc   Section        0  fsl_clock.o(.text.CLOCK_GetFllFreq)
    CLOCK_GetFllFreq.fllFactorTable          0x0000093c   Number         0  fsl_clock.o(.text.CLOCK_GetFllFreq)
    CLOCK_GetFllRefClkFreq                   0x0000094d   Thumb Code    34  fsl_clock.o(.text.CLOCK_GetFllRefClkFreq)
    [Anonymous Symbol]                       0x0000094c   Section        0  fsl_clock.o(.text.CLOCK_GetFllRefClkFreq)
    [Anonymous Symbol]                       0x00000970   Section        0  fsl_clock.o(.text.CLOCK_GetFreq)
    [Anonymous Symbol]                       0x00000a28   Section        0  fsl_clock.o(.text.CLOCK_GetInternalRefClkFreq)
    CLOCK_GetInternalRefClkSelectFreq        0x00000a41   Thumb Code    48  fsl_clock.o(.text.CLOCK_GetInternalRefClkSelectFreq)
    [Anonymous Symbol]                       0x00000a40   Section        0  fsl_clock.o(.text.CLOCK_GetInternalRefClkSelectFreq)
    CLOCK_GetMcgExtClkFreq                   0x00000a71   Thumb Code   108  fsl_clock.o(.text.CLOCK_GetMcgExtClkFreq)
    [Anonymous Symbol]                       0x00000a70   Section        0  fsl_clock.o(.text.CLOCK_GetMcgExtClkFreq)
    [Anonymous Symbol]                       0x00000b04   Section        0  fsl_clock.o(.text.CLOCK_GetOsc0ErClkFreq)
    CLOCK_GetOscRangeFromFreq                0x00000b4d   Thumb Code    32  fsl_clock.o(.text.CLOCK_GetOscRangeFromFreq)
    [Anonymous Symbol]                       0x00000b4c   Section        0  fsl_clock.o(.text.CLOCK_GetOscRangeFromFreq)
    [Anonymous Symbol]                       0x00000b6c   Section        0  fsl_clock.o(.text.CLOCK_GetOutClkFreq)
    [Anonymous Symbol]                       0x00000b9c   Section        0  fsl_clock.o(.text.CLOCK_GetPll0Freq)
    CLOCK_GetPll0RefFreq                     0x00000bed   Thumb Code     8  fsl_clock.o(.text.CLOCK_GetPll0RefFreq)
    [Anonymous Symbol]                       0x00000bec   Section        0  fsl_clock.o(.text.CLOCK_GetPll0RefFreq)
    [Anonymous Symbol]                       0x00000bf4   Section        0  fsl_clock.o(.text.CLOCK_GetPllFllSelClkFreq)
    [Anonymous Symbol]                       0x00000c28   Section        0  fsl_clock.o(.text.CLOCK_InitOsc0)
    CLOCK_SetEr32kClock                      0x00000c81   Thumb Code    18  fsl_clock.o(.text.CLOCK_SetEr32kClock)
    [Anonymous Symbol]                       0x00000c80   Section        0  fsl_clock.o(.text.CLOCK_SetEr32kClock)
    [Anonymous Symbol]                       0x00000c94   Section        0  fsl_clock.o(.text.CLOCK_SetExternalRefClkConfig)
    [Anonymous Symbol]                       0x00000cd0   Section        0  fsl_clock.o(.text.CLOCK_SetInternalRefClkConfig)
    [Anonymous Symbol]                       0x00000d64   Section        0  fsl_clock.o(.text.CLOCK_SetPbeMode)
    CLOCK_SetPllFllSelClock                  0x00000dd9   Thumb Code    18  fsl_clock.o(.text.CLOCK_SetPllFllSelClock)
    [Anonymous Symbol]                       0x00000dd8   Section        0  fsl_clock.o(.text.CLOCK_SetPllFllSelClock)
    [Anonymous Symbol]                       0x00000dec   Section        0  fsl_clock.o(.text.CLOCK_SetSimConfig)
    CLOCK_SetSimSafeDivs                     0x00000e0d   Thumb Code    16  clock_config.o(.text.CLOCK_SetSimSafeDivs)
    [Anonymous Symbol]                       0x00000e0c   Section        0  clock_config.o(.text.CLOCK_SetSimSafeDivs)
    CLOCK_SetXtal0Freq                       0x00000e1d   Thumb Code    20  clock_config.o(.text.CLOCK_SetXtal0Freq)
    [Anonymous Symbol]                       0x00000e1c   Section        0  clock_config.o(.text.CLOCK_SetXtal0Freq)
    ConvertRadixNumToString                  0x00000e31   Thumb Code    74  fsl_str.o(.text.ConvertRadixNumToString)
    [Anonymous Symbol]                       0x00000e30   Section        0  fsl_str.o(.text.ConvertRadixNumToString)
    DbgConsole_PrintCallback                 0x00000e7d   Thumb Code    68  fsl_debug_console.o(.text.DbgConsole_PrintCallback)
    [Anonymous Symbol]                       0x00000e7c   Section        0  fsl_debug_console.o(.text.DbgConsole_PrintCallback)
    [Anonymous Symbol]                       0x00000ec0   Section        0  fsl_debug_console.o(.text.DbgConsole_Printf)
    [Anonymous Symbol]                       0x00000ee0   Section        0  fsl_debug_console.o(.text.DbgConsole_SendDataReliable)
    [Anonymous Symbol]                       0x00000f20   Section        0  fsl_debug_console.o(.text.DbgConsole_Vprintf)
    DisableGlobalIRQ                         0x00000f65   Thumb Code    12  fsl_uart.o(.text.DisableGlobalIRQ)
    [Anonymous Symbol]                       0x00000f64   Section        0  fsl_uart.o(.text.DisableGlobalIRQ)
    EnableGlobalIRQ                          0x00000f71   Thumb Code     6  fsl_uart.o(.text.EnableGlobalIRQ)
    [Anonymous Symbol]                       0x00000f70   Section        0  fsl_uart.o(.text.EnableGlobalIRQ)
    EnableIRQ                                0x00000f79   Thumb Code    20  fsl_uart.o(.text.EnableIRQ)
    [Anonymous Symbol]                       0x00000f78   Section        0  fsl_uart.o(.text.EnableIRQ)
    [Anonymous Symbol]                       0x00000f8c   Section        0  fsl_adapter_uart.o(.text.HAL_UartSendBlocking)
    OSC_SetCapLoad                           0x00000ff5   Thumb Code    20  fsl_clock.o(.text.OSC_SetCapLoad)
    [Anonymous Symbol]                       0x00000ff4   Section        0  fsl_clock.o(.text.OSC_SetCapLoad)
    OSC_SetExtRefClkConfig                   0x00001009   Thumb Code    22  fsl_clock.o(.text.OSC_SetExtRefClkConfig)
    [Anonymous Symbol]                       0x00001008   Section        0  fsl_clock.o(.text.OSC_SetExtRefClkConfig)
    PORT_SetPinMux                           0x00001021   Thumb Code    24  pin_mux.o(.text.PORT_SetPinMux)
    [Anonymous Symbol]                       0x00001020   Section        0  pin_mux.o(.text.PORT_SetPinMux)
    [Anonymous Symbol]                       0x00001040   Section        0  port.o(.text.PendSV_Handler)
    pxCurrentTCBConst                        0x000010a0   Number         0  port.o(.text.PendSV_Handler)
    PrintFilterLengthFlag                    0x000010a5   Thumb Code    22  fsl_str.o(.text.PrintFilterLengthFlag)
    [Anonymous Symbol]                       0x000010a4   Section        0  fsl_str.o(.text.PrintFilterLengthFlag)
    PrintGetPrecision                        0x000010bd   Thumb Code    40  fsl_str.o(.text.PrintGetPrecision)
    [Anonymous Symbol]                       0x000010bc   Section        0  fsl_str.o(.text.PrintGetPrecision)
    PrintGetRadixFromobpu                    0x000010e5   Thumb Code    26  fsl_str.o(.text.PrintGetRadixFromobpu)
    [Anonymous Symbol]                       0x000010e4   Section        0  fsl_str.o(.text.PrintGetRadixFromobpu)
    PrintGetWidth                            0x00001101   Thumb Code    62  fsl_str.o(.text.PrintGetWidth)
    [Anonymous Symbol]                       0x00001100   Section        0  fsl_str.o(.text.PrintGetWidth)
    PrintIsdi                                0x00001141   Thumb Code    16  fsl_str.o(.text.PrintIsdi)
    [Anonymous Symbol]                       0x00001140   Section        0  fsl_str.o(.text.PrintIsdi)
    PrintIsfF                                0x00001151   Thumb Code    14  fsl_str.o(.text.PrintIsfF)
    [Anonymous Symbol]                       0x00001150   Section        0  fsl_str.o(.text.PrintIsfF)
    PrintIsobpu                              0x00001161   Thumb Code    36  fsl_str.o(.text.PrintIsobpu)
    [Anonymous Symbol]                       0x00001160   Section        0  fsl_str.o(.text.PrintIsobpu)
    PrintIsxX                                0x00001185   Thumb Code    14  fsl_str.o(.text.PrintIsxX)
    [Anonymous Symbol]                       0x00001184   Section        0  fsl_str.o(.text.PrintIsxX)
    PrintOutputdifFobpu                      0x00001195   Thumb Code    50  fsl_str.o(.text.PrintOutputdifFobpu)
    [Anonymous Symbol]                       0x00001194   Section        0  fsl_str.o(.text.PrintOutputdifFobpu)
    PrintOutputxX                            0x000011c9   Thumb Code    50  fsl_str.o(.text.PrintOutputxX)
    [Anonymous Symbol]                       0x000011c8   Section        0  fsl_str.o(.text.PrintOutputxX)
    [Anonymous Symbol]                       0x00001200   Section        0  port.o(.text.SVC_Handler)
    pxCurrentTCBConst2                       0x00001220   Number         0  port.o(.text.SVC_Handler)
    SerialManager_StartWriting               0x00001225   Thumb Code    20  fsl_component_serial_manager.o(.text.SerialManager_StartWriting)
    [Anonymous Symbol]                       0x00001224   Section        0  fsl_component_serial_manager.o(.text.SerialManager_StartWriting)
    SerialManager_Write                      0x00001239   Thumb Code    34  fsl_component_serial_manager.o(.text.SerialManager_Write)
    [Anonymous Symbol]                       0x00001238   Section        0  fsl_component_serial_manager.o(.text.SerialManager_Write)
    [Anonymous Symbol]                       0x0000125c   Section        0  fsl_component_serial_manager.o(.text.SerialManager_WriteBlocking)
    [Anonymous Symbol]                       0x00001264   Section        0  fsl_component_serial_port_uart.o(.text.Serial_UartWrite)
    [Anonymous Symbol]                       0x00001280   Section        0  fsl_str.o(.text.StrFormatPrintf)
    [Anonymous Symbol]                       0x00001408   Section        0  port.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x00001438   Section        0  system_mk64f12.o(.text.SystemInit)
    [Anonymous Symbol]                       0x0000146c   Section        0  system_mk64f12.o(.text.SystemInitHook)
    [Anonymous Symbol]                       0x00001470   Section        0  fsl_uart.o(.text.UART0_DriverIRQHandler)
    [Anonymous Symbol]                       0x00001498   Section        0  fsl_uart.o(.text.UART0_RX_TX_DriverIRQHandler)
    [Anonymous Symbol]                       0x000014a4   Section        0  fsl_uart.o(.text.UART1_DriverIRQHandler)
    [Anonymous Symbol]                       0x000014cc   Section        0  fsl_uart.o(.text.UART1_RX_TX_DriverIRQHandler)
    [Anonymous Symbol]                       0x000014d8   Section        0  fsl_uart.o(.text.UART2_DriverIRQHandler)
    [Anonymous Symbol]                       0x00001500   Section        0  fsl_uart.o(.text.UART2_RX_TX_DriverIRQHandler)
    [Anonymous Symbol]                       0x0000150c   Section        0  fsl_uart.o(.text.UART3_DriverIRQHandler)
    [Anonymous Symbol]                       0x00001534   Section        0  fsl_uart.o(.text.UART3_RX_TX_DriverIRQHandler)
    [Anonymous Symbol]                       0x00001540   Section        0  fsl_uart.o(.text.UART4_DriverIRQHandler)
    [Anonymous Symbol]                       0x00001568   Section        0  fsl_uart.o(.text.UART4_RX_TX_DriverIRQHandler)
    [Anonymous Symbol]                       0x00001574   Section        0  fsl_uart.o(.text.UART5_DriverIRQHandler)
    [Anonymous Symbol]                       0x0000159c   Section        0  fsl_uart.o(.text.UART5_RX_TX_DriverIRQHandler)
    [Anonymous Symbol]                       0x000015a8   Section        0  fsl_uart.o(.text.UART_ClearStatusFlags)
    [Anonymous Symbol]                       0x000015e0   Section        0  fsl_uart.o(.text.UART_Deinit)
    UART_EnableRx                            0x0000160d   Thumb Code    10  fsl_uart_freertos.o(.text.UART_EnableRx)
    [Anonymous Symbol]                       0x0000160c   Section        0  fsl_uart_freertos.o(.text.UART_EnableRx)
    UART_EnableTx                            0x00001619   Thumb Code    10  fsl_uart_freertos.o(.text.UART_EnableTx)
    [Anonymous Symbol]                       0x00001618   Section        0  fsl_uart_freertos.o(.text.UART_EnableTx)
    [Anonymous Symbol]                       0x00001624   Section        0  fsl_uart.o(.text.UART_GetDefaultConfig)
    [Anonymous Symbol]                       0x0000165c   Section        0  fsl_uart.o(.text.UART_GetInstance)
    s_uartBases                              0x00001684   Number         0  fsl_uart.o(.text.UART_GetInstance)
    [Anonymous Symbol]                       0x000016b8   Section        0  fsl_uart.o(.text.UART_GetStatusFlags)
    [Anonymous Symbol]                       0x000016d0   Section        0  fsl_uart.o(.text.UART_Init)
    UART_RTOS_Callback                       0x000018a9   Thumb Code   118  fsl_uart_freertos.o(.text.UART_RTOS_Callback)
    [Anonymous Symbol]                       0x000018a8   Section        0  fsl_uart_freertos.o(.text.UART_RTOS_Callback)
    [Anonymous Symbol]                       0x00001920   Section        0  fsl_uart_freertos.o(.text.UART_RTOS_Deinit)
    [Anonymous Symbol]                       0x00001964   Section        0  fsl_uart_freertos.o(.text.UART_RTOS_Init)
    [Anonymous Symbol]                       0x00001a60   Section        0  fsl_uart_freertos.o(.text.UART_RTOS_Receive)
    [Anonymous Symbol]                       0x00001b44   Section        0  fsl_uart_freertos.o(.text.UART_RTOS_Send)
    UART_ReadNonBlocking                     0x00001bc5   Thumb Code    48  fsl_uart.o(.text.UART_ReadNonBlocking)
    [Anonymous Symbol]                       0x00001bc4   Section        0  fsl_uart.o(.text.UART_ReadNonBlocking)
    [Anonymous Symbol]                       0x00001bf4   Section        0  fsl_uart.o(.text.UART_TransferAbortReceive)
    [Anonymous Symbol]                       0x00001c4c   Section        0  fsl_uart.o(.text.UART_TransferCreateHandle)
    [Anonymous Symbol]                       0x00001cc4   Section        0  fsl_uart.o(.text.UART_TransferGetRxRingBufferLength)
    [Anonymous Symbol]                       0x00001cec   Section        0  fsl_uart.o(.text.UART_TransferHandleIRQ)
    UART_TransferIsRxRingBufferFull          0x00002109   Thumb Code    46  fsl_uart.o(.text.UART_TransferIsRxRingBufferFull)
    [Anonymous Symbol]                       0x00002108   Section        0  fsl_uart.o(.text.UART_TransferIsRxRingBufferFull)
    [Anonymous Symbol]                       0x00002138   Section        0  fsl_uart.o(.text.UART_TransferReceiveNonBlocking)
    [Anonymous Symbol]                       0x000022e4   Section        0  fsl_uart.o(.text.UART_TransferSendNonBlocking)
    [Anonymous Symbol]                       0x00002394   Section        0  fsl_uart.o(.text.UART_TransferStartRingBuffer)
    [Anonymous Symbol]                       0x0000240c   Section        0  fsl_uart.o(.text.UART_WriteBlocking)
    UART_WriteNonBlocking                    0x00002431   Thumb Code    48  fsl_uart.o(.text.UART_WriteNonBlocking)
    [Anonymous Symbol]                       0x00002430   Section        0  fsl_uart.o(.text.UART_WriteNonBlocking)
    __NVIC_EnableIRQ                         0x00002461   Thumb Code    32  fsl_uart.o(.text.__NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x00002460   Section        0  fsl_uart.o(.text.__NVIC_EnableIRQ)
    __NVIC_SetPriority                       0x00002481   Thumb Code    14  freertos_uart.o(.text.__NVIC_SetPriority)
    [Anonymous Symbol]                       0x00002480   Section        0  freertos_uart.o(.text.__NVIC_SetPriority)
    [Anonymous Symbol]                       0x00002490   Section        0  fsl_assert.o(.text.__aeabi_assert)
    [Anonymous Symbol]                       0x000024cc   Section        0  freertos_uart.o(.text.main)
    prvAddCurrentTaskToDelayedList           0x00002535   Thumb Code   162  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    [Anonymous Symbol]                       0x00002534   Section        0  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    prvAddNewTaskToReadyList                 0x000025d9   Thumb Code   174  tasks.o(.text.prvAddNewTaskToReadyList)
    [Anonymous Symbol]                       0x000025d8   Section        0  tasks.o(.text.prvAddNewTaskToReadyList)
    prvCheckForValidListAndQueue             0x00002689   Thumb Code   100  timers.o(.text.prvCheckForValidListAndQueue)
    [Anonymous Symbol]                       0x00002688   Section        0  timers.o(.text.prvCheckForValidListAndQueue)
    prvCheckTasksWaitingTermination          0x000026f5   Thumb Code    78  tasks.o(.text.prvCheckTasksWaitingTermination)
    [Anonymous Symbol]                       0x000026f4   Section        0  tasks.o(.text.prvCheckTasksWaitingTermination)
    prvCopyDataFromQueue                     0x00002745   Thumb Code    38  queue.o(.text.prvCopyDataFromQueue)
    [Anonymous Symbol]                       0x00002744   Section        0  queue.o(.text.prvCopyDataFromQueue)
    prvCopyDataToQueue                       0x0000276d   Thumb Code   122  queue.o(.text.prvCopyDataToQueue)
    [Anonymous Symbol]                       0x0000276c   Section        0  queue.o(.text.prvCopyDataToQueue)
    prvDeleteTCB                             0x000027e9   Thumb Code    18  tasks.o(.text.prvDeleteTCB)
    [Anonymous Symbol]                       0x000027e8   Section        0  tasks.o(.text.prvDeleteTCB)
    prvGetDisinheritPriorityAfterTimeout     0x000027fd   Thumb Code    18  queue.o(.text.prvGetDisinheritPriorityAfterTimeout)
    [Anonymous Symbol]                       0x000027fc   Section        0  queue.o(.text.prvGetDisinheritPriorityAfterTimeout)
    prvGetNextExpireTime                     0x00002811   Thumb Code    32  timers.o(.text.prvGetNextExpireTime)
    [Anonymous Symbol]                       0x00002810   Section        0  timers.o(.text.prvGetNextExpireTime)
    prvHeapInit                              0x00002831   Thumb Code   118  heap_4.o(.text.prvHeapInit)
    [Anonymous Symbol]                       0x00002830   Section        0  heap_4.o(.text.prvHeapInit)
    prvIdleTask                              0x000028a9   Thumb Code    42  tasks.o(.text.prvIdleTask)
    [Anonymous Symbol]                       0x000028a8   Section        0  tasks.o(.text.prvIdleTask)
    prvInitialiseMutex                       0x000028d5   Thumb Code    32  queue.o(.text.prvInitialiseMutex)
    [Anonymous Symbol]                       0x000028d4   Section        0  queue.o(.text.prvInitialiseMutex)
    prvInitialiseNewQueue                    0x000028f5   Thumb Code    32  queue.o(.text.prvInitialiseNewQueue)
    [Anonymous Symbol]                       0x000028f4   Section        0  queue.o(.text.prvInitialiseNewQueue)
    prvInitialiseNewTask                     0x00002915   Thumb Code   184  tasks.o(.text.prvInitialiseNewTask)
    [Anonymous Symbol]                       0x00002914   Section        0  tasks.o(.text.prvInitialiseNewTask)
    prvInitialiseTaskLists                   0x000029cd   Thumb Code   110  tasks.o(.text.prvInitialiseTaskLists)
    [Anonymous Symbol]                       0x000029cc   Section        0  tasks.o(.text.prvInitialiseTaskLists)
    prvInsertBlockIntoFreeList               0x00002a3d   Thumb Code    90  heap_4.o(.text.prvInsertBlockIntoFreeList)
    [Anonymous Symbol]                       0x00002a3c   Section        0  heap_4.o(.text.prvInsertBlockIntoFreeList)
    prvInsertTimerInActiveList               0x00002a99   Thumb Code    64  timers.o(.text.prvInsertTimerInActiveList)
    [Anonymous Symbol]                       0x00002a98   Section        0  timers.o(.text.prvInsertTimerInActiveList)
    prvIsQueueEmpty                          0x00002ad9   Thumb Code    24  queue.o(.text.prvIsQueueEmpty)
    [Anonymous Symbol]                       0x00002ad8   Section        0  queue.o(.text.prvIsQueueEmpty)
    prvIsQueueFull                           0x00002af1   Thumb Code    28  queue.o(.text.prvIsQueueFull)
    [Anonymous Symbol]                       0x00002af0   Section        0  queue.o(.text.prvIsQueueFull)
    prvPortStartFirstTask                    0x00002b0d   Thumb Code    40  port.o(.text.prvPortStartFirstTask)
    [Anonymous Symbol]                       0x00002b0c   Section        0  port.o(.text.prvPortStartFirstTask)
    prvProcessExpiredTimer                   0x00002b35   Thumb Code   110  timers.o(.text.prvProcessExpiredTimer)
    [Anonymous Symbol]                       0x00002b34   Section        0  timers.o(.text.prvProcessExpiredTimer)
    prvProcessReceivedCommands               0x00002ba5   Thumb Code   290  timers.o(.text.prvProcessReceivedCommands)
    [Anonymous Symbol]                       0x00002ba4   Section        0  timers.o(.text.prvProcessReceivedCommands)
    prvProcessTimerOrBlockTask               0x00002cc9   Thumb Code   128  timers.o(.text.prvProcessTimerOrBlockTask)
    [Anonymous Symbol]                       0x00002cc8   Section        0  timers.o(.text.prvProcessTimerOrBlockTask)
    prvResetNextTaskUnblockTime              0x00002d49   Thumb Code    38  tasks.o(.text.prvResetNextTaskUnblockTime)
    [Anonymous Symbol]                       0x00002d48   Section        0  tasks.o(.text.prvResetNextTaskUnblockTime)
    prvSampleTimeNow                         0x00002d71   Thumb Code    42  timers.o(.text.prvSampleTimeNow)
    [Anonymous Symbol]                       0x00002d70   Section        0  timers.o(.text.prvSampleTimeNow)
    prvSwitchTimerLists                      0x00002d9d   Thumb Code   142  timers.o(.text.prvSwitchTimerLists)
    [Anonymous Symbol]                       0x00002d9c   Section        0  timers.o(.text.prvSwitchTimerLists)
    prvTaskExitError                         0x00002e2d   Thumb Code    50  port.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x00002e2c   Section        0  port.o(.text.prvTaskExitError)
    prvTestWaitCondition                     0x00002e61   Thumb Code    24  event_groups.o(.text.prvTestWaitCondition)
    [Anonymous Symbol]                       0x00002e60   Section        0  event_groups.o(.text.prvTestWaitCondition)
    prvTimerTask                             0x00002e79   Thumb Code    22  timers.o(.text.prvTimerTask)
    [Anonymous Symbol]                       0x00002e78   Section        0  timers.o(.text.prvTimerTask)
    prvUnlockQueue                           0x00002e91   Thumb Code   114  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x00002e90   Section        0  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x00002f04   Section        0  heap_4.o(.text.pvPortMalloc)
    [Anonymous Symbol]                       0x00003054   Section        0  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    [Anonymous Symbol]                       0x0000306c   Section        0  port.o(.text.pxPortInitialiseStack)
    uart_task                                0x00003095   Thumb Code   272  freertos_uart.o(.text.uart_task)
    [Anonymous Symbol]                       0x00003094   Section        0  freertos_uart.o(.text.uart_task)
    [Anonymous Symbol]                       0x000031a4   Section        0  list.o(.text.uxListRemove)
    [Anonymous Symbol]                       0x000031c8   Section        0  tasks.o(.text.uxTaskResetEventItemValue)
    [Anonymous Symbol]                       0x000031e4   Section        0  event_groups.o(.text.vEventGroupDelete)
    [Anonymous Symbol]                       0x00003228   Section        0  event_groups.o(.text.vEventGroupSetBitsCallback)
    [Anonymous Symbol]                       0x00003230   Section        0  list.o(.text.vListInitialise)
    [Anonymous Symbol]                       0x00003248   Section        0  list.o(.text.vListInitialiseItem)
    [Anonymous Symbol]                       0x00003250   Section        0  list.o(.text.vListInsert)
    [Anonymous Symbol]                       0x0000328c   Section        0  list.o(.text.vListInsertEnd)
    vPortEnableVFP                           0x000032a9   Thumb Code    20  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x000032a8   Section        0  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x000032bc   Section        0  port.o(.text.vPortEnterCritical)
    [Anonymous Symbol]                       0x00003304   Section        0  port.o(.text.vPortExitCritical)
    [Anonymous Symbol]                       0x00003334   Section        0  heap_4.o(.text.vPortFree)
    [Anonymous Symbol]                       0x000033c0   Section        0  port.o(.text.vPortSetupTimerInterrupt)
    [Anonymous Symbol]                       0x000033f4   Section        0  port.o(.text.vPortValidateInterruptPriority)
    [Anonymous Symbol]                       0x00003458   Section        0  queue.o(.text.vQueueAddToRegistry)
    [Anonymous Symbol]                       0x00003480   Section        0  queue.o(.text.vQueueDelete)
    [Anonymous Symbol]                       0x000034a8   Section        0  queue.o(.text.vQueueUnregisterQueue)
    [Anonymous Symbol]                       0x000034d4   Section        0  queue.o(.text.vQueueWaitForMessageRestricted)
    [Anonymous Symbol]                       0x00003518   Section        0  tasks.o(.text.vTaskInternalSetTimeOutState)
    [Anonymous Symbol]                       0x00003534   Section        0  tasks.o(.text.vTaskMissedYield)
    [Anonymous Symbol]                       0x00003544   Section        0  tasks.o(.text.vTaskPlaceOnEventList)
    [Anonymous Symbol]                       0x00003578   Section        0  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    [Anonymous Symbol]                       0x000035b8   Section        0  tasks.o(.text.vTaskPlaceOnUnorderedEventList)
    [Anonymous Symbol]                       0x00003614   Section        0  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    [Anonymous Symbol]                       0x000036d0   Section        0  tasks.o(.text.vTaskRemoveFromUnorderedEventList)
    [Anonymous Symbol]                       0x00003768   Section        0  tasks.o(.text.vTaskStartScheduler)
    [Anonymous Symbol]                       0x00003804   Section        0  tasks.o(.text.vTaskSuspend)
    [Anonymous Symbol]                       0x000038fc   Section        0  tasks.o(.text.vTaskSuspendAll)
    __tagsym$$used.0                         0x0000390c   Number         0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x0000390c   Section        0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x00003994   Section        0  event_groups.o(.text.xEventGroupClearBits)
    [Anonymous Symbol]                       0x000039dc   Section        0  event_groups.o(.text.xEventGroupCreate)
    [Anonymous Symbol]                       0x000039f8   Section        0  event_groups.o(.text.xEventGroupSetBits)
    [Anonymous Symbol]                       0x00003a98   Section        0  event_groups.o(.text.xEventGroupSetBitsFromISR)
    [Anonymous Symbol]                       0x00003ab0   Section        0  event_groups.o(.text.xEventGroupWaitBits)
    [Anonymous Symbol]                       0x00003bd0   Section        0  port.o(.text.xPortStartScheduler)
    [Anonymous Symbol]                       0x00003ce4   Section        0  queue.o(.text.xQueueCreateMutex)
    [Anonymous Symbol]                       0x00003cfc   Section        0  queue.o(.text.xQueueGenericCreate)
    [Anonymous Symbol]                       0x00003d6c   Section        0  queue.o(.text.xQueueGenericReset)
    [Anonymous Symbol]                       0x00003dec   Section        0  queue.o(.text.xQueueGenericSend)
    [Anonymous Symbol]                       0x00003f90   Section        0  queue.o(.text.xQueueGenericSendFromISR)
    [Anonymous Symbol]                       0x00004078   Section        0  queue.o(.text.xQueueReceive)
    [Anonymous Symbol]                       0x000041fc   Section        0  queue.o(.text.xQueueSemaphoreTake)
    [Anonymous Symbol]                       0x000043c4   Section        0  tasks.o(.text.xTaskCheckForTimeOut)
    [Anonymous Symbol]                       0x00004450   Section        0  tasks.o(.text.xTaskCreate)
    [Anonymous Symbol]                       0x000044b0   Section        0  tasks.o(.text.xTaskGetSchedulerState)
    [Anonymous Symbol]                       0x000044d8   Section        0  tasks.o(.text.xTaskGetTickCount)
    [Anonymous Symbol]                       0x000044e4   Section        0  tasks.o(.text.xTaskIncrementTick)
    [Anonymous Symbol]                       0x0000462c   Section        0  tasks.o(.text.xTaskPriorityDisinherit)
    [Anonymous Symbol]                       0x000046d8   Section        0  tasks.o(.text.xTaskPriorityInherit)
    [Anonymous Symbol]                       0x00004784   Section        0  tasks.o(.text.xTaskRemoveFromEventList)
    [Anonymous Symbol]                       0x00004814   Section        0  tasks.o(.text.xTaskResumeAll)
    [Anonymous Symbol]                       0x0000492c   Section        0  timers.o(.text.xTimerCreateTimerTask)
    [Anonymous Symbol]                       0x0000498c   Section        0  timers.o(.text.xTimerGenericCommand)
    [Anonymous Symbol]                       0x000049f4   Section        0  timers.o(.text.xTimerPendFunctionCallFromISR)
    i.__scatterload_copy                     0x00004a1e   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x00004a2c   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x00004a2e   Section       14  handlers.o(i.__scatterload_zeroinit)
    s_UartAdapterBase                        0x00004a50   Data          24  fsl_adapter_uart.o(.rodata.s_UartAdapterBase)
    [Anonymous Symbol]                       0x00004a50   Section        0  fsl_adapter_uart.o(.rodata.s_UartAdapterBase)
    s_uartClock                              0x00004a68   Data          24  fsl_uart.o(.rodata.s_uartClock)
    [Anonymous Symbol]                       0x00004a68   Section        0  fsl_uart.o(.rodata.s_uartClock)
    [Anonymous Symbol]                       0x00004a90   Section        0  freertos_uart.o(.rodata.str1.1)
    .L.str.1                                 0x00004ae6   Data          51  fsl_clock.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00004ae6   Section        0  fsl_clock.o(.rodata.str1.1)
    .L.str.4                                 0x00004b19   Data           7  fsl_clock.o(.rodata.str1.1)
    .L.str.9                                 0x00004b20   Data          13  fsl_uart.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00004b20   Section        0  fsl_uart.o(.rodata.str1.1)
    .L.str.2                                 0x00004b2d   Data          15  fsl_uart.o(.rodata.str1.1)
    .L.str.3                                 0x00004b3c   Data          15  fsl_uart.o(.rodata.str1.1)
    .L.str.11                                0x00004b4b   Data          13  fsl_uart.o(.rodata.str1.1)
    .L.str.12                                0x00004b58   Data          21  fsl_uart.o(.rodata.str1.1)
    .L.str.1                                 0x00004b6d   Data          50  fsl_uart.o(.rodata.str1.1)
    .L.str.6                                 0x00004b9f   Data          70  fsl_uart.o(.rodata.str1.1)
    .L.str.5                                 0x00004be5   Data          70  fsl_uart.o(.rodata.str1.1)
    .L.str.8                                 0x00004bfc   Data          13  fsl_uart.o(.rodata.str1.1)
    .L.str.5                                 0x00004c2b   Data           5  fsl_adapter_uart.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00004c2b   Section        0  fsl_adapter_uart.o(.rodata.str1.1)
    .L.str.1                                 0x00004c30   Data          50  fsl_adapter_uart.o(.rodata.str1.1)
    .L.str.14                                0x00004c38   Data          14  fsl_uart.o(.rodata.str1.1)
    .L.str                                   0x00004c62   Data           7  fsl_adapter_uart.o(.rodata.str1.1)
    .L.str.3                                 0x00004c64   Data          69  fsl_adapter_uart.o(.rodata.str1.1)
    .L.str.6                                 0x00004c69   Data           7  fsl_adapter_uart.o(.rodata.str1.1)
    s_fastIrcFreq                            0x20000004   Data           4  fsl_clock.o(.data.s_fastIrcFreq)
    [Anonymous Symbol]                       0x20000004   Section        0  fsl_clock.o(.data.s_fastIrcFreq)
    s_slowIrcFreq                            0x20000008   Data           4  fsl_clock.o(.data.s_slowIrcFreq)
    [Anonymous Symbol]                       0x20000008   Section        0  fsl_clock.o(.data.s_slowIrcFreq)
    uxCriticalNesting                        0x20000034   Data           4  port.o(.data.uxCriticalNesting)
    [Anonymous Symbol]                       0x20000034   Section        0  port.o(.data.uxCriticalNesting)
    prvSampleTimeNow.xLastTime               0x2000008c   Data           4  timers.o(.bss.prvSampleTimeNow.xLastTime)
    [Anonymous Symbol]                       0x2000008c   Section        0  timers.o(.bss.prvSampleTimeNow.xLastTime)
    pxCurrentTimerList                       0x20000094   Data           4  timers.o(.bss.pxCurrentTimerList)
    [Anonymous Symbol]                       0x20000094   Section        0  timers.o(.bss.pxCurrentTimerList)
    pxDelayedTaskList                        0x20000098   Data           4  tasks.o(.bss.pxDelayedTaskList)
    [Anonymous Symbol]                       0x20000098   Section        0  tasks.o(.bss.pxDelayedTaskList)
    pxEnd                                    0x2000009c   Data           4  heap_4.o(.bss.pxEnd)
    [Anonymous Symbol]                       0x2000009c   Section        0  heap_4.o(.bss.pxEnd)
    pxOverflowDelayedTaskList                0x200000a0   Data           4  tasks.o(.bss.pxOverflowDelayedTaskList)
    [Anonymous Symbol]                       0x200000a0   Section        0  tasks.o(.bss.pxOverflowDelayedTaskList)
    pxOverflowTimerList                      0x200000a4   Data           4  timers.o(.bss.pxOverflowTimerList)
    [Anonymous Symbol]                       0x200000a4   Section        0  timers.o(.bss.pxOverflowTimerList)
    pxReadyTasksLists                        0x200000a8   Data         100  tasks.o(.bss.pxReadyTasksLists)
    [Anonymous Symbol]                       0x200000a8   Section        0  tasks.o(.bss.pxReadyTasksLists)
    s_debugConsoleState                      0x20000110   Data          32  fsl_debug_console.o(.bss.s_debugConsoleState)
    [Anonymous Symbol]                       0x20000110   Section        0  fsl_debug_console.o(.bss.s_debugConsoleState)
    ucHeap                                   0x20000178   Data       10240  heap_4.o(.bss.ucHeap)
    [Anonymous Symbol]                       0x20000178   Section        0  heap_4.o(.bss.ucHeap)
    ucMaxSysCallPriority                     0x20002978   Data           1  port.o(.bss.ucMaxSysCallPriority)
    [Anonymous Symbol]                       0x20002978   Section        0  port.o(.bss.ucMaxSysCallPriority)
    ulMaxPRIGROUPValue                       0x2000297c   Data           4  port.o(.bss.ulMaxPRIGROUPValue)
    [Anonymous Symbol]                       0x2000297c   Section        0  port.o(.bss.ulMaxPRIGROUPValue)
    uxCurrentNumberOfTasks                   0x20002980   Data           4  tasks.o(.bss.uxCurrentNumberOfTasks)
    [Anonymous Symbol]                       0x20002980   Section        0  tasks.o(.bss.uxCurrentNumberOfTasks)
    uxDeletedTasksWaitingCleanUp             0x20002984   Data           4  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    [Anonymous Symbol]                       0x20002984   Section        0  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    uxSchedulerSuspended                     0x20002988   Data           4  tasks.o(.bss.uxSchedulerSuspended)
    [Anonymous Symbol]                       0x20002988   Section        0  tasks.o(.bss.uxSchedulerSuspended)
    uxTaskNumber                             0x2000298c   Data           4  tasks.o(.bss.uxTaskNumber)
    [Anonymous Symbol]                       0x2000298c   Section        0  tasks.o(.bss.uxTaskNumber)
    uxTopReadyPriority                       0x20002990   Data           4  tasks.o(.bss.uxTopReadyPriority)
    [Anonymous Symbol]                       0x20002990   Section        0  tasks.o(.bss.uxTopReadyPriority)
    xActiveTimerList1                        0x20002994   Data          20  timers.o(.bss.xActiveTimerList1)
    [Anonymous Symbol]                       0x20002994   Section        0  timers.o(.bss.xActiveTimerList1)
    xActiveTimerList2                        0x200029a8   Data          20  timers.o(.bss.xActiveTimerList2)
    [Anonymous Symbol]                       0x200029a8   Section        0  timers.o(.bss.xActiveTimerList2)
    xBlockAllocatedBit                       0x200029bc   Data           1  heap_4.o(.bss.xBlockAllocatedBit)
    [Anonymous Symbol]                       0x200029bc   Section        0  heap_4.o(.bss.xBlockAllocatedBit)
    xDelayedTaskList1                        0x200029c0   Data          20  tasks.o(.bss.xDelayedTaskList1)
    [Anonymous Symbol]                       0x200029c0   Section        0  tasks.o(.bss.xDelayedTaskList1)
    xDelayedTaskList2                        0x200029d4   Data          20  tasks.o(.bss.xDelayedTaskList2)
    [Anonymous Symbol]                       0x200029d4   Section        0  tasks.o(.bss.xDelayedTaskList2)
    xFreeBytesRemaining                      0x200029e8   Data           4  heap_4.o(.bss.xFreeBytesRemaining)
    [Anonymous Symbol]                       0x200029e8   Section        0  heap_4.o(.bss.xFreeBytesRemaining)
    xIdleTaskHandle                          0x200029ec   Data           4  tasks.o(.bss.xIdleTaskHandle)
    [Anonymous Symbol]                       0x200029ec   Section        0  tasks.o(.bss.xIdleTaskHandle)
    xMinimumEverFreeBytesRemaining           0x200029f0   Data           4  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    [Anonymous Symbol]                       0x200029f0   Section        0  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    xNextTaskUnblockTime                     0x200029f4   Data           4  tasks.o(.bss.xNextTaskUnblockTime)
    [Anonymous Symbol]                       0x200029f4   Section        0  tasks.o(.bss.xNextTaskUnblockTime)
    xNumOfOverflows                          0x200029f8   Data           4  tasks.o(.bss.xNumOfOverflows)
    [Anonymous Symbol]                       0x200029f8   Section        0  tasks.o(.bss.xNumOfOverflows)
    xNumberOfSuccessfulAllocations           0x200029fc   Data           4  heap_4.o(.bss.xNumberOfSuccessfulAllocations)
    [Anonymous Symbol]                       0x200029fc   Section        0  heap_4.o(.bss.xNumberOfSuccessfulAllocations)
    xNumberOfSuccessfulFrees                 0x20002a00   Data           4  heap_4.o(.bss.xNumberOfSuccessfulFrees)
    [Anonymous Symbol]                       0x20002a00   Section        0  heap_4.o(.bss.xNumberOfSuccessfulFrees)
    xPendedTicks                             0x20002a04   Data           4  tasks.o(.bss.xPendedTicks)
    [Anonymous Symbol]                       0x20002a04   Section        0  tasks.o(.bss.xPendedTicks)
    xPendingReadyList                        0x20002a08   Data          20  tasks.o(.bss.xPendingReadyList)
    [Anonymous Symbol]                       0x20002a08   Section        0  tasks.o(.bss.xPendingReadyList)
    xSchedulerRunning                        0x20002a5c   Data           4  tasks.o(.bss.xSchedulerRunning)
    [Anonymous Symbol]                       0x20002a5c   Section        0  tasks.o(.bss.xSchedulerRunning)
    xStart                                   0x20002a60   Data           8  heap_4.o(.bss.xStart)
    [Anonymous Symbol]                       0x20002a60   Section        0  heap_4.o(.bss.xStart)
    xSuspendedTaskList                       0x20002a68   Data          20  tasks.o(.bss.xSuspendedTaskList)
    [Anonymous Symbol]                       0x20002a68   Section        0  tasks.o(.bss.xSuspendedTaskList)
    xTasksWaitingTermination                 0x20002a7c   Data          20  tasks.o(.bss.xTasksWaitingTermination)
    [Anonymous Symbol]                       0x20002a7c   Section        0  tasks.o(.bss.xTasksWaitingTermination)
    xTickCount                               0x20002a90   Data           4  tasks.o(.bss.xTickCount)
    [Anonymous Symbol]                       0x20002a90   Section        0  tasks.o(.bss.xTickCount)
    xTimerQueue                              0x20002a94   Data           4  timers.o(.bss.xTimerQueue)
    [Anonymous Symbol]                       0x20002a94   Section        0  timers.o(.bss.xTimerQueue)
    xTimerTaskHandle                         0x20002a98   Data           4  timers.o(.bss.xTimerTaskHandle)
    [Anonymous Symbol]                       0x20002a98   Section        0  timers.o(.bss.xTimerTaskHandle)
    xYieldPending                            0x20002a9c   Data           4  tasks.o(.bss.xYieldPending)
    [Anonymous Symbol]                       0x20002a9c   Section        0  tasks.o(.bss.xYieldPending)
    VTOR                                     0xe000ed08   Number         0  startup_mk64f12.o ABSOLUTE

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Number      1024  startup_mk64f12.o(.isr_vector)
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __decompress                              - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __main                                   0x00000411   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x00000411   Thumb Code     0  entry4.o(.ARM.Collect$$$$00000003)
    _main_scatterload                        0x00000415   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x00000419   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x00000419   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x00000419   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x00000419   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x00000421   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x00000421   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    Reset_Handler                            0x00000425   Thumb Code    40  startup_mk64f12.o(.text)
    ADC0_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    ADC1_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    BusFault_Handler                         0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    CAN0_DriverIRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    CMP0_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    CMP1_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    CMP2_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    CMT_IRQHandler                           0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DAC0_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DAC1_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA0_DriverIRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA10_DriverIRQHandler                   0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA11_DriverIRQHandler                   0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA12_DriverIRQHandler                   0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA13_DriverIRQHandler                   0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA14_DriverIRQHandler                   0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA15_DriverIRQHandler                   0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA1_DriverIRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA2_DriverIRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA3_DriverIRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA4_DriverIRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA5_DriverIRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA6_DriverIRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA7_DriverIRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA8_DriverIRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA9_DriverIRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA_Error_DriverIRQHandler               0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DebugMon_Handler                         0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DefaultISR                               0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    ENET_1588_Timer_DriverIRQHandler         0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    ENET_Error_DriverIRQHandler              0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    ENET_Receive_DriverIRQHandler            0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    ENET_Transmit_DriverIRQHandler           0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    FTFE_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    FTM0_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    FTM1_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    FTM2_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    FTM3_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    I2C0_DriverIRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    I2C1_DriverIRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    I2C2_DriverIRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    I2S0_Rx_DriverIRQHandler                 0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    I2S0_Tx_DriverIRQHandler                 0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    LLWU_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    LPTMR0_IRQHandler                        0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    LVD_LVW_IRQHandler                       0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    MCG_IRQHandler                           0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    MCM_IRQHandler                           0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    MemManage_Handler                        0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    PDB0_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    PIT0_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    PIT1_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    PIT2_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    PIT3_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    PORTA_IRQHandler                         0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    PORTB_IRQHandler                         0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    PORTC_IRQHandler                         0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    PORTD_IRQHandler                         0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    PORTE_IRQHandler                         0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    RNG_IRQHandler                           0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    RTC_IRQHandler                           0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    RTC_Seconds_IRQHandler                   0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    Read_Collision_IRQHandler                0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    Reserved71_IRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    SDHC_DriverIRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    SPI0_DriverIRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    SPI1_DriverIRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    SPI2_DriverIRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    SWI_IRQHandler                           0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    UART0_ERR_DriverIRQHandler               0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    UART0_LON_DriverIRQHandler               0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    UART1_ERR_DriverIRQHandler               0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    UART2_ERR_DriverIRQHandler               0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    UART3_ERR_DriverIRQHandler               0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    UART4_ERR_DriverIRQHandler               0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    UART5_ERR_DriverIRQHandler               0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    USB0_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    USBDCD_IRQHandler                        0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    UsageFault_Handler                       0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    WDOG_EWM_IRQHandler                      0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    NMI_Handler                              0x00000451   Thumb Code     4  startup_mk64f12.o(.text)
    HardFault_Handler                        0x00000455   Thumb Code     4  startup_mk64f12.o(.text)
    DMA0_IRQHandler                          0x00000465   Thumb Code     4  startup_mk64f12.o(.text)
    DMA1_IRQHandler                          0x00000469   Thumb Code     4  startup_mk64f12.o(.text)
    DMA2_IRQHandler                          0x0000046d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA3_IRQHandler                          0x00000471   Thumb Code     4  startup_mk64f12.o(.text)
    DMA4_IRQHandler                          0x00000475   Thumb Code     4  startup_mk64f12.o(.text)
    DMA5_IRQHandler                          0x00000479   Thumb Code     4  startup_mk64f12.o(.text)
    DMA6_IRQHandler                          0x0000047d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA7_IRQHandler                          0x00000481   Thumb Code     4  startup_mk64f12.o(.text)
    DMA8_IRQHandler                          0x00000485   Thumb Code     4  startup_mk64f12.o(.text)
    DMA9_IRQHandler                          0x00000489   Thumb Code     4  startup_mk64f12.o(.text)
    DMA10_IRQHandler                         0x0000048d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA11_IRQHandler                         0x00000491   Thumb Code     4  startup_mk64f12.o(.text)
    DMA12_IRQHandler                         0x00000495   Thumb Code     4  startup_mk64f12.o(.text)
    DMA13_IRQHandler                         0x00000499   Thumb Code     4  startup_mk64f12.o(.text)
    DMA14_IRQHandler                         0x0000049d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA15_IRQHandler                         0x000004a1   Thumb Code     4  startup_mk64f12.o(.text)
    DMA_Error_IRQHandler                     0x000004a5   Thumb Code     4  startup_mk64f12.o(.text)
    I2C0_IRQHandler                          0x000004a9   Thumb Code     4  startup_mk64f12.o(.text)
    I2C1_IRQHandler                          0x000004ad   Thumb Code     4  startup_mk64f12.o(.text)
    SPI0_IRQHandler                          0x000004b1   Thumb Code     4  startup_mk64f12.o(.text)
    SPI1_IRQHandler                          0x000004b5   Thumb Code     4  startup_mk64f12.o(.text)
    I2S0_Tx_IRQHandler                       0x000004b9   Thumb Code     4  startup_mk64f12.o(.text)
    I2S0_Rx_IRQHandler                       0x000004bd   Thumb Code     4  startup_mk64f12.o(.text)
    UART0_LON_IRQHandler                     0x000004c1   Thumb Code     4  startup_mk64f12.o(.text)
    UART0_RX_TX_IRQHandler                   0x000004c5   Thumb Code     4  startup_mk64f12.o(.text)
    UART0_ERR_IRQHandler                     0x000004c9   Thumb Code     4  startup_mk64f12.o(.text)
    UART1_RX_TX_IRQHandler                   0x000004cd   Thumb Code     4  startup_mk64f12.o(.text)
    UART1_ERR_IRQHandler                     0x000004d1   Thumb Code     4  startup_mk64f12.o(.text)
    UART2_RX_TX_IRQHandler                   0x000004d5   Thumb Code     4  startup_mk64f12.o(.text)
    UART2_ERR_IRQHandler                     0x000004d9   Thumb Code     4  startup_mk64f12.o(.text)
    UART3_RX_TX_IRQHandler                   0x000004dd   Thumb Code     4  startup_mk64f12.o(.text)
    UART3_ERR_IRQHandler                     0x000004e1   Thumb Code     4  startup_mk64f12.o(.text)
    SPI2_IRQHandler                          0x000004e5   Thumb Code     4  startup_mk64f12.o(.text)
    UART4_RX_TX_IRQHandler                   0x000004e9   Thumb Code     4  startup_mk64f12.o(.text)
    UART4_ERR_IRQHandler                     0x000004ed   Thumb Code     4  startup_mk64f12.o(.text)
    UART5_RX_TX_IRQHandler                   0x000004f1   Thumb Code     4  startup_mk64f12.o(.text)
    UART5_ERR_IRQHandler                     0x000004f5   Thumb Code     4  startup_mk64f12.o(.text)
    I2C2_IRQHandler                          0x000004f9   Thumb Code     4  startup_mk64f12.o(.text)
    CAN0_ORed_Message_buffer_IRQHandler      0x000004fd   Thumb Code     4  startup_mk64f12.o(.text)
    CAN0_Bus_Off_IRQHandler                  0x00000501   Thumb Code     4  startup_mk64f12.o(.text)
    CAN0_Error_IRQHandler                    0x00000505   Thumb Code     4  startup_mk64f12.o(.text)
    CAN0_Tx_Warning_IRQHandler               0x00000509   Thumb Code     4  startup_mk64f12.o(.text)
    CAN0_Rx_Warning_IRQHandler               0x0000050d   Thumb Code     4  startup_mk64f12.o(.text)
    CAN0_Wake_Up_IRQHandler                  0x00000511   Thumb Code     4  startup_mk64f12.o(.text)
    SDHC_IRQHandler                          0x00000515   Thumb Code     4  startup_mk64f12.o(.text)
    ENET_1588_Timer_IRQHandler               0x00000519   Thumb Code     4  startup_mk64f12.o(.text)
    ENET_Transmit_IRQHandler                 0x0000051d   Thumb Code     4  startup_mk64f12.o(.text)
    ENET_Receive_IRQHandler                  0x00000521   Thumb Code     4  startup_mk64f12.o(.text)
    ENET_Error_IRQHandler                    0x00000525   Thumb Code     4  startup_mk64f12.o(.text)
    ___aeabi_memcpy4$ret                     0x00000601   Thumb Code     0  memcpy.o(.text)
    ___aeabi_memcpy8$ret                     0x00000601   Thumb Code     0  memcpy.o(.text)
    __aeabi_memcpy                           0x00000601   Thumb Code    40  memcpy.o(.text)
    memcpy                                   0x00000601   Thumb Code     0  memcpy.o(.text)
    __aeabi_memset                           0x00000629   Thumb Code    14  memseta.o(.text)
    __aeabi_memset4                          0x00000629   Thumb Code     0  memseta.o(.text)
    __aeabi_memset8                          0x00000629   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr                           0x00000637   Thumb Code     4  memseta.o(.text)
    __aeabi_memclr4                          0x00000637   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr8                          0x00000637   Thumb Code     0  memseta.o(.text)
    memset                                   0x0000063b   Thumb Code    18  memseta.o(.text)
    strlen                                   0x0000064d   Thumb Code    14  strlen.o(.text)
    __scatterload                            0x0000065d   Thumb Code    28  init.o(.text)
    __scatterload_rt2                        0x0000065d   Thumb Code     0  init.o(.text)
    BOARD_BootClockRUN                       0x00000681   Thumb Code    88  clock_config.o(.text.BOARD_BootClockRUN)
    BOARD_InitBootClocks                     0x000006d9   Thumb Code     8  clock_config.o(.text.BOARD_InitBootClocks)
    BOARD_InitBootPins                       0x000006e1   Thumb Code     8  pin_mux.o(.text.BOARD_InitBootPins)
    BOARD_InitPins                           0x000006e9   Thumb Code    36  pin_mux.o(.text.BOARD_InitPins)
    CLOCK_BootToPeeMode                      0x0000070d   Thumb Code    74  fsl_clock.o(.text.CLOCK_BootToPeeMode)
    CLOCK_EnablePll0                         0x000007bd   Thumb Code    80  fsl_clock.o(.text.CLOCK_EnablePll0)
    CLOCK_GetEr32kClkFreq                    0x0000080d   Thumb Code    92  fsl_clock.o(.text.CLOCK_GetEr32kClkFreq)
    CLOCK_GetFixedFreqClkFreq                0x00000879   Thumb Code    30  fsl_clock.o(.text.CLOCK_GetFixedFreqClkFreq)
    CLOCK_GetFllFreq                         0x000008fd   Thumb Code    64  fsl_clock.o(.text.CLOCK_GetFllFreq)
    CLOCK_GetFreq                            0x00000971   Thumb Code   184  fsl_clock.o(.text.CLOCK_GetFreq)
    CLOCK_GetInternalRefClkFreq              0x00000a29   Thumb Code    24  fsl_clock.o(.text.CLOCK_GetInternalRefClkFreq)
    CLOCK_GetOsc0ErClkFreq                   0x00000b05   Thumb Code    60  fsl_clock.o(.text.CLOCK_GetOsc0ErClkFreq)
    CLOCK_GetOutClkFreq                      0x00000b6d   Thumb Code    48  fsl_clock.o(.text.CLOCK_GetOutClkFreq)
    CLOCK_GetPll0Freq                        0x00000b9d   Thumb Code    68  fsl_clock.o(.text.CLOCK_GetPll0Freq)
    CLOCK_GetPllFllSelClkFreq                0x00000bf5   Thumb Code    52  fsl_clock.o(.text.CLOCK_GetPllFllSelClkFreq)
    CLOCK_InitOsc0                           0x00000c29   Thumb Code    88  fsl_clock.o(.text.CLOCK_InitOsc0)
    CLOCK_SetExternalRefClkConfig            0x00000c95   Thumb Code    58  fsl_clock.o(.text.CLOCK_SetExternalRefClkConfig)
    CLOCK_SetInternalRefClkConfig            0x00000cd1   Thumb Code   146  fsl_clock.o(.text.CLOCK_SetInternalRefClkConfig)
    CLOCK_SetPbeMode                         0x00000d65   Thumb Code   114  fsl_clock.o(.text.CLOCK_SetPbeMode)
    CLOCK_SetSimConfig                       0x00000ded   Thumb Code    30  fsl_clock.o(.text.CLOCK_SetSimConfig)
    DbgConsole_Printf                        0x00000ec1   Thumb Code    32  fsl_debug_console.o(.text.DbgConsole_Printf)
    DbgConsole_SendDataReliable              0x00000ee1   Thumb Code    62  fsl_debug_console.o(.text.DbgConsole_SendDataReliable)
    DbgConsole_Vprintf                       0x00000f21   Thumb Code    66  fsl_debug_console.o(.text.DbgConsole_Vprintf)
    HAL_UartSendBlocking                     0x00000f8d   Thumb Code   102  fsl_adapter_uart.o(.text.HAL_UartSendBlocking)
    PendSV_Handler                           0x00001041   Thumb Code   100  port.o(.text.PendSV_Handler)
    SVC_Handler                              0x00001201   Thumb Code    36  port.o(.text.SVC_Handler)
    SerialManager_WriteBlocking              0x0000125d   Thumb Code     8  fsl_component_serial_manager.o(.text.SerialManager_WriteBlocking)
    Serial_UartWrite                         0x00001265   Thumb Code    26  fsl_component_serial_port_uart.o(.text.Serial_UartWrite)
    StrFormatPrintf                          0x00001281   Thumb Code   392  fsl_str.o(.text.StrFormatPrintf)
    SysTick_Handler                          0x00001409   Thumb Code    46  port.o(.text.SysTick_Handler)
    SystemInit                               0x00001439   Thumb Code    52  system_mk64f12.o(.text.SystemInit)
    SystemInitHook                           0x0000146d   Thumb Code     2  system_mk64f12.o(.text.SystemInitHook)
    UART0_DriverIRQHandler                   0x00001471   Thumb Code    38  fsl_uart.o(.text.UART0_DriverIRQHandler)
    UART0_RX_TX_DriverIRQHandler             0x00001499   Thumb Code    12  fsl_uart.o(.text.UART0_RX_TX_DriverIRQHandler)
    UART1_DriverIRQHandler                   0x000014a5   Thumb Code    38  fsl_uart.o(.text.UART1_DriverIRQHandler)
    UART1_RX_TX_DriverIRQHandler             0x000014cd   Thumb Code    12  fsl_uart.o(.text.UART1_RX_TX_DriverIRQHandler)
    UART2_DriverIRQHandler                   0x000014d9   Thumb Code    38  fsl_uart.o(.text.UART2_DriverIRQHandler)
    UART2_RX_TX_DriverIRQHandler             0x00001501   Thumb Code    12  fsl_uart.o(.text.UART2_RX_TX_DriverIRQHandler)
    UART3_DriverIRQHandler                   0x0000150d   Thumb Code    38  fsl_uart.o(.text.UART3_DriverIRQHandler)
    UART3_RX_TX_DriverIRQHandler             0x00001535   Thumb Code    12  fsl_uart.o(.text.UART3_RX_TX_DriverIRQHandler)
    UART4_DriverIRQHandler                   0x00001541   Thumb Code    38  fsl_uart.o(.text.UART4_DriverIRQHandler)
    UART4_RX_TX_DriverIRQHandler             0x00001569   Thumb Code    12  fsl_uart.o(.text.UART4_RX_TX_DriverIRQHandler)
    UART5_DriverIRQHandler                   0x00001575   Thumb Code    38  fsl_uart.o(.text.UART5_DriverIRQHandler)
    UART5_RX_TX_DriverIRQHandler             0x0000159d   Thumb Code    12  fsl_uart.o(.text.UART5_RX_TX_DriverIRQHandler)
    UART_ClearStatusFlags                    0x000015a9   Thumb Code    54  fsl_uart.o(.text.UART_ClearStatusFlags)
    UART_Deinit                              0x000015e1   Thumb Code    44  fsl_uart.o(.text.UART_Deinit)
    UART_GetDefaultConfig                    0x00001625   Thumb Code    56  fsl_uart.o(.text.UART_GetDefaultConfig)
    UART_GetInstance                         0x0000165d   Thumb Code    40  fsl_uart.o(.text.UART_GetInstance)
    UART_GetStatusFlags                      0x000016b9   Thumb Code    22  fsl_uart.o(.text.UART_GetStatusFlags)
    UART_Init                                0x000016d1   Thumb Code   428  fsl_uart.o(.text.UART_Init)
    UART_RTOS_Deinit                         0x00001921   Thumb Code    68  fsl_uart_freertos.o(.text.UART_RTOS_Deinit)
    UART_RTOS_Init                           0x00001965   Thumb Code   250  fsl_uart_freertos.o(.text.UART_RTOS_Init)
    UART_RTOS_Receive                        0x00001a61   Thumb Code   226  fsl_uart_freertos.o(.text.UART_RTOS_Receive)
    UART_RTOS_Send                           0x00001b45   Thumb Code   128  fsl_uart_freertos.o(.text.UART_RTOS_Send)
    UART_TransferAbortReceive                0x00001bf5   Thumb Code    86  fsl_uart.o(.text.UART_TransferAbortReceive)
    UART_TransferCreateHandle                0x00001c4d   Thumb Code   120  fsl_uart.o(.text.UART_TransferCreateHandle)
    UART_TransferGetRxRingBufferLength       0x00001cc5   Thumb Code    40  fsl_uart.o(.text.UART_TransferGetRxRingBufferLength)
    UART_TransferHandleIRQ                   0x00001ced   Thumb Code  1032  fsl_uart.o(.text.UART_TransferHandleIRQ)
    UART_TransferReceiveNonBlocking          0x00002139   Thumb Code   404  fsl_uart.o(.text.UART_TransferReceiveNonBlocking)
    UART_TransferSendNonBlocking             0x000022e5   Thumb Code   152  fsl_uart.o(.text.UART_TransferSendNonBlocking)
    UART_TransferStartRingBuffer             0x00002395   Thumb Code   100  fsl_uart.o(.text.UART_TransferStartRingBuffer)
    UART_WriteBlocking                       0x0000240d   Thumb Code    34  fsl_uart.o(.text.UART_WriteBlocking)
    __aeabi_assert                           0x00002491   Thumb Code    16  fsl_assert.o(.text.__aeabi_assert)
    main                                     0x000024cd   Thumb Code    64  freertos_uart.o(.text.main)
    pvPortMalloc                             0x00002f05   Thumb Code   334  heap_4.o(.text.pvPortMalloc)
    pvTaskIncrementMutexHeldCount            0x00003055   Thumb Code    24  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    pxPortInitialiseStack                    0x0000306d   Thumb Code    40  port.o(.text.pxPortInitialiseStack)
    uxListRemove                             0x000031a5   Thumb Code    36  list.o(.text.uxListRemove)
    uxTaskResetEventItemValue                0x000031c9   Thumb Code    26  tasks.o(.text.uxTaskResetEventItemValue)
    vEventGroupDelete                        0x000031e5   Thumb Code    66  event_groups.o(.text.vEventGroupDelete)
    vEventGroupSetBitsCallback               0x00003229   Thumb Code     8  event_groups.o(.text.vEventGroupSetBitsCallback)
    vListInitialise                          0x00003231   Thumb Code    22  list.o(.text.vListInitialise)
    vListInitialiseItem                      0x00003249   Thumb Code     6  list.o(.text.vListInitialiseItem)
    vListInsert                              0x00003251   Thumb Code    58  list.o(.text.vListInsert)
    vListInsertEnd                           0x0000328d   Thumb Code    28  list.o(.text.vListInsertEnd)
    vPortEnterCritical                       0x000032bd   Thumb Code    70  port.o(.text.vPortEnterCritical)
    vPortExitCritical                        0x00003305   Thumb Code    46  port.o(.text.vPortExitCritical)
    vPortFree                                0x00003335   Thumb Code   138  heap_4.o(.text.vPortFree)
    vPortSetupTimerInterrupt                 0x000033c1   Thumb Code    52  port.o(.text.vPortSetupTimerInterrupt)
    vPortValidateInterruptPriority           0x000033f5   Thumb Code    98  port.o(.text.vPortValidateInterruptPriority)
    vQueueAddToRegistry                      0x00003459   Thumb Code    40  queue.o(.text.vQueueAddToRegistry)
    vQueueDelete                             0x00003481   Thumb Code    38  queue.o(.text.vQueueDelete)
    vQueueUnregisterQueue                    0x000034a9   Thumb Code    42  queue.o(.text.vQueueUnregisterQueue)
    vQueueWaitForMessageRestricted           0x000034d5   Thumb Code    68  queue.o(.text.vQueueWaitForMessageRestricted)
    vTaskInternalSetTimeOutState             0x00003519   Thumb Code    26  tasks.o(.text.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x00003535   Thumb Code    14  tasks.o(.text.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x00003545   Thumb Code    50  tasks.o(.text.vTaskPlaceOnEventList)
    vTaskPlaceOnEventListRestricted          0x00003579   Thumb Code    62  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    vTaskPlaceOnUnorderedEventList           0x000035b9   Thumb Code    90  tasks.o(.text.vTaskPlaceOnUnorderedEventList)
    vTaskPriorityDisinheritAfterTimeout      0x00003615   Thumb Code   186  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    vTaskRemoveFromUnorderedEventList        0x000036d1   Thumb Code   150  tasks.o(.text.vTaskRemoveFromUnorderedEventList)
    vTaskStartScheduler                      0x00003769   Thumb Code   148  tasks.o(.text.vTaskStartScheduler)
    vTaskSuspend                             0x00003805   Thumb Code   248  tasks.o(.text.vTaskSuspend)
    vTaskSuspendAll                          0x000038fd   Thumb Code    16  tasks.o(.text.vTaskSuspendAll)
    vTaskSwitchContext                       0x0000390d   Thumb Code   134  tasks.o(.text.vTaskSwitchContext)
    xEventGroupClearBits                     0x00003995   Thumb Code    72  event_groups.o(.text.xEventGroupClearBits)
    xEventGroupCreate                        0x000039dd   Thumb Code    28  event_groups.o(.text.xEventGroupCreate)
    xEventGroupSetBits                       0x000039f9   Thumb Code   158  event_groups.o(.text.xEventGroupSetBits)
    xEventGroupSetBitsFromISR                0x00003a99   Thumb Code    22  event_groups.o(.text.xEventGroupSetBitsFromISR)
    xEventGroupWaitBits                      0x00003ab1   Thumb Code   288  event_groups.o(.text.xEventGroupWaitBits)
    xPortStartScheduler                      0x00003bd1   Thumb Code   274  port.o(.text.xPortStartScheduler)
    xQueueCreateMutex                        0x00003ce5   Thumb Code    22  queue.o(.text.xQueueCreateMutex)
    xQueueGenericCreate                      0x00003cfd   Thumb Code   112  queue.o(.text.xQueueGenericCreate)
    xQueueGenericReset                       0x00003d6d   Thumb Code   126  queue.o(.text.xQueueGenericReset)
    xQueueGenericSend                        0x00003ded   Thumb Code   418  queue.o(.text.xQueueGenericSend)
    xQueueGenericSendFromISR                 0x00003f91   Thumb Code   232  queue.o(.text.xQueueGenericSendFromISR)
    xQueueReceive                            0x00004079   Thumb Code   388  queue.o(.text.xQueueReceive)
    xQueueSemaphoreTake                      0x000041fd   Thumb Code   454  queue.o(.text.xQueueSemaphoreTake)
    xTaskCheckForTimeOut                     0x000043c5   Thumb Code   140  tasks.o(.text.xTaskCheckForTimeOut)
    xTaskCreate                              0x00004451   Thumb Code    96  tasks.o(.text.xTaskCreate)
    xTaskGetSchedulerState                   0x000044b1   Thumb Code    38  tasks.o(.text.xTaskGetSchedulerState)
    xTaskGetTickCount                        0x000044d9   Thumb Code    12  tasks.o(.text.xTaskGetTickCount)
    xTaskIncrementTick                       0x000044e5   Thumb Code   328  tasks.o(.text.xTaskIncrementTick)
    xTaskPriorityDisinherit                  0x0000462d   Thumb Code   170  tasks.o(.text.xTaskPriorityDisinherit)
    xTaskPriorityInherit                     0x000046d9   Thumb Code   170  tasks.o(.text.xTaskPriorityInherit)
    xTaskRemoveFromEventList                 0x00004785   Thumb Code   144  tasks.o(.text.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x00004815   Thumb Code   280  tasks.o(.text.xTaskResumeAll)
    xTimerCreateTimerTask                    0x0000492d   Thumb Code    88  timers.o(.text.xTimerCreateTimerTask)
    xTimerGenericCommand                     0x0000498d   Thumb Code   104  timers.o(.text.xTimerGenericCommand)
    xTimerPendFunctionCallFromISR            0x000049f5   Thumb Code    42  timers.o(.text.xTimerPendFunctionCallFromISR)
    __scatterload_copy                       0x00004a1f   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x00004a2d   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x00004a2f   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    mcgConfig_BOARD_BootClockRUN             0x00004a3c   Data          11  clock_config.o(.rodata.mcgConfig_BOARD_BootClockRUN)
    oscConfig_BOARD_BootClockRUN             0x00004a48   Data           8  clock_config.o(.rodata.oscConfig_BOARD_BootClockRUN)
    s_uartIRQ                                0x00004a80   Data           6  fsl_uart.o(.rodata.s_uartIRQ)
    simConfig_BOARD_BootClockRUN             0x00004a88   Data           8  clock_config.o(.rodata.simConfig_BOARD_BootClockRUN)
    uxTopUsedPriority                        0x00004c70   Data           4  tasks.o(.rodata.uxTopUsedPriority)
    Region$$Table$$Base                      0x00004c74   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00004c94   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20000000   Data           4  system_mk64f12.o(.data.SystemCoreClock)
    s_uartIsr                                0x2000000c   Data           4  fsl_uart.o(.data.s_uartIsr)
    send_hardware_overrun                    0x20000010   Data           4  freertos_uart.o(.data.send_hardware_overrun)
    send_ring_overrun                        0x20000014   Data           4  freertos_uart.o(.data.send_ring_overrun)
    to_send                                  0x20000018   Data           4  freertos_uart.o(.data.to_send)
    uart_config                              0x2000001c   Data          24  freertos_uart.o(.data.uart_config)
    background_buffer                        0x20000038   Data          32  freertos_uart.o(.bss.background_buffer)
    g_serialHandle                           0x20000058   Data           4  fsl_debug_console.o(.bss.g_serialHandle)
    g_xtal0Freq                              0x2000005c   Data           4  fsl_clock.o(.bss.g_xtal0Freq)
    g_xtal32Freq                             0x20000060   Data           4  fsl_clock.o(.bss.g_xtal32Freq)
    handle                                   0x20000064   Data          40  freertos_uart.o(.bss.handle)
    pxCurrentTCB                             0x20000090   Data           4  tasks.o(.bss.pxCurrentTCB)
    recv_buffer                              0x2000010c   Data           4  freertos_uart.o(.bss.recv_buffer)
    s_uartHandle                             0x20000130   Data          24  fsl_uart.o(.bss.s_uartHandle)
    t_handle                                 0x20000148   Data          48  freertos_uart.o(.bss.t_handle)
    xQueueRegistry                           0x20002a1c   Data          64  queue.o(.bss.xQueueRegistry)
    Image$$ARM_LIB_HEAP$$ZI$$Base            0x20002aa0   Number         0  anon$$obj.o ABSOLUTE
    Image$$ARM_LIB_HEAP$$ZI$$Limit           0x20002ea0   Number         0  anon$$obj.o ABSOLUTE
    Image$$ARM_LIB_STACK$$ZI$$Limit          0x20030000   Number         0  anon$$obj.o ABSOLUTE



==============================================================================

Memory Map of the image

  Image Entry point : 0x00000425

  Load Region LR_m_text (Base: 0x00000000, Size: 0x00004ccc, Max: 0x00100000, ABSOLUTE)

    Execution Region VECTOR_ROM (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00000400, Max: 0x00000400, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x00000400   Data   RO          868    .isr_vector         startup_mk64f12.o


    Execution Region ER_m_flash_config (Exec base: 0x00000400, Load base: 0x00000400, Size: 0x00000010, Max: 0x00000010, ABSOLUTE, FIXED)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000400   0x00000400   0x00000010   Data   RO          869    .FlashConfig        startup_mk64f12.o


    Execution Region ER_m_text (Exec base: 0x00000410, Load base: 0x00000410, Size: 0x00004884, Max: 0x000ffbf0, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000410   0x00000410   0x00000000   Code   RO         1323  * .ARM.Collect$$$$00000000  mc_w.l(entry.o)
    0x00000410   0x00000410   0x00000004   Code   RO         1375    .ARM.Collect$$$$00000003  mc_w.l(entry4.o)
    0x00000414   0x00000414   0x00000004   Code   RO         1378    .ARM.Collect$$$$00000004  mc_w.l(entry5.o)
    0x00000418   0x00000418   0x00000000   Code   RO         1380    .ARM.Collect$$$$00000008  mc_w.l(entry7b.o)
    0x00000418   0x00000418   0x00000000   Code   RO         1382    .ARM.Collect$$$$0000000A  mc_w.l(entry8b.o)
    0x00000418   0x00000418   0x00000008   Code   RO         1383    .ARM.Collect$$$$0000000B  mc_w.l(entry9a.o)
    0x00000420   0x00000420   0x00000000   Code   RO         1385    .ARM.Collect$$$$0000000D  mc_w.l(entry10a.o)
    0x00000420   0x00000420   0x00000000   Code   RO         1387    .ARM.Collect$$$$0000000F  mc_w.l(entry11a.o)
    0x00000420   0x00000420   0x00000004   Code   RO         1376    .ARM.Collect$$$$00002714  mc_w.l(entry4.o)
    0x00000424   0x00000424   0x000001dc   Code   RO          867  * .text               startup_mk64f12.o
    0x00000600   0x00000600   0x00000028   Code   RO         1328    .text               mc_w.l(memcpy.o)
    0x00000628   0x00000628   0x00000024   Code   RO         1332    .text               mc_w.l(memseta.o)
    0x0000064c   0x0000064c   0x0000000e   Code   RO         1334    .text               mc_w.l(strlen.o)
    0x0000065a   0x0000065a   0x00000002   PAD
    0x0000065c   0x0000065c   0x00000024   Code   RO         1429    .text               mc_w.l(init.o)
    0x00000680   0x00000680   0x00000058   Code   RO           54    .text.BOARD_BootClockRUN  clock_config.o
    0x000006d8   0x000006d8   0x00000008   Code   RO           52    .text.BOARD_InitBootClocks  clock_config.o
    0x000006e0   0x000006e0   0x00000008   Code   RO           28    .text.BOARD_InitBootPins  pin_mux.o
    0x000006e8   0x000006e8   0x00000024   Code   RO           30    .text.BOARD_InitPins  pin_mux.o
    0x0000070c   0x0000070c   0x0000004a   Code   RO          213    .text.CLOCK_BootToPeeMode  fsl_clock.o
    0x00000756   0x00000756   0x00000002   PAD
    0x00000758   0x00000758   0x00000012   Code   RO           60    .text.CLOCK_CONFIG_SetFllExtRefDiv  clock_config.o
    0x0000076a   0x0000076a   0x00000002   PAD
    0x0000076c   0x0000076c   0x0000001e   Code   RO          245    .text.CLOCK_DisableClock  fsl_uart.o
    0x0000078a   0x0000078a   0x00000002   PAD
    0x0000078c   0x0000078c   0x00000012   Code   RO           32    .text.CLOCK_EnableClock  pin_mux.o
    0x0000079e   0x0000079e   0x00000002   PAD
    0x000007a0   0x000007a0   0x0000001c   Code   RO          241    .text.CLOCK_EnableClock  fsl_uart.o
    0x000007bc   0x000007bc   0x00000050   Code   RO          155    .text.CLOCK_EnablePll0  fsl_clock.o
    0x0000080c   0x0000080c   0x0000006c   Code   RO          103    .text.CLOCK_GetEr32kClkFreq  fsl_clock.o
    0x00000878   0x00000878   0x0000001e   Code   RO          125    .text.CLOCK_GetFixedFreqClkFreq  fsl_clock.o
    0x00000896   0x00000896   0x00000002   PAD
    0x00000898   0x00000898   0x00000064   Code   RO          219    .text.CLOCK_GetFllExtRefClkFreq  fsl_clock.o
    0x000008fc   0x000008fc   0x00000050   Code   RO          107    .text.CLOCK_GetFllFreq  fsl_clock.o
    0x0000094c   0x0000094c   0x00000022   Code   RO          145    .text.CLOCK_GetFllRefClkFreq  fsl_clock.o
    0x0000096e   0x0000096e   0x00000002   PAD
    0x00000970   0x00000970   0x000000b8   Code   RO          123    .text.CLOCK_GetFreq  fsl_clock.o
    0x00000a28   0x00000a28   0x00000018   Code   RO          127    .text.CLOCK_GetInternalRefClkFreq  fsl_clock.o
    0x00000a40   0x00000a40   0x00000030   Code   RO          141    .text.CLOCK_GetInternalRefClkSelectFreq  fsl_clock.o
    0x00000a70   0x00000a70   0x00000094   Code   RO          143    .text.CLOCK_GetMcgExtClkFreq  fsl_clock.o
    0x00000b04   0x00000b04   0x00000048   Code   RO          101    .text.CLOCK_GetOsc0ErClkFreq  fsl_clock.o
    0x00000b4c   0x00000b4c   0x00000020   Code   RO          169    .text.CLOCK_GetOscRangeFromFreq  fsl_clock.o
    0x00000b6c   0x00000b6c   0x00000030   Code   RO          113    .text.CLOCK_GetOutClkFreq  fsl_clock.o
    0x00000b9c   0x00000b9c   0x00000050   Code   RO          109    .text.CLOCK_GetPll0Freq  fsl_clock.o
    0x00000bec   0x00000bec   0x00000008   Code   RO          147    .text.CLOCK_GetPll0RefFreq  fsl_clock.o
    0x00000bf4   0x00000bf4   0x00000034   Code   RO          105    .text.CLOCK_GetPllFllSelClkFreq  fsl_clock.o
    0x00000c28   0x00000c28   0x00000058   Code   RO          167    .text.CLOCK_InitOsc0  fsl_clock.o
    0x00000c80   0x00000c80   0x00000012   Code   RO          133    .text.CLOCK_SetEr32kClock  fsl_clock.o
    0x00000c92   0x00000c92   0x00000002   PAD
    0x00000c94   0x00000c94   0x0000003a   Code   RO          149    .text.CLOCK_SetExternalRefClkConfig  fsl_clock.o
    0x00000cce   0x00000cce   0x00000002   PAD
    0x00000cd0   0x00000cd0   0x00000092   Code   RO          151    .text.CLOCK_SetInternalRefClkConfig  fsl_clock.o
    0x00000d62   0x00000d62   0x00000002   PAD
    0x00000d64   0x00000d64   0x00000072   Code   RO          197    .text.CLOCK_SetPbeMode  fsl_clock.o
    0x00000dd6   0x00000dd6   0x00000002   PAD
    0x00000dd8   0x00000dd8   0x00000012   Code   RO          131    .text.CLOCK_SetPllFllSelClock  fsl_clock.o
    0x00000dea   0x00000dea   0x00000002   PAD
    0x00000dec   0x00000dec   0x0000001e   Code   RO          129    .text.CLOCK_SetSimConfig  fsl_clock.o
    0x00000e0a   0x00000e0a   0x00000002   PAD
    0x00000e0c   0x00000e0c   0x00000010   Code   RO           56    .text.CLOCK_SetSimSafeDivs  clock_config.o
    0x00000e1c   0x00000e1c   0x00000014   Code   RO           58    .text.CLOCK_SetXtal0Freq  clock_config.o
    0x00000e30   0x00000e30   0x0000004a   Code   RO          637    .text.ConvertRadixNumToString  fsl_str.o
    0x00000e7a   0x00000e7a   0x00000002   PAD
    0x00000e7c   0x00000e7c   0x00000044   Code   RO          699    .text.DbgConsole_PrintCallback  fsl_debug_console.o
    0x00000ec0   0x00000ec0   0x00000020   Code   RO          695    .text.DbgConsole_Printf  fsl_debug_console.o
    0x00000ee0   0x00000ee0   0x0000003e   Code   RO          679    .text.DbgConsole_SendDataReliable  fsl_debug_console.o
    0x00000f1e   0x00000f1e   0x00000002   PAD
    0x00000f20   0x00000f20   0x00000042   Code   RO          697    .text.DbgConsole_Vprintf  fsl_debug_console.o
    0x00000f62   0x00000f62   0x00000002   PAD
    0x00000f64   0x00000f64   0x0000000c   Code   RO          283    .text.DisableGlobalIRQ  fsl_uart.o
    0x00000f70   0x00000f70   0x00000006   Code   RO          285    .text.EnableGlobalIRQ  fsl_uart.o
    0x00000f76   0x00000f76   0x00000002   PAD
    0x00000f78   0x00000f78   0x00000014   Code   RO          279    .text.EnableIRQ     fsl_uart.o
    0x00000f8c   0x00000f8c   0x00000066   Code   RO          754    .text.HAL_UartSendBlocking  fsl_adapter_uart.o
    0x00000ff2   0x00000ff2   0x00000002   PAD
    0x00000ff4   0x00000ff4   0x00000014   Code   RO          171    .text.OSC_SetCapLoad  fsl_clock.o
    0x00001008   0x00001008   0x00000016   Code   RO          173    .text.OSC_SetExtRefClkConfig  fsl_clock.o
    0x0000101e   0x0000101e   0x00000002   PAD
    0x00001020   0x00001020   0x00000018   Code   RO           34    .text.PORT_SetPinMux  pin_mux.o
    0x00001038   0x00001038   0x00000008   PAD
    0x00001040   0x00001040   0x00000064   Code   RO         1307    .text.PendSV_Handler  port.o
    0x000010a4   0x000010a4   0x00000016   Code   RO          633    .text.PrintFilterLengthFlag  fsl_str.o
    0x000010ba   0x000010ba   0x00000002   PAD
    0x000010bc   0x000010bc   0x00000028   Code   RO          631    .text.PrintGetPrecision  fsl_str.o
    0x000010e4   0x000010e4   0x0000001a   Code   RO          649    .text.PrintGetRadixFromobpu  fsl_str.o
    0x000010fe   0x000010fe   0x00000002   PAD
    0x00001100   0x00001100   0x0000003e   Code   RO          629    .text.PrintGetWidth  fsl_str.o
    0x0000113e   0x0000113e   0x00000002   PAD
    0x00001140   0x00001140   0x00000010   Code   RO          635    .text.PrintIsdi     fsl_str.o
    0x00001150   0x00001150   0x0000000e   Code   RO          641    .text.PrintIsfF     fsl_str.o
    0x0000115e   0x0000115e   0x00000002   PAD
    0x00001160   0x00001160   0x00000024   Code   RO          647    .text.PrintIsobpu   fsl_str.o
    0x00001184   0x00001184   0x0000000e   Code   RO          643    .text.PrintIsxX     fsl_str.o
    0x00001192   0x00001192   0x00000002   PAD
    0x00001194   0x00001194   0x00000032   Code   RO          639    .text.PrintOutputdifFobpu  fsl_str.o
    0x000011c6   0x000011c6   0x00000002   PAD
    0x000011c8   0x000011c8   0x00000032   Code   RO          645    .text.PrintOutputxX  fsl_str.o
    0x000011fa   0x000011fa   0x00000006   PAD
    0x00001200   0x00001200   0x00000024   Code   RO         1291    .text.SVC_Handler   port.o
    0x00001224   0x00001224   0x00000014   Code   RO          798    .text.SerialManager_StartWriting  fsl_component_serial_manager.o
    0x00001238   0x00001238   0x00000022   Code   RO          788    .text.SerialManager_Write  fsl_component_serial_manager.o
    0x0000125a   0x0000125a   0x00000002   PAD
    0x0000125c   0x0000125c   0x00000008   Code   RO          786    .text.SerialManager_WriteBlocking  fsl_component_serial_manager.o
    0x00001264   0x00001264   0x0000001a   Code   RO          814    .text.Serial_UartWrite  fsl_component_serial_port_uart.o
    0x0000127e   0x0000127e   0x00000002   PAD
    0x00001280   0x00001280   0x00000188   Code   RO          627    .text.StrFormatPrintf  fsl_str.o
    0x00001408   0x00001408   0x0000002e   Code   RO         1309    .text.SysTick_Handler  port.o
    0x00001436   0x00001436   0x00000002   PAD
    0x00001438   0x00001438   0x00000034   Code   RO          731    .text.SystemInit    system_mk64f12.o
    0x0000146c   0x0000146c   0x00000002   Code   RO          733    .text.SystemInitHook  system_mk64f12.o
    0x0000146e   0x0000146e   0x00000002   PAD
    0x00001470   0x00001470   0x00000026   Code   RO          313    .text.UART0_DriverIRQHandler  fsl_uart.o
    0x00001496   0x00001496   0x00000002   PAD
    0x00001498   0x00001498   0x0000000c   Code   RO          315    .text.UART0_RX_TX_DriverIRQHandler  fsl_uart.o
    0x000014a4   0x000014a4   0x00000026   Code   RO          317    .text.UART1_DriverIRQHandler  fsl_uart.o
    0x000014ca   0x000014ca   0x00000002   PAD
    0x000014cc   0x000014cc   0x0000000c   Code   RO          319    .text.UART1_RX_TX_DriverIRQHandler  fsl_uart.o
    0x000014d8   0x000014d8   0x00000026   Code   RO          321    .text.UART2_DriverIRQHandler  fsl_uart.o
    0x000014fe   0x000014fe   0x00000002   PAD
    0x00001500   0x00001500   0x0000000c   Code   RO          323    .text.UART2_RX_TX_DriverIRQHandler  fsl_uart.o
    0x0000150c   0x0000150c   0x00000026   Code   RO          325    .text.UART3_DriverIRQHandler  fsl_uart.o
    0x00001532   0x00001532   0x00000002   PAD
    0x00001534   0x00001534   0x0000000c   Code   RO          327    .text.UART3_RX_TX_DriverIRQHandler  fsl_uart.o
    0x00001540   0x00001540   0x00000026   Code   RO          329    .text.UART4_DriverIRQHandler  fsl_uart.o
    0x00001566   0x00001566   0x00000002   PAD
    0x00001568   0x00001568   0x0000000c   Code   RO          331    .text.UART4_RX_TX_DriverIRQHandler  fsl_uart.o
    0x00001574   0x00001574   0x00000026   Code   RO          333    .text.UART5_DriverIRQHandler  fsl_uart.o
    0x0000159a   0x0000159a   0x00000002   PAD
    0x0000159c   0x0000159c   0x0000000c   Code   RO          335    .text.UART5_RX_TX_DriverIRQHandler  fsl_uart.o
    0x000015a8   0x000015a8   0x00000036   Code   RO          269    .text.UART_ClearStatusFlags  fsl_uart.o
    0x000015de   0x000015de   0x00000002   PAD
    0x000015e0   0x000015e0   0x0000002c   Code   RO          243    .text.UART_Deinit   fsl_uart.o
    0x0000160c   0x0000160c   0x0000000a   Code   RO          579    .text.UART_EnableRx  fsl_uart_freertos.o
    0x00001616   0x00001616   0x00000002   PAD
    0x00001618   0x00001618   0x0000000a   Code   RO          577    .text.UART_EnableTx  fsl_uart_freertos.o
    0x00001622   0x00001622   0x00000002   PAD
    0x00001624   0x00001624   0x00000038   Code   RO          247    .text.UART_GetDefaultConfig  fsl_uart.o
    0x0000165c   0x0000165c   0x0000005c   Code   RO          235    .text.UART_GetInstance  fsl_uart.o
    0x000016b8   0x000016b8   0x00000016   Code   RO          267    .text.UART_GetStatusFlags  fsl_uart.o
    0x000016ce   0x000016ce   0x00000002   PAD
    0x000016d0   0x000016d0   0x000001d8   Code   RO          239    .text.UART_Init     fsl_uart.o
    0x000018a8   0x000018a8   0x00000076   Code   RO          575    .text.UART_RTOS_Callback  fsl_uart_freertos.o
    0x0000191e   0x0000191e   0x00000002   PAD
    0x00001920   0x00001920   0x00000044   Code   RO          581    .text.UART_RTOS_Deinit  fsl_uart_freertos.o
    0x00001964   0x00001964   0x000000fa   Code   RO          573    .text.UART_RTOS_Init  fsl_uart_freertos.o
    0x00001a5e   0x00001a5e   0x00000002   PAD
    0x00001a60   0x00001a60   0x000000e2   Code   RO          585    .text.UART_RTOS_Receive  fsl_uart_freertos.o
    0x00001b42   0x00001b42   0x00000002   PAD
    0x00001b44   0x00001b44   0x00000080   Code   RO          583    .text.UART_RTOS_Send  fsl_uart_freertos.o
    0x00001bc4   0x00001bc4   0x00000030   Code   RO          305    .text.UART_ReadNonBlocking  fsl_uart.o
    0x00001bf4   0x00001bf4   0x00000056   Code   RO          297    .text.UART_TransferAbortReceive  fsl_uart.o
    0x00001c4a   0x00001c4a   0x00000002   PAD
    0x00001c4c   0x00001c4c   0x00000078   Code   RO          275    .text.UART_TransferCreateHandle  fsl_uart.o
    0x00001cc4   0x00001cc4   0x00000028   Code   RO          237    .text.UART_TransferGetRxRingBufferLength  fsl_uart.o
    0x00001cec   0x00001cec   0x0000041c   Code   RO          277    .text.UART_TransferHandleIRQ  fsl_uart.o
    0x00002108   0x00002108   0x0000002e   Code   RO          307    .text.UART_TransferIsRxRingBufferFull  fsl_uart.o
    0x00002136   0x00002136   0x00000002   PAD
    0x00002138   0x00002138   0x000001ac   Code   RO          295    .text.UART_TransferReceiveNonBlocking  fsl_uart.o
    0x000022e4   0x000022e4   0x000000b0   Code   RO          289    .text.UART_TransferSendNonBlocking  fsl_uart.o
    0x00002394   0x00002394   0x00000078   Code   RO          281    .text.UART_TransferStartRingBuffer  fsl_uart.o
    0x0000240c   0x0000240c   0x00000022   Code   RO          271    .text.UART_WriteBlocking  fsl_uart.o
    0x0000242e   0x0000242e   0x00000002   PAD
    0x00002430   0x00002430   0x00000030   Code   RO          309    .text.UART_WriteNonBlocking  fsl_uart.o
    0x00002460   0x00002460   0x00000020   Code   RO          337    .text.__NVIC_EnableIRQ  fsl_uart.o
    0x00002480   0x00002480   0x0000000e   Code   RO            6    .text.__NVIC_SetPriority  freertos_uart.o
    0x0000248e   0x0000248e   0x00000002   PAD
    0x00002490   0x00002490   0x0000003c   Code   RO          722    .text.__aeabi_assert  fsl_assert.o
    0x000024cc   0x000024cc   0x00000068   Code   RO            4    .text.main          freertos_uart.o
    0x00002534   0x00002534   0x000000a2   Code   RO         1081    .text.prvAddCurrentTaskToDelayedList  tasks.o
    0x000025d6   0x000025d6   0x00000002   PAD
    0x000025d8   0x000025d8   0x000000ae   Code   RO         1069    .text.prvAddNewTaskToReadyList  tasks.o
    0x00002686   0x00002686   0x00000002   PAD
    0x00002688   0x00002688   0x0000006c   Code   RO         1222    .text.prvCheckForValidListAndQueue  timers.o
    0x000026f4   0x000026f4   0x0000004e   Code   RO         1187    .text.prvCheckTasksWaitingTermination  tasks.o
    0x00002742   0x00002742   0x00000002   PAD
    0x00002744   0x00002744   0x00000026   Code   RO          962    .text.prvCopyDataFromQueue  queue.o
    0x0000276a   0x0000276a   0x00000002   PAD
    0x0000276c   0x0000276c   0x0000007a   Code   RO          950    .text.prvCopyDataToQueue  queue.o
    0x000027e6   0x000027e6   0x00000002   PAD
    0x000027e8   0x000027e8   0x00000012   Code   RO         1075    .text.prvDeleteTCB  tasks.o
    0x000027fa   0x000027fa   0x00000002   PAD
    0x000027fc   0x000027fc   0x00000012   Code   RO          966    .text.prvGetDisinheritPriorityAfterTimeout  queue.o
    0x0000280e   0x0000280e   0x00000002   PAD
    0x00002810   0x00002810   0x00000020   Code   RO         1258    .text.prvGetNextExpireTime  timers.o
    0x00002830   0x00002830   0x00000076   Code   RO          597    .text.prvHeapInit   heap_4.o
    0x000028a6   0x000028a6   0x00000002   PAD
    0x000028a8   0x000028a8   0x0000002a   Code   RO         1107    .text.prvIdleTask   tasks.o
    0x000028d2   0x000028d2   0x00000002   PAD
    0x000028d4   0x000028d4   0x00000020   Code   RO          938    .text.prvInitialiseMutex  queue.o
    0x000028f4   0x000028f4   0x00000020   Code   RO          934    .text.prvInitialiseNewQueue  queue.o
    0x00002914   0x00002914   0x000000b8   Code   RO         1067    .text.prvInitialiseNewTask  tasks.o
    0x000029cc   0x000029cc   0x0000006e   Code   RO         1185    .text.prvInitialiseTaskLists  tasks.o
    0x00002a3a   0x00002a3a   0x00000002   PAD
    0x00002a3c   0x00002a3c   0x0000005a   Code   RO          599    .text.prvInsertBlockIntoFreeList  heap_4.o
    0x00002a96   0x00002a96   0x00000002   PAD
    0x00002a98   0x00002a98   0x00000040   Code   RO         1270    .text.prvInsertTimerInActiveList  timers.o
    0x00002ad8   0x00002ad8   0x00000018   Code   RO          964    .text.prvIsQueueEmpty  queue.o
    0x00002af0   0x00002af0   0x0000001c   Code   RO          952    .text.prvIsQueueFull  queue.o
    0x00002b0c   0x00002b0c   0x00000028   Code   RO         1299    .text.prvPortStartFirstTask  port.o
    0x00002b34   0x00002b34   0x0000006e   Code   RO         1266    .text.prvProcessExpiredTimer  timers.o
    0x00002ba2   0x00002ba2   0x00000002   PAD
    0x00002ba4   0x00002ba4   0x00000122   Code   RO         1262    .text.prvProcessReceivedCommands  timers.o
    0x00002cc6   0x00002cc6   0x00000002   PAD
    0x00002cc8   0x00002cc8   0x00000080   Code   RO         1260    .text.prvProcessTimerOrBlockTask  timers.o
    0x00002d48   0x00002d48   0x00000026   Code   RO         1073    .text.prvResetNextTaskUnblockTime  tasks.o
    0x00002d6e   0x00002d6e   0x00000002   PAD
    0x00002d70   0x00002d70   0x0000002a   Code   RO         1264    .text.prvSampleTimeNow  timers.o
    0x00002d9a   0x00002d9a   0x00000002   PAD
    0x00002d9c   0x00002d9c   0x0000008e   Code   RO         1268    .text.prvSwitchTimerLists  timers.o
    0x00002e2a   0x00002e2a   0x00000002   PAD
    0x00002e2c   0x00002e2c   0x00000032   Code   RO         1289    .text.prvTaskExitError  port.o
    0x00002e5e   0x00002e5e   0x00000002   PAD
    0x00002e60   0x00002e60   0x00000018   Code   RO          884    .text.prvTestWaitCondition  event_groups.o
    0x00002e78   0x00002e78   0x00000016   Code   RO         1224    .text.prvTimerTask  timers.o
    0x00002e8e   0x00002e8e   0x00000002   PAD
    0x00002e90   0x00002e90   0x00000072   Code   RO          954    .text.prvUnlockQueue  queue.o
    0x00002f02   0x00002f02   0x00000002   PAD
    0x00002f04   0x00002f04   0x0000014e   Code   RO          595    .text.pvPortMalloc  heap_4.o
    0x00003052   0x00003052   0x00000002   PAD
    0x00003054   0x00003054   0x00000018   Code   RO         1169    .text.pvTaskIncrementMutexHeldCount  tasks.o
    0x0000306c   0x0000306c   0x00000028   Code   RO         1287    .text.pxPortInitialiseStack  port.o
    0x00003094   0x00003094   0x00000110   Code   RO            8    .text.uart_task     freertos_uart.o
    0x000031a4   0x000031a4   0x00000024   Code   RO          920    .text.uxListRemove  list.o
    0x000031c8   0x000031c8   0x0000001a   Code   RO         1167    .text.uxTaskResetEventItemValue  tasks.o
    0x000031e2   0x000031e2   0x00000002   PAD
    0x000031e4   0x000031e4   0x00000042   Code   RO          894    .text.vEventGroupDelete  event_groups.o
    0x00003226   0x00003226   0x00000002   PAD
    0x00003228   0x00003228   0x00000008   Code   RO          896    .text.vEventGroupSetBitsCallback  event_groups.o
    0x00003230   0x00003230   0x00000016   Code   RO          912    .text.vListInitialise  list.o
    0x00003246   0x00003246   0x00000002   PAD
    0x00003248   0x00003248   0x00000006   Code   RO          914    .text.vListInitialiseItem  list.o
    0x0000324e   0x0000324e   0x00000002   PAD
    0x00003250   0x00003250   0x0000003a   Code   RO          918    .text.vListInsert   list.o
    0x0000328a   0x0000328a   0x00000002   PAD
    0x0000328c   0x0000328c   0x0000001c   Code   RO          916    .text.vListInsertEnd  list.o
    0x000032a8   0x000032a8   0x00000014   Code   RO         1297    .text.vPortEnableVFP  port.o
    0x000032bc   0x000032bc   0x00000046   Code   RO         1303    .text.vPortEnterCritical  port.o
    0x00003302   0x00003302   0x00000002   PAD
    0x00003304   0x00003304   0x0000002e   Code   RO         1305    .text.vPortExitCritical  port.o
    0x00003332   0x00003332   0x00000002   PAD
    0x00003334   0x00003334   0x0000008a   Code   RO          601    .text.vPortFree     heap_4.o
    0x000033be   0x000033be   0x00000002   PAD
    0x000033c0   0x000033c0   0x00000034   Code   RO         1295    .text.vPortSetupTimerInterrupt  port.o
    0x000033f4   0x000033f4   0x00000062   Code   RO         1311    .text.vPortValidateInterruptPriority  port.o
    0x00003456   0x00003456   0x00000002   PAD
    0x00003458   0x00003458   0x00000028   Code   RO          994    .text.vQueueAddToRegistry  queue.o
    0x00003480   0x00003480   0x00000026   Code   RO          980    .text.vQueueDelete  queue.o
    0x000034a6   0x000034a6   0x00000002   PAD
    0x000034a8   0x000034a8   0x0000002a   Code   RO          982    .text.vQueueUnregisterQueue  queue.o
    0x000034d2   0x000034d2   0x00000002   PAD
    0x000034d4   0x000034d4   0x00000044   Code   RO          998    .text.vQueueWaitForMessageRestricted  queue.o
    0x00003518   0x00003518   0x0000001a   Code   RO         1139    .text.vTaskInternalSetTimeOutState  tasks.o
    0x00003532   0x00003532   0x00000002   PAD
    0x00003534   0x00003534   0x0000000e   Code   RO         1143    .text.vTaskMissedYield  tasks.o
    0x00003542   0x00003542   0x00000002   PAD
    0x00003544   0x00003544   0x00000032   Code   RO         1127    .text.vTaskPlaceOnEventList  tasks.o
    0x00003576   0x00003576   0x00000002   PAD
    0x00003578   0x00003578   0x0000003e   Code   RO         1131    .text.vTaskPlaceOnEventListRestricted  tasks.o
    0x000035b6   0x000035b6   0x00000002   PAD
    0x000035b8   0x000035b8   0x0000005a   Code   RO         1129    .text.vTaskPlaceOnUnorderedEventList  tasks.o
    0x00003612   0x00003612   0x00000002   PAD
    0x00003614   0x00003614   0x000000ba   Code   RO         1165    .text.vTaskPriorityDisinheritAfterTimeout  tasks.o
    0x000036ce   0x000036ce   0x00000002   PAD
    0x000036d0   0x000036d0   0x00000096   Code   RO         1135    .text.vTaskRemoveFromUnorderedEventList  tasks.o
    0x00003766   0x00003766   0x00000002   PAD
    0x00003768   0x00003768   0x0000009c   Code   RO         1105    .text.vTaskStartScheduler  tasks.o
    0x00003804   0x00003804   0x000000f8   Code   RO         1095    .text.vTaskSuspend  tasks.o
    0x000038fc   0x000038fc   0x00000010   Code   RO         1079    .text.vTaskSuspendAll  tasks.o
    0x0000390c   0x0000390c   0x00000086   Code   RO         1097    .text.vTaskSwitchContext  tasks.o
    0x00003992   0x00003992   0x00000002   PAD
    0x00003994   0x00003994   0x00000048   Code   RO          886    .text.xEventGroupClearBits  event_groups.o
    0x000039dc   0x000039dc   0x0000001c   Code   RO          876    .text.xEventGroupCreate  event_groups.o
    0x000039f8   0x000039f8   0x0000009e   Code   RO          880    .text.xEventGroupSetBits  event_groups.o
    0x00003a96   0x00003a96   0x00000002   PAD
    0x00003a98   0x00003a98   0x00000016   Code   RO          898    .text.xEventGroupSetBitsFromISR  event_groups.o
    0x00003aae   0x00003aae   0x00000002   PAD
    0x00003ab0   0x00003ab0   0x00000120   Code   RO          882    .text.xEventGroupWaitBits  event_groups.o
    0x00003bd0   0x00003bd0   0x00000112   Code   RO         1293    .text.xPortStartScheduler  port.o
    0x00003ce2   0x00003ce2   0x00000002   PAD
    0x00003ce4   0x00003ce4   0x00000016   Code   RO          936    .text.xQueueCreateMutex  queue.o
    0x00003cfa   0x00003cfa   0x00000002   PAD
    0x00003cfc   0x00003cfc   0x00000070   Code   RO          932    .text.xQueueGenericCreate  queue.o
    0x00003d6c   0x00003d6c   0x0000007e   Code   RO          930    .text.xQueueGenericReset  queue.o
    0x00003dea   0x00003dea   0x00000002   PAD
    0x00003dec   0x00003dec   0x000001a2   Code   RO          942    .text.xQueueGenericSend  queue.o
    0x00003f8e   0x00003f8e   0x00000002   PAD
    0x00003f90   0x00003f90   0x000000e8   Code   RO          956    .text.xQueueGenericSendFromISR  queue.o
    0x00004078   0x00004078   0x00000184   Code   RO          960    .text.xQueueReceive  queue.o
    0x000041fc   0x000041fc   0x000001c6   Code   RO          946    .text.xQueueSemaphoreTake  queue.o
    0x000043c2   0x000043c2   0x00000002   PAD
    0x000043c4   0x000043c4   0x0000008c   Code   RO         1141    .text.xTaskCheckForTimeOut  tasks.o
    0x00004450   0x00004450   0x00000060   Code   RO         1065    .text.xTaskCreate   tasks.o
    0x000044b0   0x000044b0   0x00000026   Code   RO         1159    .text.xTaskGetSchedulerState  tasks.o
    0x000044d6   0x000044d6   0x00000002   PAD
    0x000044d8   0x000044d8   0x0000000c   Code   RO         1113    .text.xTaskGetTickCount  tasks.o
    0x000044e4   0x000044e4   0x00000148   Code   RO         1111    .text.xTaskIncrementTick  tasks.o
    0x0000462c   0x0000462c   0x000000aa   Code   RO         1163    .text.xTaskPriorityDisinherit  tasks.o
    0x000046d6   0x000046d6   0x00000002   PAD
    0x000046d8   0x000046d8   0x000000aa   Code   RO         1161    .text.xTaskPriorityInherit  tasks.o
    0x00004782   0x00004782   0x00000002   PAD
    0x00004784   0x00004784   0x00000090   Code   RO         1133    .text.xTaskRemoveFromEventList  tasks.o
    0x00004814   0x00004814   0x00000118   Code   RO         1083    .text.xTaskResumeAll  tasks.o
    0x0000492c   0x0000492c   0x00000060   Code   RO         1220    .text.xTimerCreateTimerTask  timers.o
    0x0000498c   0x0000498c   0x00000068   Code   RO         1230    .text.xTimerGenericCommand  timers.o
    0x000049f4   0x000049f4   0x0000002a   Code   RO         1250    .text.xTimerPendFunctionCallFromISR  timers.o
    0x00004a1e   0x00004a1e   0x0000000e   Code   RO         1435    i.__scatterload_copy  mc_w.l(handlers.o)
    0x00004a2c   0x00004a2c   0x00000002   Code   RO         1436    i.__scatterload_null  mc_w.l(handlers.o)
    0x00004a2e   0x00004a2e   0x0000000e   Code   RO         1437    i.__scatterload_zeroinit  mc_w.l(handlers.o)
    0x00004a3c   0x00004a3c   0x0000000b   Data   RO           68    .rodata.mcgConfig_BOARD_BootClockRUN  clock_config.o
    0x00004a47   0x00004a47   0x00000001   PAD
    0x00004a48   0x00004a48   0x00000008   Data   RO           70    .rodata.oscConfig_BOARD_BootClockRUN  clock_config.o
    0x00004a50   0x00004a50   0x00000018   Data   RO          761    .rodata.s_UartAdapterBase  fsl_adapter_uart.o
    0x00004a68   0x00004a68   0x00000018   Data   RO          342    .rodata.s_uartClock  fsl_uart.o
    0x00004a80   0x00004a80   0x00000006   Data   RO          339    .rodata.s_uartIRQ   fsl_uart.o
    0x00004a86   0x00004a86   0x00000002   PAD
    0x00004a88   0x00004a88   0x00000008   Data   RO           69    .rodata.simConfig_BOARD_BootClockRUN  clock_config.o
    0x00004a90   0x00004a90   0x00000056   Data   RO           10    .rodata.str1.1      freertos_uart.o
    0x00004ae6   0x00004ae6   0x0000003a   Data   RO          222    .rodata.str1.1      fsl_clock.o
    0x00004b20   0x00004b20   0x0000010b   Data   RO          341    .rodata.str1.1      fsl_uart.o
    0x00004c2b   0x00004c2b   0x00000045   Data   RO          760    .rodata.str1.1      fsl_adapter_uart.o
    0x00004c70   0x00004c70   0x00000004   Data   RO         1190    .rodata.uxTopUsedPriority  tasks.o
    0x00004c74   0x00004c74   0x00000020   Data   RO         1434    Region$$Table       anon$$obj.o


    Execution Region RW_m_data (Exec base: 0x1fff0000, Load base: 0x00004c94, Size: 0x00000000, Max: 0x00010000, ABSOLUTE)

    **** No section assigned to this execution region ****


    Execution Region RW_m_data_2 (Exec base: 0x20000000, Load base: 0x00004c94, Size: 0x00002aa0, Max: 0x0002f800, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00004c94   0x00000004   Data   RW          737    .data.SystemCoreClock  system_mk64f12.o
    0x20000004   0x00004c98   0x00000004   Data   RW          225    .data.s_fastIrcFreq  fsl_clock.o
    0x20000008   0x00004c9c   0x00000004   Data   RW          224    .data.s_slowIrcFreq  fsl_clock.o
    0x2000000c   0x00004ca0   0x00000004   Data   RW          340    .data.s_uartIsr     fsl_uart.o
    0x20000010   0x00004ca4   0x00000004   Data   RW           13    .data.send_hardware_overrun  freertos_uart.o
    0x20000014   0x00004ca8   0x00000004   Data   RW           12    .data.send_ring_overrun  freertos_uart.o
    0x20000018   0x00004cac   0x00000004   Data   RW           11    .data.to_send       freertos_uart.o
    0x2000001c   0x00004cb0   0x00000018   Data   RW           15    .data.uart_config   freertos_uart.o
    0x20000034   0x00004cc8   0x00000004   Data   RW         1315    .data.uxCriticalNesting  port.o
    0x20000038        -       0x00000020   Zero   RW           14    .bss.background_buffer  freertos_uart.o
    0x20000058        -       0x00000004   Zero   RW          713    .bss.g_serialHandle  fsl_debug_console.o
    0x2000005c        -       0x00000004   Zero   RW          221    .bss.g_xtal0Freq    fsl_clock.o
    0x20000060        -       0x00000004   Zero   RW          223    .bss.g_xtal32Freq   fsl_clock.o
    0x20000064        -       0x00000028   Zero   RW           17    .bss.handle         freertos_uart.o
    0x2000008c        -       0x00000004   Zero   RW         1276    .bss.prvSampleTimeNow.xLastTime  timers.o
    0x20000090        -       0x00000004   Zero   RW         1189    .bss.pxCurrentTCB   tasks.o
    0x20000094        -       0x00000004   Zero   RW         1274    .bss.pxCurrentTimerList  timers.o
    0x20000098        -       0x00000004   Zero   RW         1200    .bss.pxDelayedTaskList  tasks.o
    0x2000009c        -       0x00000004   Zero   RW          611    .bss.pxEnd          heap_4.o
    0x200000a0        -       0x00000004   Zero   RW         1201    .bss.pxOverflowDelayedTaskList  tasks.o
    0x200000a4        -       0x00000004   Zero   RW         1275    .bss.pxOverflowTimerList  timers.o
    0x200000a8        -       0x00000064   Zero   RW         1191    .bss.pxReadyTasksLists  tasks.o
    0x2000010c        -       0x00000004   Zero   RW           16    .bss.recv_buffer    freertos_uart.o
    0x20000110        -       0x00000020   Zero   RW          711    .bss.s_debugConsoleState  fsl_debug_console.o
    0x20000130        -       0x00000018   Zero   RW          343    .bss.s_uartHandle   fsl_uart.o
    0x20000148        -       0x00000030   Zero   RW           18    .bss.t_handle       freertos_uart.o
    0x20000178        -       0x00002800   Zero   RW          618    .bss.ucHeap         heap_4.o
    0x20002978        -       0x00000001   Zero   RW         1313    .bss.ucMaxSysCallPriority  port.o
    0x20002979   0x00004ccc   0x00000003   PAD
    0x2000297c        -       0x00000004   Zero   RW         1314    .bss.ulMaxPRIGROUPValue  port.o
    0x20002980        -       0x00000004   Zero   RW         1196    .bss.uxCurrentNumberOfTasks  tasks.o
    0x20002984        -       0x00000004   Zero   RW         1195    .bss.uxDeletedTasksWaitingCleanUp  tasks.o
    0x20002988        -       0x00000004   Zero   RW         1198    .bss.uxSchedulerSuspended  tasks.o
    0x2000298c        -       0x00000004   Zero   RW         1193    .bss.uxTaskNumber   tasks.o
    0x20002990        -       0x00000004   Zero   RW         1192    .bss.uxTopReadyPriority  tasks.o
    0x20002994        -       0x00000014   Zero   RW         1277    .bss.xActiveTimerList1  timers.o
    0x200029a8        -       0x00000014   Zero   RW         1278    .bss.xActiveTimerList2  timers.o
    0x200029bc        -       0x00000001   Zero   RW          612    .bss.xBlockAllocatedBit  heap_4.o
    0x200029bd   0x00004ccc   0x00000003   PAD
    0x200029c0        -       0x00000014   Zero   RW         1210    .bss.xDelayedTaskList1  tasks.o
    0x200029d4        -       0x00000014   Zero   RW         1211    .bss.xDelayedTaskList2  tasks.o
    0x200029e8        -       0x00000004   Zero   RW          613    .bss.xFreeBytesRemaining  heap_4.o
    0x200029ec        -       0x00000004   Zero   RW         1205    .bss.xIdleTaskHandle  tasks.o
    0x200029f0        -       0x00000004   Zero   RW          615    .bss.xMinimumEverFreeBytesRemaining  heap_4.o
    0x200029f4        -       0x00000004   Zero   RW         1206    .bss.xNextTaskUnblockTime  tasks.o
    0x200029f8        -       0x00000004   Zero   RW         1208    .bss.xNumOfOverflows  tasks.o
    0x200029fc        -       0x00000004   Zero   RW          616    .bss.xNumberOfSuccessfulAllocations  heap_4.o
    0x20002a00        -       0x00000004   Zero   RW          617    .bss.xNumberOfSuccessfulFrees  heap_4.o
    0x20002a04        -       0x00000004   Zero   RW         1207    .bss.xPendedTicks   tasks.o
    0x20002a08        -       0x00000014   Zero   RW         1204    .bss.xPendingReadyList  tasks.o
    0x20002a1c        -       0x00000040   Zero   RW         1000    .bss.xQueueRegistry  queue.o
    0x20002a5c        -       0x00000004   Zero   RW         1197    .bss.xSchedulerRunning  tasks.o
    0x20002a60        -       0x00000008   Zero   RW          614    .bss.xStart         heap_4.o
    0x20002a68        -       0x00000014   Zero   RW         1202    .bss.xSuspendedTaskList  tasks.o
    0x20002a7c        -       0x00000014   Zero   RW         1194    .bss.xTasksWaitingTermination  tasks.o
    0x20002a90        -       0x00000004   Zero   RW         1199    .bss.xTickCount     tasks.o
    0x20002a94        -       0x00000004   Zero   RW         1272    .bss.xTimerQueue    timers.o
    0x20002a98        -       0x00000004   Zero   RW         1273    .bss.xTimerTaskHandle  timers.o
    0x20002a9c        -       0x00000004   Zero   RW         1203    .bss.xYieldPending  tasks.o


    Execution Region ARM_LIB_HEAP (Exec base: 0x20002aa0, Load base: 0x00004ccc, Size: 0x00000400, Max: 0x00000400, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20002aa0        -       0x00000400   Zero   RW            1    ARM_LIB_HEAP.bss    anon$$obj.o


    Execution Region ARM_LIB_STACK (Exec base: 0x2002fc00, Load base: 0x00004ccc, Size: 0x00000400, Max: 0x00000400, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x2002fc00        -       0x00000400   Zero   RW            2    ARM_LIB_STACK.bss   anon$$obj.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       150          0         27          0          0       5059   clock_config.o
       666          0          0          0          0       8530   event_groups.o
       390         40         86         36        124       8501   freertos_uart.o
       102          0         93          0          0       6180   fsl_adapter_uart.o
        60         44          0          0          0        695   fsl_assert.o
      1716        120         58          8          8      24972   fsl_clock.o
        62          0          0          0          0       8612   fsl_component_serial_manager.o
        26          0          0          0          0       4281   fsl_component_serial_port_uart.o
       228          0          0          0         36       8939   fsl_debug_console.o
       796          0          0          0          0      11822   fsl_str.o
      3366        184        297          4         24      26256   fsl_uart.o
       810          8          0          0          0       9055   fsl_uart_freertos.o
       680          0          0          0      10269       4789   heap_4.o
       150          0          0          0          0       2242   list.o
        86          0          0          0          0       3714   pin_mux.o
       872         16          0          4          5       3956   port.o
      2348          0          0          0         64      20196   queue.o
       476        232       1040          0          0       2299   startup_mk64f12.o
        54          0          0          4          0       3573   system_mk64f12.o
      3366          8          4          0        260      29689   tasks.o
      1180         26          0          0         60      12490   timers.o

    ----------------------------------------------------------------------
     17786        678       1640         56      12904     205850   Object Totals
         0          0         32          0       2048          0   (incl. Generated)
       202          0          3          0          6          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry4.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        36          8          0          0          0         68   init.o
        40          0          0          0          0         76   memcpy.o
        36          0          0          0          0        108   memseta.o
        14          0          0          0          0         68   strlen.o

    ----------------------------------------------------------------------
       178         16          0          0          0        320   Library Totals
         2          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       176         16          0          0          0        320   mc_w.l

    ----------------------------------------------------------------------
       178         16          0          0          0        320   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     17964        694       1640         56      12904     205942   Grand Totals
     17964        694       1640         56      12904     205942   ELF Image Totals
     17964        694       1640         56          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                19604 (  19.14kB)
    Total RW  Size (RW Data + ZI Data)             12960 (  12.66kB)
    Total ROM Size (Code + RO Data + RW Data)      19660 (  19.20kB)

==============================================================================

